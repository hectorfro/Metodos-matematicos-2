%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 127 575 664
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Wednesday, October 20, 2010 3:35:58 AM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
426 412 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 426.0 412.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 416 402 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
2 J
0 j
0.0 0.0 1.0 RG
54.0 370.0 translate
3 0 5 FPL
5 0
10 5
5 10
-54.0 -370.0 translate
119.0 342.0 translate
3 0 5 FPL
5 0
10 5
5 10
-119.0 -342.0 translate
184.0 328.0 translate
3 0 5 FPL
5 0
10 5
5 10
-184.0 -328.0 translate
248.0 230.0 translate
3 0 5 FPL
5 0
10 5
5 10
-248.0 -230.0 translate
314.0 202.0 translate
3 0 5 FPL
5 0
10 5
5 10
-314.0 -202.0 translate
379.0 6.0 translate
3 0 5 FPL
5 0
10 5
5 10
-379.0 -6.0 translate
Q
Q
q
2 J
0 j
q
1 415 378 OPL
415 380
1 350 378 OPL
350 380
1 285 378 OPL
285 380
1 220 378 OPL
220 380
1 155 378 OPL
155 380
1 90 378 OPL
90 380
1 25 378 OPL
25 380
1 25 378 OPL
415 378
Q
q
q
1 58 378 OPL
58 383
-5.0 -5.0 translate
59.0 402.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -258 2000 891 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -258 2000 891
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 333.0078125 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 365.234375 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 166 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 277 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 138 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 166 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 145 607  curveto
192 560 228 504 253 440  curveto
279 376 291 310 291 240  curveto
291 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 166 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 256 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 152 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 416 259 416 219  curveto
416 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
395 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 468  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
19 344 moveto
544 572 lineto
544 529 lineto
92 333 lineto
544 135 lineto
544 91 lineto
19 320 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 20 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 100 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
41 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 41 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 291  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 41  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 652 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 41  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 41  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 41  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
190 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 41  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 527 399 467  curveto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 41 311 41  curveto
359 41 lineto
410 41 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
777 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 520 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 520 518 520 479  curveto
520 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 309 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
41 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 41 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
565 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 402 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 322  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 402 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 166 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 218  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 388 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 402 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 13 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
145 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 145 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 263 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 291  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 166 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 20 265 20  curveto
297 20 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 6 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 454 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 145 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 65 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 145 594  curveto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 270 429  curveto
270 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 395 395 395 405  curveto
395 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 395  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
190 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 41 415  curveto
34 420 22 425 5 429  curveto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 270 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
520 329 moveto
542 329 lineto
541 287 529 254 506 230  curveto
483 206 455 194 422 194  curveto
407 194 391 196 374 201  curveto
357 206 312 224 240 253  curveto
190 274 154 284 133 284  curveto
111 284 91 277 76 263  curveto
60 249 49 226 42 195  curveto
21 195 lineto
23 239 35 272 57 296  curveto
79 319 105 331 135 331  curveto
150 331 164 328 179 324  curveto
213 314 258 297 313 274  curveto
368 250 407 238 429 238  curveto
454 238 474 246 491 262  curveto
507 277 517 300 520 329  curveto
closepath
fill
		} def

	/exclamdown
		{
166 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 166 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 166 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -138 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 131 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
270 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 131 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 6 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -27 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
204 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
166 394 moveto
180 394 192 389 202 379  curveto
212 369 217 357 217 343  curveto
217 329 212 317 202 307  curveto
192 297 180 291 166 291  curveto
152 291 140 297 130 307  curveto
120 317 115 329 115 343  curveto
115 357 120 369 130 379  curveto
140 389 152 394 166 394  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
99 -166 moveto
99 -145 lineto
132 -133 158 -116 177 -93  curveto
195 -70 204 -45 204 -19  curveto
204 -13 203 -8 200 -3  curveto
197 0 195 0 193 0  curveto
189 0 181 -2 169 -9  curveto
164 -12 157 -13 151 -13  curveto
135 -13 122 -8 113 0  curveto
103 9 99 22 99 39  curveto
99 55 105 69 117 80  curveto
129 91 144 97 162 97  curveto
183 97 202 88 219 69  curveto
236 50 244 26 244 -4  curveto
244 -38 232 -69 209 -98  curveto
186 -127 149 -149 99 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 13 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 425 moveto
56 445 lineto
89 464 110 481 120 496  curveto
131 511 136 528 136 548  curveto
136 557 134 564 131 569  curveto
127 573 123 576 119 576  curveto
116 576 111 574 104 572  curveto
96 569 89 568 82 568  curveto
68 568 57 573 47 583  curveto
37 592 32 604 32 618  curveto
32 634 38 647 51 659  curveto
64 671 79 677 97 677  curveto
118 677 138 667 155 649  curveto
172 630 181 607 181 579  curveto
181 544 170 513 148 485  curveto
126 457 95 437 56 425  curveto
closepath
289 425 moveto
289 445 lineto
317 460 337 475 350 492  curveto
362 508 369 526 369 545  curveto
369 557 367 565 364 569  curveto
361 574 357 576 353 576  curveto
349 576 343 574 336 572  curveto
328 569 322 568 316 568  curveto
303 568 291 573 281 583  curveto
272 593 267 605 267 619  curveto
267 635 273 648 285 660  curveto
297 671 312 677 329 677  curveto
351 677 371 667 389 648  curveto
406 629 415 606 415 578  curveto
415 546 404 515 383 487  curveto
361 459 330 438 289 425  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 145 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
41 663 lineto
52 643 65 629 79 621  curveto
102 607 131 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
166 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 166 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 166 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
closepath
fill
		} def

	/hungarumlaut
		{
343 642 moveto
343 635 341 627 338 618  curveto
334 605 322 578 302 536  curveto
234 392 lineto
213 392 lineto
228 536 lineto
233 578 237 606 241 620  curveto
252 658 273 677 305 677  curveto
330 677 343 665 343 642  curveto
closepath
196 642 moveto
196 635 195 627 191 618  curveto
187 605 175 578 155 536  curveto
88 392 lineto
66 392 lineto
82 536 lineto
86 578 90 606 94 620  curveto
106 658 127 677 158 677  curveto
184 677 196 665 196 642  curveto
closepath
fill
		} def

	/ogonek
		{
159 29 moveto
150 19 141 9 131 0  curveto
121 -11 113 -22 105 -33  curveto
97 -44 91 -55 85 -67  curveto
80 -79 77 -91 77 -104  curveto
76 -121 81 -135 90 -146  curveto
99 -158 112 -164 128 -164  curveto
135 -164 142 -162 149 -160  curveto
157 -158 164 -155 171 -151  curveto
178 -165 lineto
165 -178 152 -189 138 -197  curveto
125 -205 109 -209 91 -209  curveto
79 -209 68 -207 59 -203  curveto
49 -199 41 -193 34 -186  curveto
27 -179 22 -171 19 -161  curveto
15 -152 14 -142 14 -132  curveto
15 -118 18 -104 24 -91  curveto
31 -77 39 -65 48 -53  curveto
54 -46 60 -40 66 -34  curveto
71 -29 78 -23 84 -17  curveto
91 -10 99 -4 108 2  curveto
118 10 129 18 142 29  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 41  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 395 41  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
791 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
closepath
407 625 moveto
233 291 lineto
407 291 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 34 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
72 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 652 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 638 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 631 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 145 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 166  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 416  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 395 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 381 636 336 636 276  curveto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 41  curveto
41 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 145 131  curveto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 20 267 20  curveto
299 20 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 20 248 20  curveto
277 20 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 72 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 20 311 20  curveto
331 20 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 123 378 OPL
123 383
-5.0 -5.0 translate
124.0 402.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
q
1 188 378 OPL
188 383
-5.0 -5.0 translate
189.0 402.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(6) show
Q
5.0 5.0 translate
Q
q
1 252 378 OPL
252 383
-5.0 -5.0 translate
254.0 402.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(8) show
Q
5.0 5.0 translate
Q
q
1 318 378 OPL
318 383
-5.0 -5.0 translate
315.0 402.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(10) show
Q
5.0 5.0 translate
Q
q
1 383 378 OPL
383 383
-5.0 -5.0 translate
380.0 402.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(12) show
Q
5.0 5.0 translate
Q
Q
q
1 25 38 OPL
22 38
1 25 24 OPL
22 24
1 25 10 OPL
22 10
1 25 94 OPL
22 94
1 25 80 OPL
22 80
1 25 52 OPL
22 52
1 25 122 OPL
22 122
1 25 108 OPL
22 108
1 25 192 OPL
22 192
1 25 178 OPL
22 178
1 25 164 OPL
22 164
1 25 150 OPL
22 150
1 25 248 OPL
22 248
1 25 234 OPL
22 234
1 25 220 OPL
22 220
1 25 290 OPL
22 290
1 25 262 OPL
22 262
1 25 332 OPL
22 332
1 25 318 OPL
22 318
1 25 304 OPL
22 304
1 25 374 OPL
22 374
1 25 360 OPL
22 360
1 25 378 OPL
25 6
Q
q
q
1 25 346 OPL
19 346
-5.0 -5.0 translate
6.0 356.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(10) show
Q
5.0 5.0 translate
Q
q
1 25 276 OPL
19 276
-5.0 -5.0 translate
6.0 286.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(15) show
Q
5.0 5.0 translate
Q
q
1 25 206 OPL
19 206
-5.0 -5.0 translate
6.0 216.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(20) show
Q
5.0 5.0 translate
Q
q
1 25 136 OPL
19 136
-5.0 -5.0 translate
6.0 146.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(25) show
Q
5.0 5.0 translate
Q
q
1 25 66 OPL
19 66
-5.0 -5.0 translate
6.0 76.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(30) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 426 412 rc
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
397 351 29 34 rc
401.0 377.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -258 1052 891 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -258 1052 891
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 411.1328125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
189 161 moveto
171 161 lineto
199 220 219 265 232 296  curveto
244 327 260 367 278 417  curveto
315 521 337 581 344 599  curveto
356 628 371 650 389 666  curveto
397 673 408 677 420 677  curveto
429 677 436 673 441 666  curveto
446 659 447 649 444 637  curveto
442 624 435 607 425 586  curveto
403 541 362 468 302 365  curveto
273 317 257 290 254 284  curveto
244 266 223 225 189 161  curveto
closepath
141 83 moveto
155 83 166 79 174 69  curveto
182 59 184 47 182 33  curveto
179 20 172 8 160 -1  curveto
148 -11 135 -16 121 -16  curveto
108 -16 97 -11 89 -1  curveto
81 8 79 20 81 33  curveto
84 47 91 59 103 69  curveto
115 79 128 83 141 83  curveto
closepath
fill
		} def

	/quotedbl
		{
401 392 moveto
443 534 lineto
455 571 462 593 464 600  curveto
473 620 482 636 490 647  curveto
497 656 506 663 517 668  curveto
528 674 540 677 551 677  curveto
562 677 571 674 576 667  curveto
581 661 582 653 580 643  curveto
579 635 574 624 567 611  curveto
548 577 533 551 521 535  curveto
424 392 lineto
closepath
221 392 moveto
266 536 lineto
278 577 288 605 295 620  curveto
305 640 317 654 330 663  curveto
344 672 357 677 371 677  curveto
382 677 391 673 396 667  curveto
401 660 403 652 401 643  curveto
400 635 396 626 391 617  curveto
384 603 366 576 339 536  curveto
242 392 lineto
closepath
fill
		} def

	/numbersign
		{
53 -13 moveto
143 208 lineto
59 208 lineto
67 248 lineto
159 248 lineto
226 416 lineto
101 416 lineto
109 455 lineto
243 455 lineto
332 677 lineto
372 677 lineto
283 455 lineto
448 455 lineto
540 677 lineto
580 677 lineto
489 455 lineto
572 455 lineto
565 416 lineto
474 416 lineto
407 248 lineto
531 248 lineto
523 208 lineto
390 208 lineto
300 -13 lineto
261 -13 lineto
350 208 lineto
184 208 lineto
93 -13 lineto
closepath
200 248 moveto
365 248 lineto
434 416 lineto
267 416 lineto
closepath
fill
		} def

	/dollar
		{
506 626 moveto
391 392 lineto
434 352 462 315 475 280  curveto
485 255 486 227 480 196  curveto
473 160 455 125 428 90  curveto
400 56 367 31 329 14  curveto
291 -1 246 -9 193 -8  curveto
166 -65 lineto
133 -65 lineto
162 -8 lineto
137 -3 116 2 101 10  curveto
85 18 68 30 51 46  curveto
118 184 lineto
138 184 lineto
131 163 125 146 123 132  curveto
118 107 120 84 130 64  curveto
140 45 156 30 179 22  curveto
324 321 lineto
287 355 263 386 251 414  curveto
240 442 237 471 243 503  curveto
253 552 279 591 321 620  curveto
363 650 406 665 448 665  curveto
459 665 473 664 491 662  curveto
510 700 lineto
541 700 lineto
520 657 lineto
541 651 557 644 569 636  curveto
581 628 594 617 609 601  curveto
553 483 lineto
533 483 lineto
537 498 540 510 542 520  curveto
547 547 546 571 537 592  curveto
532 605 522 616 506 626  curveto
closepath
478 635 moveto
464 638 453 639 445 639  curveto
417 639 391 628 366 607  curveto
342 586 326 560 320 528  curveto
316 510 318 492 325 475  curveto
331 457 346 436 369 411  curveto
closepath
206 18 moveto
215 17 223 16 227 16  curveto
250 16 274 22 302 35  curveto
329 47 352 65 370 87  curveto
388 110 400 134 405 160  curveto
409 181 407 203 399 224  curveto
390 245 372 270 345 299  curveto
closepath
fill
		} def

	/percent
		{
952 677 moveto
111 -26 lineto
65 -26 lineto
905 677 lineto
closepath
399 677 moveto
430 677 454 665 471 640  curveto
489 616 494 584 486 544  curveto
474 483 443 431 395 388  curveto
347 344 300 322 255 322  curveto
223 322 197 335 179 360  curveto
162 385 157 416 164 456  curveto
176 514 207 566 257 610  curveto
306 655 354 677 399 677  curveto
closepath
398 656 moveto
382 656 366 649 351 637  curveto
323 615 296 580 269 532  curveto
242 484 224 440 216 399  curveto
213 381 215 367 222 357  curveto
230 346 241 341 254 341  curveto
268 341 281 346 294 355  curveto
321 377 349 412 378 460  curveto
407 508 426 553 435 596  curveto
438 614 436 629 429 640  curveto
422 650 411 656 398 656  curveto
closepath
764 326 moveto
796 326 820 314 838 289  curveto
856 265 861 232 853 191  curveto
845 154 829 118 803 83  curveto
777 49 748 21 714 2  curveto
680 -17 650 -26 623 -26  curveto
590 -26 565 -14 547 9  curveto
529 33 524 64 532 102  curveto
544 162 574 214 624 259  curveto
673 304 720 326 764 326  curveto
closepath
766 306 moveto
749 306 734 300 719 289  curveto
693 268 665 233 637 184  curveto
609 135 591 91 583 51  curveto
580 33 581 19 589 8  curveto
596 -1 607 -7 620 -7  curveto
635 -7 650 -1 663 8  curveto
690 30 718 65 746 114  curveto
775 162 793 206 800 244  curveto
804 263 803 279 796 290  curveto
788 301 779 306 766 306  curveto
closepath
fill
		} def

	/ampersand
		{
595 347 moveto
793 347 lineto
789 328 lineto
759 324 735 316 714 305  curveto
694 293 668 270 637 234  curveto
595 187 561 150 534 123  curveto
560 57 595 24 640 24  curveto
668 24 695 36 723 60  curveto
745 60 lineto
720 33 695 14 671 2  curveto
647 -9 620 -15 590 -15  curveto
558 -15 533 -9 512 2  curveto
492 13 473 33 456 60  curveto
414 33 376 14 341 2  curveto
306 -9 269 -15 229 -15  curveto
170 -15 128 0 102 30  curveto
76 61 68 101 77 150  curveto
89 208 124 259 182 304  curveto
220 332 292 363 397 397  curveto
398 409 399 421 401 432  curveto
402 443 404 453 405 462  curveto
419 528 447 581 489 619  curveto
532 658 577 677 627 677  curveto
660 677 684 668 700 649  curveto
716 631 721 608 715 580  curveto
708 545 688 512 653 480  curveto
619 448 563 420 486 397  curveto
490 300 503 219 524 153  curveto
587 214 622 263 629 299  curveto
630 307 629 314 623 319  curveto
618 324 608 327 591 328  curveto
closepath
486 428 moveto
540 449 577 470 598 489  curveto
627 515 645 545 651 576  curveto
656 597 653 613 644 625  curveto
635 638 622 644 603 644  curveto
580 644 558 633 538 613  curveto
517 592 502 558 493 511  curveto
491 500 489 488 488 474  curveto
487 460 486 445 486 428  curveto
closepath
396 366 moveto
329 343 278 314 243 280  curveto
209 246 188 211 180 174  curveto
172 133 179 99 199 72  curveto
220 46 252 32 294 32  curveto
317 32 338 36 358 43  curveto
378 50 406 65 443 87  curveto
429 120 417 162 408 215  curveto
399 267 395 318 396 366  curveto
closepath
fill
		} def

	/quoteright
		{
209 392 moveto
253 536 lineto
266 577 276 605 283 619  curveto
293 640 305 654 318 663  curveto
331 672 344 677 358 677  curveto
370 677 378 673 384 667  curveto
390 660 391 652 389 642  curveto
388 635 384 626 379 617  curveto
373 605 355 578 327 536  curveto
231 392 lineto
closepath
fill
		} def

	/parenleft
		{
146 -206 moveto
128 -213 lineto
104 -139 89 -74 84 -18  curveto
80 26 82 70 91 115  curveto
112 220 155 314 220 397  curveto
300 499 416 597 569 694  curveto
577 677 lineto
508 632 449 582 400 527  curveto
339 458 283 375 233 277  curveto
183 179 150 90 134 10  curveto
122 -50 126 -122 146 -206  curveto
closepath
fill
		} def

	/parenright
		{
282 685 moveto
300 694 lineto
325 620 339 555 344 499  curveto
349 454 347 410 338 365  curveto
317 260 274 166 209 83  curveto
128 -18 12 -117 -139 -213  curveto
-148 -198 lineto
-79 -153 -20 -103 28 -48  curveto
90 20 145 103 195 201  curveto
245 299 278 388 294 468  curveto
306 529 302 601 282 685  curveto
closepath
fill
		} def

	/asterisk
		{
343 509 moveto
346 532 346 554 342 576  curveto
338 608 337 630 339 642  curveto
342 659 349 672 359 681  curveto
368 689 379 694 391 694  curveto
401 694 409 689 415 681  curveto
420 672 422 659 418 643  curveto
415 628 407 608 393 582  curveto
379 556 369 531 363 509  curveto
383 521 402 534 419 551  curveto
447 576 466 592 478 599  curveto
490 605 502 608 513 608  curveto
524 608 532 604 538 597  curveto
544 590 545 581 543 571  curveto
541 559 534 548 521 539  curveto
508 529 480 520 435 510  curveto
408 505 386 498 368 491  curveto
384 482 403 476 426 471  curveto
464 464 488 455 498 444  curveto
508 434 512 422 510 409  curveto
508 399 502 391 494 384  curveto
485 377 476 373 466 373  curveto
456 373 446 376 435 383  curveto
425 390 412 405 396 429  curveto
386 445 373 460 356 474  curveto
353 456 352 435 355 414  curveto
359 375 359 349 357 335  curveto
354 322 348 311 338 302  curveto
329 293 320 289 311 289  curveto
299 289 289 293 281 303  curveto
275 310 274 320 277 335  curveto
280 351 288 370 300 392  curveto
312 414 319 429 323 437  curveto
327 446 331 458 336 474  curveto
314 461 294 447 277 432  curveto
248 405 226 388 213 381  curveto
203 376 194 373 185 373  curveto
174 373 165 377 159 384  curveto
153 392 150 400 152 409  curveto
154 417 159 426 167 435  curveto
176 444 187 451 202 457  curveto
211 461 232 466 265 473  curveto
286 477 307 483 328 491  curveto
312 500 292 507 269 512  curveto
231 520 207 528 199 535  curveto
187 545 182 558 185 574  curveto
187 583 192 591 201 598  curveto
210 605 219 609 229 609  curveto
240 609 250 605 261 599  curveto
272 592 284 578 298 557  curveto
311 537 326 521 343 509  curveto
closepath
fill
		} def

	/plus
		{
274 68 moveto
323 312 lineto
80 312 lineto
88 352 lineto
331 352 lineto
379 595 lineto
419 595 lineto
371 352 lineto
614 352 lineto
606 312 lineto
363 312 lineto
314 68 lineto
closepath
fill
		} def

	/comma
		{
-32 -109 moveto
-5 -98 17 -84 35 -67  curveto
50 -54 58 -42 60 -30  curveto
62 -24 62 -19 61 -14  curveto
60 -11 56 -6 50 1  curveto
44 9 41 14 40 17  curveto
39 23 39 29 41 36  curveto
43 50 51 62 62 72  curveto
74 82 86 87 99 87  curveto
112 87 123 82 131 71  curveto
139 61 142 47 139 31  curveto
133 2 116 -27 87 -56  curveto
58 -86 20 -109 -25 -125  curveto
closepath
fill
		} def

	/hyphen
		{
349 249 moveto
316 184 lineto
63 184 lineto
96 249 lineto
closepath
fill
		} def

	/period
		{
100 87 moveto
114 87 125 82 133 72  curveto
140 63 143 51 140 38  curveto
137 24 130 12 118 3  curveto
107 -6 94 -11 80 -11  curveto
67 -11 56 -6 48 3  curveto
41 12 38 24 41 38  curveto
44 51 51 63 62 72  curveto
74 82 86 87 100 87  curveto
closepath
fill
		} def

	/slash
		{
520 694 moveto
6 -15 lineto
-36 -15 lineto
479 694 lineto
closepath
fill
		} def

	/zero
		{
480 675 moveto
522 675 554 658 575 623  curveto
597 588 600 533 585 458  curveto
572 394 548 328 514 261  curveto
479 194 438 136 389 86  curveto
351 48 313 20 276 2  curveto
255 -6 231 -11 206 -11  curveto
163 -11 131 5 110 40  curveto
88 75 85 130 100 206  curveto
115 280 144 355 188 430  curveto
239 518 295 585 357 630  curveto
397 660 438 675 480 675  curveto
closepath
476 650 moveto
457 650 436 642 414 628  curveto
392 613 365 582 335 535  curveto
305 488 273 428 240 354  curveto
196 257 167 175 154 107  curveto
147 73 149 48 161 31  curveto
172 14 188 6 209 6  curveto
229 6 247 12 263 25  curveto
308 61 352 121 396 206  curveto
467 345 511 458 528 544  curveto
536 581 534 607 522 624  curveto
511 641 496 650 476 650  curveto
closepath
fill
		} def

	/one
		{
552 675 moveto
285 128 lineto
270 96 261 72 258 58  curveto
255 46 258 37 265 31  curveto
272 24 290 20 320 18  curveto
312 0 lineto
61 0 lineto
71 18 lineto
98 18 116 20 125 24  curveto
140 30 152 38 160 47  curveto
174 62 190 89 209 128  curveto
401 521 lineto
413 545 419 558 421 562  curveto
423 569 425 575 426 581  curveto
428 592 427 601 422 608  curveto
417 614 409 618 399 618  curveto
390 618 376 616 358 612  curveto
355 629 lineto
529 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
19 18 lineto
216 165 350 280 421 364  curveto
454 402 474 443 483 486  curveto
490 520 485 547 468 569  curveto
452 590 427 601 394 601  curveto
348 601 306 579 267 535  curveto
252 542 lineto
277 584 307 617 344 640  curveto
381 664 417 675 454 675  curveto
496 675 529 661 552 632  curveto
575 603 582 568 574 527  curveto
568 499 558 472 543 448  curveto
520 410 482 367 431 320  curveto
352 248 251 164 125 70  curveto
291 70 lineto
318 70 341 76 361 87  curveto
380 98 396 113 407 131  curveto
426 131 lineto
closepath
fill
		} def

	/three
		{
225 361 moveto
228 375 lineto
309 388 372 411 418 446  curveto
451 471 471 500 478 534  curveto
483 560 479 581 466 598  curveto
453 615 435 623 412 623  curveto
375 623 338 600 301 555  curveto
284 561 lineto
309 598 336 627 366 646  curveto
397 666 428 675 459 675  curveto
498 675 527 664 546 641  curveto
565 618 571 589 564 554  curveto
558 524 541 495 513 467  curveto
485 440 442 415 383 393  curveto
414 379 436 359 448 333  curveto
460 307 462 275 455 238  curveto
447 198 427 157 395 116  curveto
364 75 325 44 280 21  curveto
235 0 190 -11 145 -11  curveto
104 -11 74 -4 56 9  curveto
44 19 39 30 41 43  curveto
44 55 50 65 60 73  curveto
70 81 81 85 93 85  curveto
101 85 109 84 117 81  curveto
122 79 134 73 152 62  curveto
170 50 184 43 195 39  curveto
206 35 217 33 229 33  curveto
258 33 286 50 312 84  curveto
337 118 354 154 362 193  curveto
368 224 367 252 359 276  curveto
351 301 335 321 310 336  curveto
286 351 257 359 225 361  curveto
closepath
fill
		} def

	/four
		{
619 662 moveto
405 226 lineto
484 226 lineto
455 166 lineto
375 166 lineto
288 -11 lineto
216 -11 lineto
303 166 lineto
64 166 lineto
98 234 lineto
582 662 lineto
closepath
485 536 moveto
139 226 lineto
334 226 lineto
closepath
fill
		} def

	/five
		{
390 662 moveto
611 662 lineto
572 581 lineto
374 581 lineto
321 500 lineto
372 491 409 475 434 450  curveto
472 412 483 359 470 291  curveto
461 245 444 204 420 168  curveto
396 131 369 100 340 76  curveto
311 51 281 31 251 17  curveto
209 -1 169 -11 130 -11  curveto
98 -11 73 -4 57 9  curveto
46 19 42 31 45 46  curveto
47 58 53 68 63 76  curveto
73 85 85 89 97 89  curveto
114 89 132 80 149 63  curveto
160 52 170 45 177 41  curveto
184 39 191 37 201 37  curveto
238 37 275 55 313 92  curveto
352 129 377 176 388 235  curveto
397 276 395 310 385 339  curveto
374 368 357 388 334 399  curveto
311 411 279 419 237 424  curveto
closepath
fill
		} def

	/six
		{
660 675 moveto
656 656 lineto
598 643 538 616 478 574  curveto
417 532 360 479 308 413  curveto
346 428 376 436 398 436  curveto
440 436 472 421 495 391  curveto
518 361 525 320 514 270  curveto
499 192 461 125 399 70  curveto
338 15 279 -11 221 -11  curveto
168 -11 132 7 113 46  curveto
93 85 89 130 99 181  curveto
112 248 141 314 185 379  curveto
229 444 282 499 344 546  curveto
406 592 468 627 529 649  curveto
566 662 609 671 660 675  curveto
closepath
276 372 moveto
210 273 170 189 156 122  curveto
149 87 153 60 166 40  curveto
180 20 198 10 221 10  curveto
258 10 299 37 342 92  curveto
385 146 414 209 428 281  curveto
436 320 433 349 418 370  curveto
403 391 382 401 356 401  curveto
344 401 333 399 322 396  curveto
311 392 296 384 276 372  curveto
closepath
fill
		} def

	/seven
		{
326 662 moveto
655 662 lineto
652 645 lineto
150 -11 lineto
114 6 lineto
554 584 lineto
397 584 lineto
354 584 324 580 306 572  curveto
289 565 267 546 240 517  curveto
220 517 lineto
closepath
fill
		} def

	/eight
		{
411 370 moveto
436 336 452 305 461 275  curveto
469 245 470 216 465 186  curveto
454 133 424 87 376 47  curveto
328 8 274 -11 215 -11  curveto
162 -11 122 4 95 36  curveto
68 68 59 106 67 149  curveto
75 186 96 222 130 257  curveto
164 293 222 327 304 360  curveto
283 395 269 425 263 448  curveto
258 471 257 494 262 517  curveto
270 560 294 597 333 628  curveto
371 660 415 675 464 675  curveto
511 675 547 662 571 635  curveto
595 608 604 576 596 540  curveto
589 504 571 472 541 442  curveto
511 413 468 389 411 370  curveto
closepath
396 391 moveto
434 403 465 422 490 450  curveto
515 477 530 508 538 544  curveto
544 577 540 603 525 622  curveto
510 641 488 651 457 651  curveto
428 651 403 642 382 624  curveto
360 605 346 582 341 553  curveto
336 531 337 511 343 492  curveto
351 465 369 431 396 391  curveto
closepath
319 340 moveto
266 320 223 290 191 252  curveto
158 214 138 173 129 129  curveto
122 93 127 65 145 43  curveto
162 22 189 11 225 11  curveto
262 11 296 24 326 50  curveto
357 76 376 107 383 143  curveto
389 170 387 199 378 229  curveto
369 259 350 296 319 340  curveto
closepath
fill
		} def

	/nine
		{
26 -11 moveto
29 3 lineto
64 11 95 21 123 35  curveto
172 59 217 89 259 124  curveto
301 159 341 201 377 248  curveto
355 238 339 231 327 229  curveto
315 226 303 224 289 224  curveto
240 224 206 241 186 274  curveto
167 308 162 347 171 392  curveto
186 469 225 536 287 592  curveto
348 647 408 675 465 675  curveto
516 675 552 656 572 617  curveto
592 578 597 533 586 480  curveto
573 414 545 349 501 285  curveto
458 220 405 165 344 118  curveto
282 72 220 37 158 15  curveto
121 1 77 -7 26 -11  curveto
closepath
410 288 moveto
474 381 514 464 529 538  curveto
536 573 532 601 519 620  curveto
505 640 487 649 464 649  curveto
426 649 385 623 343 569  curveto
300 515 272 451 257 377  curveto
249 338 252 309 266 289  curveto
280 269 301 259 328 259  curveto
341 259 352 261 364 264  curveto
375 268 390 276 410 288  curveto
closepath
fill
		} def

	/colon
		{
300 442 moveto
314 442 325 437 333 427  curveto
340 418 343 406 340 393  curveto
338 379 330 367 319 357  curveto
307 348 294 343 281 343  curveto
267 343 256 348 248 357  curveto
241 367 238 379 241 393  curveto
243 406 251 418 262 427  curveto
274 437 287 442 300 442  curveto
closepath
126 88 moveto
140 88 150 84 158 74  curveto
165 64 168 53 165 39  curveto
162 26 155 14 144 5  curveto
132 -4 120 -9 107 -9  curveto
93 -9 82 -4 75 5  curveto
67 14 64 26 67 39  curveto
70 53 77 64 88 74  curveto
100 84 112 88 126 88  curveto
closepath
fill
		} def

	/semicolon
		{
302 441 moveto
315 441 326 436 334 427  curveto
342 417 344 405 341 391  curveto
339 377 332 366 320 356  curveto
308 346 295 341 282 341  curveto
268 341 257 346 250 356  curveto
242 366 239 377 242 391  curveto
245 405 252 417 263 427  curveto
275 436 288 441 302 441  curveto
closepath
-4 -108 moveto
33 -88 58 -73 68 -62  curveto
78 -51 85 -41 87 -30  curveto
88 -24 88 -18 87 -13  curveto
86 -10 83 -5 78 3  curveto
72 11 69 17 68 20  curveto
67 26 67 32 68 39  curveto
71 52 78 64 90 74  curveto
101 84 114 89 126 89  curveto
140 89 151 84 159 73  curveto
167 62 169 48 166 31  curveto
161 9 151 -11 134 -32  curveto
118 -53 97 -72 72 -89  curveto
63 -95 39 -107 0 -125  curveto
closepath
fill
		} def

	/less
		{
87 344 moveto
658 572 lineto
650 529 lineto
158 333 lineto
571 135 lineto
562 91 lineto
83 320 lineto
closepath
fill
		} def

	/equal
		{
104 431 moveto
631 431 lineto
623 391 lineto
96 391 lineto
closepath
72 271 moveto
599 271 lineto
591 231 lineto
64 231 lineto
closepath
fill
		} def

	/greater
		{
607 318 moveto
36 91 lineto
44 133 lineto
536 329 lineto
123 527 lineto
132 572 lineto
612 342 lineto
closepath
fill
		} def

	/question
		{
208 162 moveto
189 162 lineto
202 203 219 239 240 269  curveto
262 299 299 338 353 385  curveto
408 432 445 471 465 500  curveto
479 520 488 541 493 563  curveto
498 589 493 610 478 628  curveto
464 646 442 655 413 655  curveto
386 655 362 649 342 637  curveto
331 631 325 623 323 613  curveto
322 607 323 598 326 586  curveto
329 575 330 566 328 558  curveto
326 547 320 538 311 530  curveto
301 523 291 519 280 519  curveto
268 519 259 523 253 531  curveto
247 539 245 550 248 563  curveto
253 592 272 618 305 642  curveto
337 665 378 677 426 677  curveto
476 677 514 663 539 635  curveto
564 606 573 574 566 538  curveto
560 509 548 484 529 462  curveto
505 434 462 402 402 366  curveto
342 330 300 298 274 270  curveto
249 242 227 206 208 162  curveto
closepath
163 83 moveto
176 83 187 79 195 69  curveto
203 59 205 48 203 34  curveto
200 20 193 8 181 0  curveto
169 -10 157 -15 143 -15  curveto
129 -15 119 -10 111 0  curveto
103 8 100 20 103 34  curveto
106 48 113 59 125 69  curveto
136 79 149 83 163 83  curveto
closepath
fill
		} def

	/at
		{
781 467 moveto
684 272 lineto
649 200 627 153 618 134  curveto
610 114 604 99 602 87  curveto
600 76 602 68 607 61  curveto
613 53 621 50 631 50  curveto
655 50 686 62 724 85  curveto
762 109 798 148 833 201  curveto
867 255 890 310 902 368  curveto
913 424 910 475 892 522  curveto
875 570 844 606 800 631  curveto
756 656 705 669 646 669  curveto
570 669 497 649 424 609  curveto
352 569 289 512 237 437  curveto
184 362 150 284 134 204  curveto
119 129 122 61 142 0  curveto
163 -61 200 -107 254 -138  curveto
308 -170 369 -186 438 -186  curveto
523 -186 605 -163 684 -117  curveto
762 -71 829 -4 884 83  curveto
913 83 lineto
866 -5 798 -77 710 -132  curveto
622 -188 528 -215 429 -215  curveto
352 -215 284 -197 225 -160  curveto
166 -124 124 -72 101 -5  curveto
78 62 74 136 90 216  curveto
107 302 144 382 199 457  curveto
254 531 322 589 403 631  curveto
485 673 566 694 648 694  curveto
715 694 773 680 822 652  curveto
870 624 903 584 921 530  curveto
939 476 941 420 929 359  curveto
917 300 892 241 854 182  curveto
816 124 774 81 727 55  curveto
681 28 636 15 591 15  curveto
566 15 549 20 539 32  curveto
528 44 525 60 530 82  curveto
533 100 541 124 553 153  curveto
493 95 447 57 414 40  curveto
382 23 355 14 333 14  curveto
309 14 291 24 277 45  curveto
263 66 260 93 267 128  curveto
276 175 302 228 345 287  curveto
387 345 438 393 496 430  curveto
539 457 575 470 604 470  curveto
626 470 643 465 655 453  curveto
668 442 674 425 675 403  curveto
702 457 lineto
closepath
605 447 moveto
581 447 553 434 523 409  curveto
479 371 437 320 398 256  curveto
370 209 353 171 347 143  curveto
343 122 345 105 354 93  curveto
363 80 375 73 389 73  curveto
408 73 429 80 453 95  curveto
477 109 503 131 532 161  curveto
561 191 583 221 600 250  curveto
628 302 646 344 652 377  curveto
656 398 654 416 645 428  curveto
635 441 622 447 605 447  curveto
closepath
fill
		} def

	/A
		{
650 677 moveto
490 126 lineto
482 100 477 83 476 75  curveto
473 62 473 52 477 45  curveto
481 36 488 29 498 24  curveto
508 20 525 18 550 18  curveto
541 0 lineto
280 0 lineto
289 18 lineto
300 18 lineto
322 18 340 22 355 31  curveto
366 37 375 48 383 62  curveto
389 72 397 96 408 133  curveto
432 217 lineto
243 217 lineto
157 126 lineto
138 105 125 91 119 82  curveto
114 73 110 64 109 57  curveto
106 46 109 37 116 30  curveto
123 22 136 18 155 18  curveto
146 0 lineto
-48 0 lineto
-39 18 lineto
-15 19 7 27 28 42  curveto
50 57 84 89 130 139  curveto
633 677 lineto
closepath
521 514 moveto
277 253 lineto
443 253 lineto
closepath
fill
		} def

	/B
		{
276 644 moveto
287 662 lineto
523 662 lineto
563 662 597 655 626 643  curveto
654 631 674 613 685 591  curveto
696 569 699 546 694 521  curveto
687 483 666 448 632 418  curveto
599 387 549 364 484 350  curveto
521 335 547 315 561 290  curveto
574 265 578 238 573 208  curveto
566 176 551 144 528 114  curveto
505 84 479 61 449 44  curveto
419 28 385 16 346 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-12 18 lineto
12 18 30 21 40 25  curveto
54 30 65 38 72 47  curveto
82 59 98 88 120 132  curveto
319 533 lineto
336 567 346 590 348 604  curveto
351 616 348 626 341 633  curveto
333 640 317 643 292 643  curveto
286 643 281 643 276 644  curveto
closepath
320 369 moveto
341 368 357 368 366 368  curveto
434 368 487 382 526 412  curveto
565 441 589 478 598 522  curveto
604 556 600 582 583 601  curveto
567 620 536 629 492 629  curveto
480 629 465 627 446 623  curveto
closepath
159 42 moveto
193 38 220 36 240 36  curveto
291 36 339 51 384 82  curveto
430 112 458 154 468 206  curveto
476 246 470 277 450 300  curveto
431 322 394 333 340 333  curveto
329 333 317 333 301 332  curveto
closepath
fill
		} def

	/C
		{
839 677 moveto
746 462 lineto
729 462 lineto
738 516 lineto
740 536 740 553 737 568  curveto
734 584 728 597 718 608  curveto
709 619 696 628 679 635  curveto
663 641 643 644 622 644  curveto
563 644 509 628 459 596  curveto
395 555 340 498 294 424  curveto
256 363 230 301 218 238  curveto
205 174 213 122 243 84  curveto
273 46 318 27 378 27  curveto
423 27 465 37 504 57  curveto
544 77 583 108 621 150  curveto
644 150 lineto
597 93 549 52 500 25  curveto
451 -1 396 -15 335 -15  curveto
281 -15 236 -3 199 18  curveto
161 41 136 73 122 114  curveto
109 155 107 199 116 246  curveto
131 318 164 389 216 457  curveto
269 525 333 579 408 618  curveto
484 657 556 677 624 677  curveto
656 677 691 669 728 654  curveto
744 647 756 644 764 644  curveto
772 644 779 646 786 649  curveto
792 652 804 661 820 677  curveto
closepath
fill
		} def

	/D
		{
275 644 moveto
284 662 lineto
496 662 lineto
585 662 649 651 689 631  curveto
728 610 756 578 772 534  curveto
789 490 793 443 783 392  curveto
774 349 758 307 735 266  curveto
712 225 689 192 665 168  curveto
642 143 607 116 563 86  curveto
518 57 472 35 424 21  curveto
376 7 318 0 250 0  curveto
-29 0 lineto
-19 18 lineto
6 18 23 20 33 24  curveto
47 30 58 37 66 47  curveto
78 61 94 88 114 129  curveto
312 530 lineto
327 561 337 586 340 604  curveto
343 617 340 626 333 633  curveto
326 640 310 644 286 644  curveto
closepath
444 625 moveto
202 129 lineto
184 92 174 69 172 61  curveto
171 55 172 50 174 45  curveto
176 41 180 37 186 36  curveto
194 33 207 31 226 31  curveto
277 31 326 37 372 47  curveto
417 58 456 73 489 94  curveto
534 125 575 166 609 219  curveto
643 272 667 333 681 400  curveto
696 477 689 534 660 571  curveto
631 608 582 627 512 627  curveto
494 627 472 626 444 625  curveto
closepath
fill
		} def

	/E
		{
449 626 moveto
320 364 lineto
383 364 lineto
427 364 460 371 483 385  curveto
505 398 527 423 549 459  curveto
567 459 lineto
451 219 lineto
432 219 lineto
442 239 448 257 451 271  curveto
454 285 453 296 449 305  curveto
445 313 438 319 429 323  curveto
420 328 400 330 368 330  curveto
305 330 lineto
197 110 lineto
187 89 180 73 178 62  curveto
176 54 179 46 186 40  curveto
190 35 204 33 226 33  curveto
284 33 lineto
348 33 401 44 444 66  curveto
487 89 529 128 570 184  curveto
588 184 lineto
489 0 lineto
-22 0 lineto
-12 18 lineto
13 18 30 20 40 24  curveto
54 30 65 38 72 47  curveto
84 60 100 88 120 131  curveto
317 530 lineto
332 562 342 587 345 604  curveto
347 616 345 626 338 633  curveto
331 640 315 644 289 644  curveto
279 644 lineto
289 662 lineto
764 662 lineto
691 502 lineto
673 502 lineto
679 517 682 529 684 540  curveto
688 557 686 571 680 583  curveto
672 598 658 609 639 617  curveto
624 623 589 626 533 626  curveto
closepath
fill
		} def

	/F
		{
450 626 moveto
320 364 lineto
406 364 lineto
445 364 476 370 498 382  curveto
519 394 545 420 573 459  curveto
591 459 lineto
474 218 lineto
455 218 lineto
464 238 469 254 472 267  curveto
476 286 472 302 461 313  curveto
450 324 427 329 391 329  curveto
303 329 lineto
205 129 lineto
188 94 178 70 175 59  curveto
173 47 176 37 183 31  curveto
191 24 212 20 246 18  curveto
237 0 lineto
-24 0 lineto
-14 18 lineto
11 18 28 20 37 24  curveto
51 30 62 37 70 47  curveto
82 60 98 88 118 129  curveto
315 528 lineto
331 561 340 586 344 604  curveto
346 612 345 620 342 626  curveto
339 632 334 636 326 639  curveto
318 642 302 644 277 644  curveto
287 662 lineto
800 662 lineto
718 494 lineto
700 494 lineto
707 514 712 531 715 544  curveto
719 565 717 582 707 595  curveto
698 607 684 616 667 622  curveto
655 625 626 626 580 626  curveto
closepath
fill
		} def

	/G
		{
855 677 moveto
764 468 lineto
745 468 lineto
753 493 758 511 760 522  curveto
767 554 758 583 735 607  curveto
712 632 675 644 626 644  curveto
525 644 433 597 349 501  curveto
283 426 241 342 222 249  curveto
210 187 215 134 238 89  curveto
260 44 304 21 370 21  curveto
386 21 402 23 417 26  curveto
432 29 455 35 487 45  curveto
569 216 lineto
581 239 588 258 591 272  curveto
593 284 591 293 583 299  curveto
572 308 550 313 520 313  curveto
506 313 lineto
515 332 lineto
791 332 lineto
782 313 lineto
757 313 738 310 725 304  curveto
713 299 701 289 691 276  curveto
683 267 669 242 648 199  curveto
566 32 lineto
518 13 479 0 450 -6  curveto
422 -12 392 -15 362 -15  curveto
292 -15 239 -2 201 23  curveto
162 49 137 84 125 127  curveto
113 170 112 213 120 256  curveto
132 313 154 368 189 419  curveto
223 471 262 514 305 550  curveto
348 586 393 614 439 634  curveto
503 663 567 677 632 677  curveto
679 677 720 669 755 653  curveto
769 647 779 644 787 644  curveto
795 644 802 646 808 650  curveto
815 653 824 662 836 677  curveto
closepath
fill
		} def

	/H
		{
319 366 moveto
625 366 lineto
706 530 lineto
722 562 731 586 735 604  curveto
736 612 736 620 733 626  curveto
730 632 725 636 717 639  curveto
709 642 693 644 668 644  curveto
676 662 lineto
943 662 lineto
933 644 lineto
911 644 894 642 882 637  curveto
865 630 852 621 842 610  curveto
828 595 812 568 793 530  curveto
596 130 lineto
580 97 570 73 567 59  curveto
565 46 567 37 575 31  curveto
582 24 602 20 634 18  curveto
625 0 lineto
367 0 lineto
378 18 lineto
403 18 421 20 430 24  curveto
444 30 455 38 463 47  curveto
474 60 490 87 510 130  curveto
611 333 lineto
303 333 lineto
203 130 lineto
187 97 177 74 174 59  curveto
172 46 174 37 181 31  curveto
189 24 208 20 240 18  curveto
233 0 lineto
-26 0 lineto
-16 18 lineto
9 18 26 20 36 24  curveto
50 30 61 38 69 47  curveto
80 60 96 88 117 130  curveto
314 530 lineto
330 562 340 587 343 604  curveto
345 612 344 620 341 626  curveto
338 632 333 636 325 639  curveto
317 642 300 644 275 644  curveto
285 662 lineto
546 662 lineto
537 644 lineto
515 644 499 642 487 637  curveto
471 630 458 622 448 611  curveto
436 597 420 569 400 530  curveto
closepath
fill
		} def

	/I
		{
250 18 moveto
241 0 lineto
-31 0 lineto
-20 18 lineto
6 18 25 20 34 24  curveto
50 30 62 38 71 47  curveto
84 63 101 90 120 129  curveto
315 529 lineto
332 562 342 587 345 604  curveto
347 612 346 620 343 625  curveto
340 631 334 636 326 639  curveto
318 642 302 644 277 644  curveto
286 662 lineto
542 662 lineto
533 644 lineto
512 644 496 642 485 637  curveto
469 630 456 621 446 609  curveto
436 597 421 570 401 529  curveto
206 129 lineto
188 93 178 69 176 59  curveto
175 51 175 44 178 38  curveto
181 33 187 28 195 25  curveto
204 22 222 20 250 18  curveto
closepath
fill
		} def

	/J
		{
418 662 moveto
679 662 lineto
670 644 lineto
636 643 611 637 595 625  curveto
579 613 559 582 533 530  curveto
391 238 lineto
364 183 340 141 317 112  curveto
288 73 252 42 211 19  curveto
169 -3 125 -15 79 -15  curveto
42 -15 14 -6 -1 10  curveto
-18 28 -24 49 -19 74  curveto
-15 93 -6 110 8 123  curveto
23 136 39 142 56 142  curveto
70 142 82 138 89 129  curveto
97 120 99 109 97 97  curveto
94 86 88 76 78 66  curveto
65 54 58 46 57 41  curveto
55 34 57 28 62 22  curveto
67 17 75 14 85 14  curveto
100 14 117 18 134 25  curveto
152 32 169 43 186 58  curveto
203 72 219 90 234 110  curveto
249 131 265 159 283 194  curveto
324 279 lineto
447 530 lineto
465 567 475 590 477 599  curveto
479 611 476 621 468 629  curveto
460 637 440 642 409 644  curveto
closepath
fill
		} def

	/K
		{
394 376 moveto
508 123 lineto
528 78 546 49 563 36  curveto
580 24 604 18 635 18  curveto
626 0 lineto
344 0 lineto
352 18 lineto
375 20 392 25 403 34  curveto
414 42 420 52 422 62  curveto
424 72 424 82 423 91  curveto
422 97 415 113 404 139  curveto
312 349 lineto
203 130 lineto
186 95 175 71 173 59  curveto
171 47 173 37 181 31  curveto
189 24 210 20 246 18  curveto
234 0 lineto
-26 0 lineto
-16 18 lineto
8 18 26 20 35 24  curveto
49 30 61 38 69 47  curveto
80 60 96 88 116 130  curveto
313 530 lineto
328 560 337 585 341 604  curveto
344 617 341 626 335 633  curveto
328 640 312 644 288 644  curveto
278 644 lineto
288 662 lineto
536 662 lineto
528 644 lineto
507 644 492 642 480 637  curveto
465 630 453 621 444 610  curveto
436 600 421 573 400 530  curveto
314 360 lineto
585 537 lineto
621 561 645 579 658 593  curveto
665 601 670 609 671 616  curveto
672 622 670 627 665 633  curveto
661 638 652 642 640 644  curveto
649 662 lineto
860 662 lineto
852 644 lineto
829 640 808 635 791 628  curveto
774 622 756 613 737 602  curveto
732 599 695 575 628 530  curveto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-21 18 lineto
4 18 22 20 31 24  curveto
46 30 58 37 66 47  curveto
79 62 95 89 115 128  curveto
312 531 lineto
328 564 338 588 341 604  curveto
344 616 341 626 333 633  curveto
326 640 310 643 285 643  curveto
279 643 275 643 272 644  curveto
281 662 lineto
551 662 lineto
544 644 lineto
514 644 491 641 478 635  curveto
464 629 451 619 440 606  curveto
433 597 417 570 395 524  curveto
201 128 lineto
186 98 178 77 175 65  curveto
174 58 177 50 184 43  curveto
189 38 201 36 220 36  curveto
284 36 lineto
331 36 369 41 398 53  curveto
420 62 442 75 462 93  curveto
473 103 494 127 525 166  curveto
542 187 lineto
560 187 lineto
closepath
fill
		} def

	/M
		{
449 662 moveto
403 128 lineto
894 662 lineto
1056 662 lineto
1052 644 lineto
1017 641 995 639 989 637  curveto
977 632 966 624 954 611  curveto
943 599 928 574 910 538  curveto
704 118 lineto
692 94 684 75 682 61  curveto
679 48 682 38 689 32  curveto
700 22 718 18 745 18  curveto
757 18 lineto
749 0 lineto
470 0 lineto
478 18 lineto
491 18 lineto
516 18 536 21 550 28  curveto
561 34 572 43 583 58  curveto
594 72 612 104 636 154  curveto
822 538 lineto
328 0 lineto
309 0 lineto
354 538 lineto
154 128 lineto
137 94 127 70 125 58  curveto
123 46 125 37 133 31  curveto
140 24 161 20 194 18  curveto
185 0 lineto
-32 0 lineto
-23 18 lineto
-10 18 lineto
21 18 46 26 64 42  curveto
76 54 92 79 112 118  curveto
354 612 lineto
346 623 337 630 328 634  curveto
319 638 302 641 276 644  curveto
284 662 lineto
closepath
fill
		} def

	/N
		{
419 662 moveto
519 143 lineto
708 530 lineto
723 562 733 587 736 604  curveto
739 617 736 626 729 633  curveto
722 640 707 643 684 643  curveto
680 643 676 643 672 644  curveto
681 662 lineto
894 662 lineto
884 644 lineto
862 644 845 642 833 637  curveto
817 630 804 621 794 610  curveto
781 595 765 568 746 530  curveto
481 -15 lineto
464 -15 lineto
355 543 lineto
155 130 lineto
140 99 131 75 128 59  curveto
125 46 127 37 134 31  curveto
141 24 159 20 188 18  curveto
180 0 lineto
-27 0 lineto
-17 18 lineto
8 18 26 20 36 24  curveto
50 30 62 38 70 47  curveto
82 62 99 89 118 130  curveto
342 591 lineto
333 610 322 624 309 631  curveto
296 638 274 643 244 644  curveto
253 662 lineto
closepath
fill
		} def

	/O
		{
628 677 moveto
672 677 709 667 739 648  curveto
769 629 790 601 801 564  curveto
813 526 815 488 807 448  curveto
793 377 757 302 700 224  curveto
644 146 578 87 503 46  curveto
429 5 356 -15 285 -15  curveto
234 -15 193 -3 164 18  curveto
134 41 114 71 105 108  curveto
96 145 95 181 102 216  curveto
115 278 142 339 184 399  curveto
226 460 271 510 321 551  curveto
370 591 420 622 472 644  curveto
523 666 575 677 628 677  curveto
closepath
605 645 moveto
572 645 539 637 504 621  curveto
470 605 434 579 396 542  curveto
358 506 321 458 285 398  curveto
240 326 212 257 199 192  curveto
189 146 193 105 210 69  curveto
226 33 259 16 308 16  curveto
338 16 369 23 400 38  curveto
431 52 466 77 504 113  curveto
552 157 596 214 636 283  curveto
676 353 702 417 714 477  curveto
723 521 719 560 702 594  curveto
685 628 653 645 605 645  curveto
closepath
fill
		} def

	/P
		{
288 662 moveto
549 662 lineto
617 662 665 647 693 617  curveto
721 588 731 552 723 510  curveto
716 476 699 444 671 412  curveto
643 381 606 355 560 335  curveto
514 315 466 306 417 306  curveto
386 306 348 311 303 322  curveto
214 142 lineto
193 99 182 70 179 57  curveto
177 46 179 38 187 31  curveto
194 24 214 20 247 18  curveto
239 0 lineto
-23 0 lineto
-14 18 lineto
19 18 44 24 60 35  curveto
76 47 97 80 124 134  curveto
308 511 lineto
330 556 343 586 346 602  curveto
348 613 346 622 338 630  curveto
330 637 310 642 279 644  curveto
closepath
318 353 moveto
353 344 381 339 404 339  curveto
439 339 473 346 505 361  curveto
537 375 564 397 587 427  curveto
609 456 623 486 630 518  curveto
636 551 631 577 615 596  curveto
599 615 570 625 529 625  curveto
507 625 479 622 447 617  curveto
closepath
fill
		} def

	/Q
		{
289 -15 moveto
143 -117 lineto
163 -113 182 -111 199 -111  curveto
215 -111 230 -112 243 -114  curveto
257 -116 285 -122 329 -133  curveto
372 -143 411 -148 444 -148  curveto
481 -148 512 -142 540 -129  curveto
568 -117 597 -96 626 -66  curveto
641 -74 lineto
598 -122 551 -157 501 -178  curveto
451 -200 401 -210 350 -210  curveto
322 -210 284 -205 237 -194  curveto
165 -177 114 -169 84 -169  curveto
73 -169 63 -170 56 -171  curveto
48 -173 37 -177 21 -183  curveto
13 -170 lineto
245 -12 lineto
184 -3 143 23 120 69  curveto
98 115 91 164 102 216  curveto
116 287 152 361 211 437  curveto
269 513 336 572 412 614  curveto
487 656 557 677 622 677  curveto
670 677 710 667 740 647  curveto
770 628 790 600 802 562  curveto
813 525 814 487 806 448  curveto
791 373 755 297 697 220  curveto
639 143 574 85 503 46  curveto
432 6 361 -13 289 -15  curveto
closepath
604 645 moveto
572 645 538 637 504 621  curveto
470 605 434 579 396 542  curveto
358 506 321 458 284 398  curveto
240 326 212 257 199 192  curveto
189 146 193 105 210 69  curveto
226 33 259 16 308 16  curveto
338 16 368 23 400 38  curveto
431 52 466 77 504 112  curveto
552 157 596 214 636 284  curveto
676 353 702 417 714 477  curveto
723 521 719 560 702 594  curveto
685 628 652 645 604 645  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
373 321 lineto
349 321 324 323 299 329  curveto
202 128 lineto
189 102 181 80 177 62  curveto
174 49 177 38 185 30  curveto
191 24 210 20 241 18  curveto
233 0 lineto
-22 0 lineto
-13 18 lineto
10 19 27 21 36 25  curveto
50 30 62 38 70 47  curveto
83 63 99 90 119 128  curveto
314 528 lineto
327 555 335 576 338 590  curveto
341 605 338 618 328 628  curveto
318 639 301 644 278 644  curveto
288 662 lineto
504 662 lineto
576 662 625 648 652 621  curveto
678 593 687 557 678 513  curveto
669 470 645 431 605 396  curveto
566 360 516 338 457 329  curveto
483 135 lineto
489 87 499 56 511 42  curveto
524 28 548 20 582 18  curveto
573 0 lineto
closepath
313 356 moveto
333 354 351 352 367 352  curveto
423 352 471 368 510 399  curveto
548 430 572 468 582 515  curveto
589 551 584 578 568 598  curveto
551 617 523 626 482 626  curveto
471 626 459 625 444 623  curveto
closepath
fill
		} def

	/S
		{
3 -15 moveto
107 230 lineto
124 230 lineto
117 206 112 187 108 171  curveto
100 126 107 90 129 62  curveto
152 34 187 20 233 20  curveto
275 20 310 33 338 59  curveto
365 86 382 116 389 150  curveto
393 172 392 192 386 210  curveto
376 237 345 285 292 353  curveto
266 386 250 410 244 426  curveto
235 452 233 480 239 509  curveto
248 555 273 595 314 627  curveto
355 660 403 677 457 677  curveto
475 677 492 675 507 671  curveto
517 669 534 663 559 652  curveto
576 644 586 640 587 640  curveto
592 639 597 638 602 638  curveto
612 638 620 641 628 645  curveto
636 650 646 661 658 677  curveto
677 677 lineto
582 457 lineto
566 457 lineto
571 477 575 492 577 504  curveto
585 544 578 576 557 601  curveto
536 626 504 639 462 639  curveto
428 639 398 629 373 609  curveto
348 589 333 566 328 540  curveto
323 517 326 496 335 475  curveto
344 454 369 420 408 374  curveto
447 327 472 291 481 264  curveto
490 238 491 210 485 181  curveto
479 147 463 115 439 83  curveto
415 52 385 27 348 10  curveto
312 -6 274 -15 234 -15  curveto
215 -15 197 -13 181 -9  curveto
164 -6 139 2 105 16  curveto
93 21 83 23 75 23  curveto
55 23 38 10 22 -15  curveto
closepath
fill
		} def

	/T
		{
278 662 moveto
781 662 lineto
692 486 lineto
673 486 lineto
685 512 692 534 696 555  curveto
701 578 697 596 685 608  curveto
676 618 648 622 603 622  curveto
550 622 lineto
328 166 lineto
300 109 285 73 282 60  curveto
280 48 283 38 292 30  curveto
300 22 318 18 344 18  curveto
367 18 lineto
357 0 lineto
69 0 lineto
78 18 lineto
91 18 lineto
116 18 137 22 152 30  curveto
163 35 173 45 184 60  curveto
194 74 211 105 234 152  curveto
465 622 lineto
426 622 lineto
388 622 356 617 331 607  curveto
306 598 284 583 266 565  curveto
248 546 231 520 215 486  curveto
197 486 lineto
closepath
fill
		} def

	/U
		{
263 662 moveto
543 662 lineto
534 644 lineto
505 643 484 640 471 635  curveto
458 631 445 622 434 610  curveto
423 598 410 576 394 543  curveto
279 309 lineto
259 267 246 240 241 227  curveto
233 206 227 187 224 169  curveto
216 130 224 96 248 69  curveto
272 42 308 28 357 28  curveto
390 28 420 34 447 47  curveto
475 59 500 76 523 98  curveto
545 120 568 150 590 187  curveto
613 225 634 263 653 301  curveto
752 503 lineto
776 554 790 587 793 602  curveto
795 613 792 622 784 630  curveto
776 637 756 642 726 644  curveto
735 662 lineto
946 662 lineto
937 644 lineto
912 644 894 641 882 636  curveto
870 632 859 623 848 611  curveto
838 599 824 575 807 540  curveto
686 294 lineto
647 215 613 156 585 118  curveto
557 80 521 48 477 23  curveto
433 -2 382 -15 325 -15  curveto
258 -15 208 3 175 41  curveto
142 78 130 121 140 170  curveto
144 189 150 210 158 231  curveto
163 246 174 270 192 306  curveto
302 531 lineto
318 563 327 587 330 603  curveto
332 615 330 624 322 631  curveto
314 637 291 642 254 644  curveto
closepath
fill
		} def

	/V
		{
148 -15 moveto
313 536 lineto
321 564 327 583 329 592  curveto
331 607 328 619 319 629  curveto
311 639 294 644 271 644  curveto
253 644 lineto
262 662 lineto
523 662 lineto
514 644 lineto
486 643 466 640 454 635  curveto
442 629 432 620 423 606  curveto
418 599 411 579 401 545  curveto
283 150 lineto
611 503 lineto
647 541 670 568 680 583  curveto
687 593 691 601 693 609  curveto
694 618 692 625 686 632  curveto
680 638 667 642 646 644  curveto
656 662 lineto
855 662 lineto
847 644 lineto
830 642 817 639 807 634  curveto
787 626 767 613 745 596  curveto
724 578 689 544 640 491  curveto
166 -15 lineto
closepath
fill
		} def

	/W
		{
132 -15 moveto
299 536 lineto
306 557 310 574 312 585  curveto
316 604 314 618 305 628  curveto
296 638 278 643 250 644  curveto
259 662 lineto
507 662 lineto
498 644 lineto
465 644 441 638 426 626  curveto
412 614 397 584 383 536  curveto
275 179 lineto
604 567 lineto
606 573 607 579 608 583  curveto
612 602 609 616 600 625  curveto
591 635 570 641 535 644  curveto
542 662 lineto
810 662 lineto
801 644 lineto
770 643 749 641 737 636  curveto
729 632 721 626 714 618  curveto
707 610 700 597 693 578  curveto
691 572 679 534 658 464  curveto
637 394 608 299 570 179  curveto
843 497 lineto
872 532 892 556 900 570  curveto
909 584 914 596 916 606  curveto
918 615 916 623 909 630  curveto
903 637 890 642 872 644  curveto
879 662 lineto
1076 662 lineto
1067 644 lineto
1050 642 1034 638 1019 631  curveto
1004 624 986 610 963 590  curveto
951 578 923 547 880 497  curveto
445 -15 lineto
427 -15 lineto
583 497 lineto
148 -15 lineto
closepath
fill
		} def

	/X
		{
649 662 moveto
873 662 lineto
864 644 lineto
831 639 802 629 775 615  curveto
749 600 711 572 661 528  curveto
454 353 lineto
467 175 lineto
468 158 472 132 477 97  curveto
480 74 485 58 491 48  curveto
497 39 505 32 516 27  curveto
527 22 544 19 568 18  curveto
559 0 lineto
299 0 lineto
308 18 lineto
335 19 355 24 369 33  curveto
379 39 385 48 387 58  curveto
389 67 389 87 387 118  curveto
373 285 lineto
187 128 lineto
150 97 128 77 120 67  curveto
116 61 113 55 112 50  curveto
110 40 113 32 121 26  curveto
126 23 139 20 161 18  curveto
153 0 lineto
-66 0 lineto
-57 18 lineto
-29 20 -5 27 13 37  curveto
42 52 84 82 138 128  curveto
369 321 lineto
354 512 lineto
350 571 344 607 334 620  curveto
325 634 306 642 277 644  curveto
285 662 lineto
522 662 lineto
513 644 lineto
491 644 476 642 468 639  curveto
459 637 453 632 447 627  curveto
442 621 439 615 437 607  curveto
436 600 436 581 438 553  curveto
451 390 lineto
575 493 lineto
625 534 659 567 680 592  curveto
687 601 691 609 693 616  curveto
694 623 692 629 687 633  curveto
679 639 663 643 640 644  curveto
closepath
fill
		} def

	/Y
		{
420 352 moveto
581 528 lineto
622 574 645 603 647 616  curveto
649 623 646 629 640 634  curveto
634 638 615 642 582 644  curveto
591 662 lineto
799 662 lineto
791 644 lineto
771 641 756 638 748 635  curveto
736 630 722 623 709 612  curveto
691 599 663 572 626 532  curveto
420 308 lineto
338 145 lineto
318 104 306 75 303 60  curveto
301 49 301 42 304 37  curveto
307 31 312 27 321 24  curveto
333 20 351 18 377 18  curveto
368 0 lineto
89 0 lineto
99 18 lineto
127 18 145 20 155 24  curveto
171 30 184 38 193 48  curveto
207 63 224 90 243 128  curveto
340 322 lineto
315 550 lineto
310 591 303 616 295 625  curveto
286 635 269 641 243 644  curveto
252 662 lineto
496 662 lineto
487 644 lineto
456 641 438 639 433 638  curveto
426 635 419 631 413 624  curveto
407 617 403 609 401 600  curveto
399 587 399 564 402 532  curveto
closepath
fill
		} def

	/Z
		{
283 662 moveto
743 662 lineto
739 644 lineto
125 31 lineto
202 31 lineto
284 31 343 35 379 43  curveto
415 52 446 66 473 86  curveto
499 106 524 135 547 172  curveto
565 172 lineto
474 0 lineto
-1 0 lineto
0 14 lineto
615 626 lineto
477 626 lineto
417 626 375 623 349 618  curveto
324 613 301 602 280 585  curveto
259 569 240 544 221 511  curveto
204 511 lineto
closepath
fill
		} def

	/bracketleft
		{
-33 -199 moveto
398 677 lineto
606 677 lineto
589 643 lineto
452 643 lineto
55 -164 lineto
190 -164 lineto
174 -199 lineto
closepath
fill
		} def

	/backslash
		{
279 694 moveto
228 -15 lineto
192 -15 lineto
245 694 lineto
closepath
fill
		} def

	/bracketright
		{
500 677 moveto
68 -199 lineto
-139 -199 lineto
-122 -165 lineto
13 -165 lineto
411 642 lineto
275 642 lineto
292 677 lineto
closepath
fill
		} def

	/asciicircum
		{
387 677 moveto
525 327 lineto
480 327 lineto
366 613 lineto
138 327 lineto
92 327 lineto
373 677 lineto
closepath
fill
		} def

	/underscore
		{
465 -215 moveto
-51 -215 lineto
-43 -174 lineto
473 -174 lineto
closepath
fill
		} def

	/quoteleft
		{
420 684 moveto
440 516 lineto
424 516 lineto
312 684 lineto
closepath
fill
		} def

	/a
		{
557 441 moveto
396 110 lineto
376 66 lineto
374 62 373 58 372 55  curveto
371 50 372 45 375 41  curveto
377 39 380 37 383 37  curveto
388 37 394 40 402 45  curveto
416 54 437 74 464 104  curveto
478 92 lineto
449 58 421 32 394 14  curveto
366 -2 343 -11 322 -11  curveto
308 -11 299 -8 293 -1  curveto
287 5 286 15 289 29  curveto
292 45 300 66 312 92  curveto
329 128 lineto
276 73 229 34 188 12  curveto
160 -3 133 -11 108 -11  curveto
84 -11 66 -1 52 17  curveto
39 37 36 64 43 99  curveto
53 150 80 205 122 262  curveto
165 320 213 366 268 400  curveto
311 428 349 441 382 441  curveto
402 441 418 436 429 426  curveto
440 415 446 398 448 374  curveto
477 430 lineto
closepath
378 416 moveto
357 416 333 406 306 387  curveto
267 359 229 318 193 264  curveto
156 209 133 160 124 116  curveto
120 94 122 77 131 64  curveto
139 51 150 44 165 44  curveto
200 44 244 71 296 123  curveto
366 193 408 264 423 337  curveto
428 365 427 385 418 397  curveto
410 410 397 416 378 416  curveto
closepath
fill
		} def

	/b
		{
427 694 moveto
263 356 lineto
301 389 333 411 358 423  curveto
384 435 410 441 435 441  curveto
471 441 498 430 516 406  curveto
534 382 539 350 531 309  curveto
520 257 495 204 454 153  curveto
414 101 368 60 317 31  curveto
266 2 219 -11 175 -11  curveto
126 -11 79 6 35 43  curveto
285 554 lineto
305 594 315 617 316 624  curveto
318 632 317 638 312 643  curveto
306 648 295 651 281 651  curveto
274 651 263 650 249 648  curveto
253 666 lineto
closepath
107 38 moveto
136 20 163 11 187 11  curveto
216 11 248 21 283 42  curveto
318 63 351 99 384 148  curveto
417 198 438 249 448 299  curveto
454 329 451 353 440 370  curveto
429 387 413 395 393 395  curveto
362 395 330 383 296 359  curveto
263 334 235 301 214 257  curveto
closepath
fill
		} def

	/c
		{
409 106 moveto
367 65 327 35 289 16  curveto
250 -2 212 -11 173 -11  curveto
127 -11 94 1 73 27  curveto
52 53 46 88 55 132  curveto
65 182 89 231 126 279  curveto
164 327 209 366 262 396  curveto
315 426 364 441 410 441  curveto
445 441 470 434 485 419  curveto
499 404 505 386 500 365  curveto
496 345 487 327 471 313  curveto
460 302 448 296 434 296  curveto
424 296 417 300 411 306  curveto
406 313 404 321 406 331  curveto
407 337 410 342 413 348  curveto
417 353 423 359 432 366  curveto
441 374 447 379 449 382  curveto
451 386 453 389 454 393  curveto
455 399 453 405 448 410  curveto
440 416 427 419 410 419  curveto
378 419 344 408 308 386  curveto
272 363 239 331 209 290  curveto
172 240 149 190 139 140  curveto
132 106 136 80 151 61  curveto
166 41 190 32 223 32  curveto
248 32 274 38 301 51  curveto
328 63 360 86 397 119  curveto
closepath
fill
		} def

	/d
		{
679 694 moveto
396 118 lineto
381 86 372 66 370 56  curveto
370 53 370 50 372 47  curveto
375 44 377 42 380 42  curveto
384 42 390 45 397 49  curveto
409 57 432 76 464 107  curveto
479 97 lineto
449 65 420 38 392 18  curveto
364 -1 339 -11 318 -11  curveto
307 -11 299 -7 293 0  curveto
288 7 286 18 289 33  curveto
293 51 303 76 319 107  curveto
350 168 lineto
288 95 235 45 191 17  curveto
160 -2 133 -11 108 -11  curveto
84 -11 64 0 50 21  curveto
36 43 33 73 41 110  curveto
50 159 76 211 118 266  curveto
160 321 210 365 268 400  curveto
313 428 353 441 386 441  curveto
404 441 418 438 429 431  curveto
441 423 451 412 460 395  curveto
542 565 lineto
548 577 553 587 556 594  curveto
563 607 567 618 569 626  curveto
570 633 569 638 565 643  curveto
559 649 551 651 540 651  curveto
533 651 520 650 502 648  curveto
506 666 lineto
closepath
429 347 moveto
433 368 430 385 421 397  curveto
411 410 397 416 379 416  curveto
338 416 288 383 230 315  curveto
172 247 137 182 125 121  curveto
120 96 122 78 130 65  curveto
138 52 149 45 164 45  curveto
198 45 248 82 314 155  curveto
380 229 418 292 429 347  curveto
closepath
fill
		} def

	/e
		{
155 184 moveto
150 167 146 154 144 143  curveto
138 114 143 89 160 69  curveto
176 49 199 39 229 39  curveto
252 39 275 43 299 53  curveto
323 63 359 84 408 117  curveto
416 103 lineto
323 26 242 -11 172 -11  curveto
124 -11 92 3 74 33  curveto
55 63 50 96 57 132  curveto
67 180 92 230 132 281  curveto
172 332 218 371 268 399  curveto
319 427 369 441 416 441  curveto
451 441 475 434 489 420  curveto
503 406 508 390 504 371  curveto
498 344 483 318 456 293  curveto
421 261 375 235 316 215  curveto
276 201 223 191 155 184  curveto
closepath
164 208 moveto
213 213 254 222 287 236  curveto
331 254 365 275 390 300  curveto
415 325 430 349 434 371  curveto
437 385 435 396 428 404  curveto
421 413 409 417 394 417  curveto
360 417 322 399 277 364  curveto
233 329 195 277 164 208  curveto
closepath
fill
		} def

	/f
		{
384 430 moveto
369 397 lineto
297 397 lineto
201 184 lineto
158 90 120 17 86 -33  curveto
37 -106 -9 -156 -54 -184  curveto
-88 -205 -120 -215 -150 -215  curveto
-170 -215 -185 -209 -196 -198  curveto
-205 -190 -208 -179 -205 -166  curveto
-203 -156 -197 -147 -187 -139  curveto
-177 -131 -167 -127 -154 -127  curveto
-146 -127 -139 -130 -134 -136  curveto
-129 -141 -127 -148 -129 -155  curveto
-130 -162 -135 -169 -143 -175  curveto
-149 -179 -152 -183 -153 -185  curveto
-153 -188 -153 -190 -151 -192  curveto
-148 -194 -144 -195 -138 -195  curveto
-124 -195 -108 -191 -91 -182  curveto
-74 -173 -57 -160 -42 -143  curveto
-26 -125 -10 -100 6 -67  curveto
14 -54 35 -9 70 67  curveto
221 397 lineto
136 397 lineto
150 430 lineto
177 430 196 432 207 435  curveto
219 439 230 446 241 457  curveto
252 467 268 487 288 516  curveto
315 555 339 585 361 607  curveto
391 636 421 658 450 672  curveto
480 687 506 694 529 694  curveto
554 694 573 688 585 675  curveto
598 663 603 649 600 634  curveto
597 623 592 613 583 605  curveto
574 598 563 594 551 594  curveto
541 594 534 597 529 603  curveto
523 608 522 615 523 624  curveto
524 629 528 635 533 643  curveto
539 650 542 656 543 658  curveto
544 663 543 666 541 668  curveto
537 672 531 673 523 673  curveto
502 673 483 667 464 654  curveto
439 637 414 610 389 573  curveto
376 554 351 506 312 430  curveto
closepath
fill
		} def

	/g
		{
603 411 moveto
579 360 lineto
497 360 lineto
500 343 499 326 496 311  curveto
488 268 462 230 419 196  curveto
375 163 321 144 256 141  curveto
220 130 191 118 171 104  curveto
164 98 159 93 158 87  curveto
157 81 159 75 163 70  curveto
168 64 182 59 205 53  curveto
295 31 lineto
345 19 377 4 390 -12  curveto
403 -29 408 -49 403 -71  curveto
398 -98 383 -122 359 -145  curveto
335 -167 303 -184 262 -197  curveto
222 -209 179 -215 133 -215  curveto
92 -215 56 -211 25 -201  curveto
-5 -191 -26 -178 -37 -162  curveto
-48 -146 -52 -129 -49 -112  curveto
-46 -98 -38 -83 -26 -68  curveto
-14 -53 0 -41 15 -31  curveto
25 -25 53 -10 99 12  curveto
86 24 81 37 84 51  curveto
87 64 96 78 112 92  curveto
128 107 159 123 205 141  curveto
171 147 146 162 129 186  curveto
113 209 108 234 113 263  curveto
122 309 151 350 199 387  curveto
247 423 304 441 372 441  curveto
396 441 416 439 430 434  curveto
445 429 458 422 471 411  curveto
closepath
418 334 moveto
423 361 420 381 409 396  curveto
397 411 380 418 356 418  curveto
319 418 285 400 254 363  curveto
223 326 203 288 195 248  curveto
190 222 194 202 206 186  curveto
218 170 235 162 257 162  curveto
274 162 292 167 310 176  curveto
328 186 344 199 358 215  curveto
372 232 386 253 397 279  curveto
409 305 416 323 418 334  curveto
closepath
117 0 moveto
88 -12 65 -27 48 -46  curveto
31 -65 20 -83 17 -102  curveto
12 -123 19 -141 35 -155  curveto
59 -175 98 -185 152 -185  curveto
199 -185 240 -177 276 -161  curveto
313 -146 333 -125 338 -100  curveto
341 -87 337 -75 327 -64  curveto
317 -53 295 -43 262 -36  curveto
243 -32 195 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
432 694 moveto
200 220 lineto
277 309 335 368 374 397  curveto
413 427 448 441 478 441  curveto
494 441 506 436 514 425  curveto
522 415 524 400 521 382  curveto
517 361 507 335 492 304  curveto
391 100 lineto
379 75 372 61 372 59  curveto
371 54 371 50 374 47  curveto
376 44 379 43 382 43  curveto
386 43 392 45 398 49  curveto
420 64 442 83 465 109  curveto
479 100 lineto
464 82 445 63 421 43  curveto
397 22 377 8 362 0  curveto
346 -7 332 -11 321 -11  curveto
309 -11 300 -7 294 0  curveto
288 7 286 17 289 29  curveto
291 43 302 70 322 109  curveto
417 304 lineto
429 329 436 348 439 362  curveto
440 368 439 374 436 377  curveto
433 381 428 383 421 383  curveto
412 383 401 380 387 373  curveto
362 359 332 333 295 296  curveto
285 286 251 246 193 174  curveto
174 152 158 127 144 100  curveto
93 0 lineto
20 0 lineto
292 558 lineto
321 619 lineto
323 627 321 635 315 641  curveto
309 648 301 651 291 651  curveto
286 651 276 650 264 648  curveto
253 646 lineto
257 666 lineto
closepath
fill
		} def

	/i
		{
350 635 moveto
364 635 375 631 382 621  curveto
390 612 392 600 389 586  curveto
387 573 380 562 368 552  curveto
357 542 344 538 331 538  curveto
317 538 307 542 299 552  curveto
292 562 289 573 292 586  curveto
294 600 301 612 313 621  curveto
324 631 337 635 350 635  curveto
closepath
318 441 moveto
153 99 lineto
142 76 136 62 135 58  curveto
134 52 134 48 137 45  curveto
139 42 143 40 147 40  curveto
152 40 158 43 166 48  curveto
187 62 210 83 235 110  curveto
249 99 lineto
220 65 189 37 154 14  curveto
129 -3 106 -11 86 -11  curveto
72 -11 62 -7 55 0  curveto
48 8 46 18 49 30  curveto
51 42 59 62 73 90  curveto
180 309 lineto
198 344 207 367 209 376  curveto
211 383 209 389 205 394  curveto
201 398 194 400 186 400  curveto
178 400 163 399 140 395  curveto
144 414 lineto
closepath
fill
		} def

	/j
		{
358 635 moveto
371 635 382 630 390 620  curveto
397 611 400 599 397 585  curveto
394 572 387 560 376 551  curveto
364 541 351 536 338 536  curveto
324 536 313 541 306 551  curveto
298 560 296 572 298 585  curveto
301 599 308 611 320 620  curveto
331 630 344 635 358 635  curveto
closepath
327 441 moveto
113 4 lineto
75 -73 33 -129 -13 -164  curveto
-59 -198 -105 -215 -150 -215  curveto
-171 -215 -185 -211 -194 -201  curveto
-203 -192 -206 -180 -203 -167  curveto
-201 -157 -195 -149 -186 -141  curveto
-176 -133 -166 -129 -156 -129  curveto
-146 -129 -139 -132 -133 -139  curveto
-128 -144 -126 -149 -127 -155  curveto
-129 -164 -135 -171 -144 -177  curveto
-149 -181 -152 -184 -153 -186  curveto
-152 -188 lineto
-151 -190 -150 -191 -148 -191  curveto
-146 -192 -144 -192 -140 -192  curveto
-113 -192 -89 -184 -67 -167  curveto
-45 -150 -22 -117 2 -67  curveto
187 307 lineto
205 344 214 364 215 368  curveto
216 376 214 383 209 389  curveto
203 395 195 398 184 398  curveto
180 398 175 398 169 397  curveto
164 396 158 395 150 394  curveto
153 411 lineto
closepath
fill
		} def

	/k
		{
426 694 moveto
192 214 lineto
257 261 lineto
328 313 375 351 398 375  curveto
406 384 410 390 411 394  curveto
412 397 411 400 410 402  curveto
408 405 405 407 399 409  curveto
394 410 384 411 370 411  curveto
353 411 lineto
362 430 lineto
575 430 lineto
567 411 lineto
542 410 520 406 501 400  curveto
482 393 463 384 444 372  curveto
406 347 381 330 369 321  curveto
320 284 lineto
322 260 324 228 326 186  curveto
330 116 334 75 337 62  curveto
341 48 346 42 352 42  curveto
358 42 365 45 373 50  curveto
393 63 415 82 439 109  curveto
454 97 lineto
410 53 377 23 355 9  curveto
333 -4 315 -11 299 -11  curveto
285 -11 276 -6 270 4  curveto
261 23 255 99 251 231  curveto
172 173 lineto
87 0 lineto
11 0 lineto
285 557 lineto
308 604 lineto
311 612 313 619 315 625  curveto
316 633 314 640 310 645  curveto
305 650 296 653 285 653  curveto
277 653 265 651 248 648  curveto
252 665 lineto
closepath
fill
		} def

	/l
		{
436 694 moveto
153 113 lineto
139 84 131 66 130 60  curveto
129 55 129 51 132 47  curveto
134 44 138 42 142 42  curveto
149 42 156 45 164 51  curveto
184 64 206 85 230 113  curveto
241 98 lineto
202 54 167 24 138 6  curveto
116 -5 96 -11 79 -11  curveto
67 -11 57 -7 51 0  curveto
44 9 42 19 44 30  curveto
46 41 56 66 74 102  curveto
298 560 lineto
316 597 326 619 327 625  curveto
329 632 327 639 322 644  curveto
317 649 307 651 294 651  curveto
287 651 275 650 260 648  curveto
263 666 lineto
closepath
fill
		} def

	/m
		{
305 441 moveto
197 221 lineto
236 273 268 312 293 338  curveto
332 378 368 408 401 426  curveto
420 436 439 441 458 441  curveto
474 441 487 436 495 426  curveto
504 415 507 402 504 386  curveto
500 370 492 349 480 323  curveto
420 199 lineto
493 298 557 368 613 408  curveto
644 430 672 441 698 441  curveto
713 441 724 436 732 426  curveto
739 416 741 400 736 378  curveto
733 360 726 340 716 318  curveto
624 128 lineto
604 87 593 64 593 60  curveto
592 55 592 51 595 48  curveto
596 46 598 44 602 44  curveto
605 44 611 48 621 54  curveto
642 68 663 87 684 110  curveto
698 100 lineto
688 87 670 69 644 46  curveto
619 24 598 8 582 0  curveto
566 -7 552 -11 539 -11  curveto
528 -11 519 -7 513 0  curveto
507 7 505 17 507 28  curveto
510 44 523 75 546 123  curveto
622 279 lineto
639 315 649 335 650 339  curveto
652 346 654 352 655 357  curveto
657 366 656 372 654 376  curveto
651 381 647 383 642 383  curveto
628 383 612 376 594 362  curveto
541 321 487 263 433 188  curveto
398 139 361 76 323 0  curveto
250 0 lineto
392 295 lineto
408 327 416 348 419 359  curveto
420 368 420 374 417 378  curveto
414 383 410 385 405 385  curveto
394 385 382 381 369 373  curveto
347 360 316 333 277 291  curveto
238 250 206 210 181 172  curveto
170 154 139 97 89 0  curveto
17 0 lineto
170 316 lineto
190 357 lineto
194 363 196 368 196 371  curveto
198 378 196 384 190 390  curveto
185 396 177 398 167 398  curveto
163 398 151 396 131 393  curveto
130 411 lineto
closepath
fill
		} def

	/n
		{
309 441 moveto
199 219 lineto
278 310 337 370 375 398  curveto
413 427 447 441 477 441  curveto
493 441 506 436 514 425  curveto
523 415 525 401 522 383  curveto
518 364 508 338 492 305  curveto
391 100 lineto
380 76 373 61 372 56  curveto
371 52 372 48 374 45  curveto
376 42 378 40 381 40  curveto
385 40 390 42 397 46  curveto
417 60 440 81 466 109  curveto
479 100 lineto
440 56 405 25 375 7  curveto
353 -5 335 -11 320 -11  curveto
308 -11 299 -8 293 0  curveto
288 6 286 16 288 28  curveto
292 44 302 71 321 109  curveto
417 305 lineto
429 330 437 349 439 362  curveto
441 369 439 374 436 378  curveto
433 382 428 384 422 384  curveto
413 384 401 380 387 373  curveto
360 358 330 334 297 300  curveto
264 266 228 223 189 171  curveto
168 143 149 113 132 80  curveto
92 0 lineto
19 0 lineto
169 305 lineto
186 342 196 364 197 372  curveto
199 379 197 385 193 390  curveto
188 396 181 398 173 398  curveto
169 398 162 398 152 396  curveto
133 394 lineto
134 411 lineto
closepath
fill
		} def

	/o
		{
520 289 moveto
510 240 487 191 452 144  curveto
416 96 373 58 321 30  curveto
269 2 221 -11 178 -11  curveto
133 -11 100 2 77 31  curveto
55 59 48 96 57 141  curveto
67 189 90 237 127 285  curveto
164 333 209 371 260 399  curveto
312 427 359 441 402 441  curveto
445 441 478 427 500 399  curveto
522 371 529 334 520 289  curveto
closepath
445 322 moveto
451 353 449 376 437 392  curveto
426 408 408 416 385 416  curveto
337 416 286 382 232 313  curveto
178 245 144 177 131 109  curveto
125 78 128 54 140 37  curveto
152 21 170 12 194 12  curveto
240 12 290 46 344 114  curveto
397 183 431 252 445 322  curveto
closepath
fill
		} def

	/p
		{
309 441 moveto
253 329 lineto
297 371 334 400 365 416  curveto
397 433 427 441 456 441  curveto
485 441 507 430 523 407  curveto
539 384 543 354 536 317  curveto
521 246 478 173 405 99  curveto
332 25 256 -11 179 -11  curveto
163 -11 148 -9 137 -6  curveto
125 -2 112 3 98 12  curveto
37 -113 lineto
25 -138 18 -154 17 -161  curveto
16 -168 16 -174 19 -179  curveto
22 -184 27 -188 35 -191  curveto
43 -194 59 -195 84 -195  curveto
76 -213 lineto
-153 -213 lineto
-144 -195 lineto
-114 -194 -92 -189 -80 -180  curveto
-67 -171 -51 -145 -31 -104  curveto
177 323 lineto
190 350 197 367 198 373  curveto
200 382 199 389 195 394  curveto
191 398 183 401 173 401  curveto
164 401 150 400 133 397  curveto
137 416 lineto
closepath
117 51 moveto
133 27 157 15 191 15  curveto
208 15 227 19 246 29  curveto
266 38 286 52 306 71  curveto
326 89 346 111 364 135  curveto
382 159 400 188 417 221  curveto
434 254 446 286 452 318  curveto
458 344 456 364 447 378  curveto
437 392 425 399 409 399  curveto
374 399 335 379 293 338  curveto
250 298 216 251 189 197  curveto
closepath
fill
		} def

	/q
		{
562 441 moveto
292 -109 lineto
280 -135 273 -151 271 -158  curveto
270 -166 271 -172 273 -177  curveto
276 -183 280 -187 286 -189  curveto
296 -193 308 -195 325 -195  curveto
316 -213 lineto
82 -213 lineto
91 -195 lineto
123 -193 144 -190 152 -187  curveto
165 -182 177 -174 187 -163  curveto
197 -152 211 -129 228 -93  curveto
343 146 lineto
288 84 239 40 197 14  curveto
167 -3 140 -12 118 -12  curveto
85 -12 63 1 52 27  curveto
41 54 38 82 44 113  curveto
54 162 80 214 121 268  curveto
162 322 210 366 267 401  curveto
311 428 348 441 379 441  curveto
402 441 420 436 433 425  curveto
446 413 454 395 456 371  curveto
482 425 lineto
closepath
432 346 moveto
436 367 433 384 423 397  curveto
413 411 399 417 380 417  curveto
340 417 292 383 234 315  curveto
176 247 141 182 129 122  curveto
125 97 126 79 135 66  curveto
143 53 155 47 171 47  curveto
190 47 215 58 245 80  curveto
289 114 330 157 366 209  curveto
402 262 424 307 432 346  curveto
closepath
fill
		} def

	/r
		{
133 414 moveto
307 441 lineto
189 204 lineto
265 301 331 369 385 408  curveto
416 430 439 441 456 441  curveto
467 441 475 438 480 432  curveto
484 426 486 416 483 404  curveto
479 383 469 362 454 343  curveto
444 328 431 321 416 321  curveto
409 321 403 323 398 328  curveto
394 333 392 340 393 351  curveto
394 357 393 361 391 363  curveto
389 365 386 367 383 367  curveto
377 367 372 365 366 363  curveto
357 358 341 346 320 325  curveto
287 293 249 251 207 201  curveto
189 179 173 155 158 128  curveto
136 91 124 69 121 61  curveto
93 0 lineto
18 0 lineto
169 303 lineto
186 338 197 363 200 378  curveto
201 384 199 389 195 393  curveto
190 398 182 400 171 400  curveto
164 400 151 399 133 396  curveto
closepath
fill
		} def

	/s
		{
451 441 moveto
391 291 lineto
373 291 lineto
380 335 377 367 364 387  curveto
351 407 332 416 307 416  curveto
287 416 270 411 256 400  curveto
242 389 233 375 230 360  curveto
228 349 228 339 231 329  curveto
233 319 241 306 254 288  curveto
287 242 307 207 315 184  curveto
322 160 324 138 320 117  curveto
313 83 293 53 260 27  curveto
226 1 188 -11 145 -11  curveto
122 -11 96 -6 67 4  curveto
57 8 50 10 44 10  curveto
29 10 16 3 6 -11  curveto
-11 -11 lineto
49 146 lineto
67 146 lineto
59 97 63 62 77 41  curveto
92 20 115 10 147 10  curveto
172 10 193 17 210 31  curveto
227 45 238 62 242 82  curveto
245 95 244 107 241 118  curveto
236 138 223 165 200 199  curveto
178 234 165 260 160 277  curveto
155 294 154 311 158 329  curveto
164 360 181 387 208 409  curveto
235 430 267 441 303 441  curveto
314 441 323 441 331 439  curveto
335 438 345 434 361 428  curveto
376 422 387 418 392 418  curveto
406 418 420 426 432 441  curveto
closepath
fill
		} def

	/t
		{
373 562 moveto
309 430 lineto
385 430 lineto
371 399 lineto
295 399 lineto
153 111 lineto
138 80 129 60 127 51  curveto
126 45 127 41 129 38  curveto
131 35 134 34 137 34  curveto
145 34 157 39 173 51  curveto
182 57 203 77 237 111  curveto
251 99 lineto
212 55 178 24 147 6  curveto
127 -5 107 -11 88 -11  curveto
74 -11 63 -7 56 1  curveto
49 10 46 22 49 36  curveto
53 53 63 80 81 116  curveto
219 399 lineto
145 399 lineto
154 418 lineto
192 428 224 442 252 462  curveto
280 481 313 515 352 562  curveto
closepath
fill
		} def

	/u
		{
556 430 moveto
413 139 lineto
392 95 380 68 378 57  curveto
376 51 377 46 378 44  curveto
380 41 382 40 386 40  curveto
391 40 398 42 406 47  curveto
413 52 434 72 468 107  curveto
481 96 lineto
447 55 415 26 384 6  curveto
363 -5 345 -11 328 -11  curveto
316 -11 306 -8 301 0  curveto
295 6 293 15 295 26  curveto
298 37 303 52 311 70  curveto
321 94 346 147 386 228  curveto
313 137 254 74 210 40  curveto
166 5 128 -11 96 -11  curveto
81 -11 69 -6 61 3  curveto
52 14 50 27 53 43  curveto
58 67 73 105 97 155  curveto
170 306 lineto
187 342 197 365 199 374  curveto
200 377 199 381 197 384  curveto
194 386 192 388 188 388  curveto
182 388 174 385 166 380  curveto
159 375 140 357 109 326  curveto
96 337 lineto
128 375 160 402 191 420  curveto
214 434 235 441 252 441  curveto
264 441 274 438 280 430  curveto
286 422 288 412 285 400  curveto
282 383 269 351 247 306  curveto
169 148 lineto
148 105 136 78 134 67  curveto
133 61 134 56 137 52  curveto
141 48 146 46 152 46  curveto
163 46 178 52 198 62  curveto
217 73 245 97 281 134  curveto
317 171 348 206 373 238  curveto
398 270 429 322 464 393  curveto
482 430 lineto
closepath
fill
		} def

	/v
		{
103 411 moveto
250 441 lineto
256 417 259 393 260 368  curveto
262 331 260 287 255 237  curveto
253 211 246 158 234 76  curveto
284 121 313 148 323 159  curveto
378 217 410 252 418 262  curveto
432 279 443 294 450 307  curveto
455 317 459 326 461 335  curveto
462 343 457 353 444 364  curveto
431 375 426 388 429 401  curveto
431 412 437 421 447 429  curveto
456 437 467 441 479 441  curveto
492 441 503 436 511 425  curveto
519 413 522 399 519 383  curveto
515 366 509 350 501 335  curveto
488 310 466 280 436 244  curveto
405 209 359 161 295 101  curveto
287 94 244 56 164 -11  curveto
146 -11 lineto
179 194 189 322 174 374  curveto
170 390 158 398 139 398  curveto
131 398 119 397 103 394  curveto
closepath
fill
		} def

	/w
		{
507 441 moveto
467 75 lineto
537 142 595 204 640 262  curveto
667 296 682 321 685 336  curveto
686 344 686 350 684 355  curveto
683 358 679 363 671 368  curveto
663 374 658 380 656 386  curveto
654 392 653 398 654 405  curveto
656 415 662 424 671 431  curveto
680 438 690 441 702 441  curveto
715 441 725 436 733 427  curveto
740 417 742 403 739 387  curveto
735 370 730 354 722 339  curveto
706 311 680 275 643 231  curveto
598 178 552 129 507 83  curveto
461 38 427 6 406 -11  curveto
388 -11 lineto
424 326 lineto
154 -11 lineto
133 -11 lineto
158 127 173 236 178 317  curveto
180 350 176 372 166 383  curveto
160 390 148 394 132 394  curveto
122 394 110 393 95 391  curveto
98 409 lineto
245 441 lineto
254 387 250 304 233 191  curveto
227 148 223 121 222 110  curveto
489 441 lineto
closepath
fill
		} def

	/x
		{
263 441 moveto
276 424 284 408 289 391  curveto
293 379 296 348 300 298  curveto
355 363 lineto
370 378 387 393 406 407  curveto
425 422 441 431 455 437  curveto
463 440 472 441 481 441  curveto
495 441 506 438 513 430  curveto
519 423 522 414 520 403  curveto
517 390 513 382 507 377  curveto
496 369 485 365 474 365  curveto
467 365 460 367 452 370  curveto
438 375 428 377 423 377  curveto
415 377 405 373 393 364  curveto
369 347 338 314 301 266  curveto
307 98 lineto
308 72 310 57 314 52  curveto
317 46 321 44 325 44  curveto
332 44 340 48 351 55  curveto
372 70 391 90 409 114  curveto
424 105 lineto
396 67 363 35 327 9  curveto
306 -4 289 -11 277 -11  curveto
259 -11 246 -1 240 19  curveto
235 31 232 86 230 183  curveto
162 94 109 38 74 12  curveto
51 -3 30 -11 11 -11  curveto
-1 -11 -12 -6 -20 2  curveto
-27 9 -29 19 -26 31  curveto
-24 41 -19 50 -10 58  curveto
-2 65 7 68 17 68  curveto
28 68 38 63 47 53  curveto
54 45 60 41 65 41  curveto
68 41 74 44 81 49  curveto
99 62 125 88 160 129  curveto
194 170 218 200 229 218  curveto
225 297 222 339 222 344  curveto
218 365 212 380 201 389  curveto
191 397 174 402 151 402  curveto
143 402 135 402 125 401  curveto
128 418 lineto
closepath
fill
		} def

	/y
		{
250 441 moveto
257 423 261 405 262 388  curveto
263 372 261 340 255 291  curveto
229 51 lineto
253 75 289 112 336 163  curveto
359 187 388 221 422 264  curveto
444 290 457 308 463 318  curveto
466 324 468 329 469 334  curveto
470 338 469 341 467 343  curveto
465 346 460 348 451 351  curveto
442 354 435 360 430 368  curveto
426 377 425 386 427 397  curveto
429 410 435 421 445 429  curveto
454 437 465 441 477 441  curveto
491 441 502 435 510 424  curveto
517 412 519 395 515 375  curveto
510 349 495 319 471 286  curveto
447 253 403 203 339 134  curveto
275 66 200 -8 112 -88  curveto
52 -144 8 -179 -17 -194  curveto
-44 -208 -66 -215 -83 -215  curveto
-93 -215 -101 -211 -107 -204  curveto
-113 -196 -115 -187 -113 -177  curveto
-111 -165 -103 -153 -90 -143  curveto
-78 -132 -65 -127 -53 -127  curveto
-46 -127 -41 -128 -38 -131  curveto
-35 -133 -33 -138 -32 -145  curveto
-30 -153 -28 -158 -26 -161  curveto
-25 -162 -23 -163 -21 -163  curveto
-19 -163 -15 -161 -10 -158  curveto
9 -147 34 -130 62 -105  curveto
100 -74 128 -48 147 -27  curveto
182 281 lineto
187 332 187 363 180 375  curveto
173 386 159 391 137 391  curveto
131 391 118 390 100 388  curveto
99 406 lineto
closepath
fill
		} def

	/z
		{
168 430 moveto
478 430 lineto
475 417 lineto
67 66 lineto
210 66 lineto
244 66 266 67 275 70  curveto
285 72 294 78 304 86  curveto
313 95 325 110 339 132  curveto
357 132 lineto
288 0 lineto
-29 0 lineto
-26 14 lineto
381 365 lineto
240 365 lineto
211 365 192 364 186 363  curveto
176 361 166 356 156 347  curveto
145 339 133 325 120 306  curveto
101 306 lineto
closepath
fill
		} def

	/braceleft
		{
219 -198 moveto
210 -215 lineto
169 -209 139 -193 120 -166  curveto
102 -140 96 -109 103 -72  curveto
110 -39 130 0 165 48  curveto
200 95 219 128 223 147  curveto
227 168 224 186 212 201  curveto
201 216 182 225 155 229  curveto
165 249 lineto
199 253 230 264 258 282  curveto
285 299 306 319 320 342  curveto
330 357 341 387 352 432  curveto
364 477 382 517 407 551  curveto
431 585 467 615 512 643  curveto
558 671 605 688 654 694  curveto
645 677 lineto
607 668 574 655 548 638  curveto
522 620 501 599 486 575  curveto
475 558 464 528 454 486  curveto
443 444 429 410 412 383  curveto
395 357 368 330 332 303  curveto
296 277 252 256 200 240  curveto
231 226 252 208 264 184  curveto
277 161 280 135 274 107  curveto
269 79 248 41 214 -6  curveto
179 -54 159 -89 155 -110  curveto
150 -131 153 -149 162 -164  curveto
172 -179 191 -190 219 -198  curveto
closepath
fill
		} def

	/bar
		{
258 694 moveto
75 -215 lineto
35 -215 lineto
217 694 lineto
closepath
fill
		} def

	/braceright
		{
357 677 moveto
365 694 lineto
406 688 437 672 455 645  curveto
474 619 480 588 473 551  curveto
466 518 445 477 410 430  curveto
375 383 356 350 352 331  curveto
348 310 352 292 363 277  curveto
375 262 394 253 421 249  curveto
411 229 lineto
377 225 346 214 319 196  curveto
291 179 270 159 255 136  curveto
246 121 235 91 224 46  curveto
212 0 194 -38 169 -72  curveto
144 -106 109 -137 63 -165  curveto
18 -192 -28 -209 -77 -215  curveto
-69 -198 lineto
-30 -189 1 -176 28 -159  curveto
54 -142 75 -121 90 -96  curveto
101 -79 111 -49 122 -7  curveto
133 34 146 67 161 89  curveto
179 119 207 147 243 174  curveto
280 201 324 222 375 238  curveto
345 251 323 270 311 294  curveto
299 317 296 343 301 371  curveto
307 399 327 437 362 485  curveto
397 533 417 567 421 589  curveto
425 610 423 628 413 643  curveto
404 658 385 669 357 677  curveto
closepath
fill
		} def

	/asciitilde
		{
586 329 moveto
608 329 lineto
598 287 579 254 552 230  curveto
524 206 494 194 461 194  curveto
446 194 431 196 414 201  curveto
398 206 357 224 291 253  curveto
245 274 211 284 190 284  curveto
167 284 147 277 128 263  curveto
110 249 94 226 82 195  curveto
60 195 lineto
71 239 90 272 116 296  curveto
143 319 172 331 201 331  curveto
216 331 230 328 244 324  curveto
276 314 317 297 368 274  curveto
418 250 454 238 477 238  curveto
501 238 523 246 543 262  curveto
563 277 577 300 586 329  curveto
closepath
fill
		} def

	/exclamdown
		{
358 478 moveto
371 478 382 473 390 463  curveto
398 453 400 441 398 427  curveto
395 414 388 402 376 392  curveto
364 382 351 377 338 377  curveto
324 377 313 382 305 392  curveto
297 402 295 414 297 427  curveto
300 441 308 453 319 463  curveto
331 473 344 478 358 478  curveto
closepath
290 300 moveto
308 300 lineto
280 241 260 196 247 165  curveto
235 134 219 94 201 43  curveto
164 -59 142 -119 135 -137  curveto
123 -166 108 -188 90 -204  curveto
81 -212 71 -215 59 -215  curveto
50 -215 43 -212 38 -205  curveto
33 -197 32 -188 35 -176  curveto
37 -162 44 -145 54 -124  curveto
77 -78 118 -5 177 96  curveto
206 144 221 171 224 176  curveto
234 194 256 235 290 300  curveto
closepath
fill
		} def

	/cent
		{
436 107 moveto
400 68 364 40 328 21  curveto
292 2 252 -8 208 -11  curveto
121 -184 lineto
93 -184 lineto
179 -11 lineto
141 -7 113 7 95 32  curveto
78 58 73 90 81 130  curveto
96 202 135 269 199 331  curveto
263 392 331 429 404 441  curveto
502 636 lineto
529 636 lineto
434 441 lineto
472 441 498 434 512 420  curveto
525 405 530 386 525 362  curveto
521 343 513 327 501 315  curveto
488 303 475 297 462 297  curveto
451 297 443 300 438 306  curveto
433 312 431 320 433 330  curveto
435 336 437 342 441 348  curveto
444 353 452 360 463 370  curveto
474 380 480 388 481 395  curveto
482 398 481 402 479 405  curveto
476 410 471 414 464 416  curveto
457 418 443 419 423 419  curveto
230 33 lineto
250 32 lineto
305 32 363 61 426 120  curveto
closepath
205 40 moveto
392 414 lineto
360 401 333 386 311 369  curveto
273 338 242 303 217 263  curveto
192 224 175 183 167 142  curveto
161 115 162 92 170 74  curveto
176 62 187 50 205 40  curveto
closepath
fill
		} def

	/sterling
		{
353 362 moveto
485 362 lineto
465 320 lineto
335 320 lineto
301 241 265 171 227 109  curveto
238 104 253 98 270 90  curveto
296 76 318 68 333 63  curveto
349 58 364 56 378 56  curveto
392 56 405 59 419 66  curveto
433 72 446 82 459 95  curveto
481 95 lineto
455 58 427 31 398 12  curveto
369 -5 338 -15 306 -15  curveto
286 -15 267 -11 250 -2  curveto
233 5 211 22 182 49  curveto
164 27 146 11 129 0  curveto
112 -9 96 -15 80 -15  curveto
63 -15 50 -9 41 1  curveto
32 12 29 26 32 43  curveto
36 65 50 84 71 101  curveto
93 117 117 125 145 125  curveto
150 125 155 125 162 125  curveto
168 125 175 124 182 123  curveto
195 158 217 223 246 320  curveto
133 320 lineto
154 362 lineto
261 362 lineto
313 486 367 571 422 618  curveto
466 656 514 675 565 675  curveto
593 675 614 667 629 652  curveto
643 636 648 618 644 598  curveto
641 584 635 573 625 565  curveto
615 557 604 553 593 553  curveto
580 553 569 558 562 568  curveto
559 573 556 585 555 603  curveto
555 621 553 631 550 635  curveto
545 643 537 647 528 647  curveto
516 647 503 642 491 632  curveto
473 616 452 586 430 541  curveto
420 522 394 462 353 362  curveto
closepath
156 70 moveto
147 76 140 79 132 82  curveto
125 85 119 86 113 86  curveto
100 86 89 82 78 73  curveto
67 64 60 54 58 42  curveto
56 33 57 24 62 18  curveto
67 11 74 7 82 7  curveto
93 7 104 12 117 21  curveto
129 31 142 47 156 70  curveto
closepath
fill
		} def

	/fraction
		{
468 675 moveto
-128 -26 lineto
-171 -26 lineto
425 675 lineto
closepath
fill
		} def

	/yen
		{
339 216 moveto
560 216 lineto
543 184 lineto
323 184 lineto
299 135 lineto
281 100 271 74 267 57  curveto
265 45 267 37 274 31  curveto
282 23 303 19 334 18  curveto
324 0 lineto
72 0 lineto
81 18 lineto
108 19 126 22 135 25  curveto
148 32 160 41 170 53  curveto
177 61 191 85 211 125  curveto
240 184 lineto
29 184 lineto
46 216 lineto
257 216 lineto
308 318 lineto
87 318 lineto
103 351 lineto
306 351 lineto
285 547 lineto
281 585 275 610 268 621  curveto
260 633 248 640 231 643  curveto
239 662 lineto
456 662 lineto
448 643 lineto
419 643 399 639 388 632  curveto
376 624 369 614 367 602  curveto
364 588 364 567 367 540  curveto
385 351 lineto
556 536 lineto
593 577 614 604 616 618  curveto
617 623 615 628 610 633  curveto
602 639 584 642 558 643  curveto
566 662 lineto
754 662 lineto
745 643 lineto
726 641 707 634 689 623  curveto
671 612 645 588 611 551  curveto
424 351 lineto
617 351 lineto
601 318 lineto
394 318 lineto
386 309 lineto
closepath
fill
		} def

	/florin
		{
420 427 moveto
507 427 lineto
493 395 lineto
408 395 lineto
373 307 322 192 254 49  curveto
202 -61 154 -134 111 -169  curveto
78 -196 47 -210 18 -210  curveto
0 -210 -13 -205 -22 -195  curveto
-30 -185 -33 -173 -30 -159  curveto
-28 -146 -22 -136 -13 -127  curveto
-3 -119 5 -115 15 -115  curveto
23 -115 30 -118 35 -124  curveto
41 -130 43 -136 41 -143  curveto
40 -150 36 -156 31 -161  curveto
27 -165 24 -168 24 -170  curveto
23 -173 24 -175 26 -177  curveto
28 -180 30 -181 34 -181  curveto
41 -181 47 -179 53 -176  curveto
64 -170 76 -160 88 -145  curveto
101 -129 116 -100 135 -58  curveto
138 -51 166 16 217 144  curveto
222 155 259 239 328 395  curveto
241 395 lineto
255 427 lineto
288 429 308 432 317 434  curveto
326 437 334 442 341 450  curveto
352 461 366 483 383 515  curveto
421 584 453 628 478 648  curveto
504 667 529 677 556 677  curveto
576 677 591 671 601 661  curveto
611 650 615 637 612 622  curveto
610 611 604 602 597 595  curveto
589 588 580 584 571 584  curveto
563 584 556 587 551 593  curveto
546 599 544 605 546 612  curveto
547 617 550 623 555 629  curveto
559 635 562 639 562 642  curveto
563 645 562 648 560 651  curveto
557 653 553 654 548 654  curveto
538 654 527 650 517 643  curveto
504 632 494 618 487 602  curveto
470 562 448 504 420 427  curveto
closepath
fill
		} def

	/section
		{
340 374 moveto
325 402 315 426 312 446  curveto
308 466 309 488 313 511  curveto
323 560 347 601 386 634  curveto
425 666 467 683 513 683  curveto
550 683 579 671 601 649  curveto
622 626 630 604 625 580  curveto
623 570 617 560 607 551  curveto
601 545 593 542 583 542  curveto
573 542 566 545 562 552  curveto
557 558 555 573 556 596  curveto
557 618 553 634 544 643  curveto
530 655 513 662 492 662  curveto
464 662 438 651 412 630  curveto
387 609 371 583 365 554  curveto
360 528 360 506 366 486  curveto
371 466 388 436 415 397  curveto
443 358 460 323 467 292  curveto
472 271 472 249 467 224  curveto
460 187 442 157 414 133  curveto
386 109 355 97 321 97  curveto
308 97 293 101 276 108  curveto
293 76 303 49 307 29  curveto
311 8 311 -12 306 -34  curveto
297 -81 272 -120 233 -153  curveto
194 -186 150 -203 102 -203  curveto
59 -203 27 -191 5 -167  curveto
-17 -143 -25 -117 -19 -88  curveto
-17 -76 -11 -66 -3 -59  curveto
4 -51 13 -47 21 -47  curveto
30 -47 37 -51 43 -59  curveto
50 -67 52 -81 52 -103  curveto
51 -131 56 -151 69 -164  curveto
81 -177 98 -183 121 -183  curveto
152 -183 180 -173 206 -152  curveto
232 -131 248 -106 254 -76  curveto
259 -54 258 -33 254 -12  curveto
249 7 237 32 219 61  curveto
182 115 161 154 154 177  curveto
148 201 147 226 153 254  curveto
161 292 178 322 205 345  curveto
233 368 265 379 301 379  curveto
312 379 325 377 340 374  curveto
closepath
293 362 moveto
273 362 254 355 236 341  curveto
219 327 208 310 204 291  curveto
196 249 205 209 233 171  curveto
260 134 291 115 326 115  curveto
344 115 362 122 379 136  curveto
396 150 406 167 410 187  curveto
416 215 413 244 403 273  curveto
392 302 377 324 356 339  curveto
335 355 314 362 293 362  curveto
closepath
fill
		} def

	/currency
		{
487 497 moveto
570 566 lineto
593 539 lineto
509 470 lineto
534 427 542 381 532 333  curveto
522 282 496 236 454 194  curveto
510 123 lineto
476 96 lineto
420 166 lineto
370 132 323 116 279 116  curveto
250 116 223 121 198 131  curveto
173 141 155 152 145 166  curveto
59 96 lineto
37 123 lineto
122 194 lineto
96 232 89 278 100 332  curveto
110 383 136 429 177 470  curveto
120 539 lineto
153 566 lineto
211 497 lineto
231 512 255 524 282 533  curveto
310 542 336 547 360 547  curveto
382 547 405 543 428 534  curveto
452 526 471 513 487 497  curveto
closepath
351 507 moveto
302 507 257 490 215 455  curveto
174 421 149 379 139 330  curveto
129 282 138 241 166 207  curveto
194 172 232 155 280 155  curveto
329 155 374 172 416 207  curveto
457 242 483 283 493 331  curveto
498 361 496 390 486 418  curveto
476 447 458 469 433 484  curveto
408 500 381 507 351 507  curveto
closepath
fill
		} def

	/quotesingle
		{
209 392 moveto
253 536 lineto
266 577 276 605 283 619  curveto
293 640 305 654 318 663  curveto
331 672 344 677 358 677  curveto
370 677 378 673 384 667  curveto
390 660 391 652 389 642  curveto
388 635 384 626 379 617  curveto
373 605 355 578 327 536  curveto
231 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
467 662 moveto
440 652 416 636 394 616  curveto
384 606 377 595 375 581  curveto
373 574 373 569 374 564  curveto
374 562 377 557 383 548  curveto
388 539 392 533 393 529  curveto
394 523 394 518 393 512  curveto
390 499 383 487 371 476  curveto
359 466 347 461 333 461  curveto
320 461 309 466 302 477  curveto
294 487 292 501 296 519  curveto
300 538 309 557 323 578  curveto
337 598 355 616 379 633  curveto
395 644 421 659 459 677  curveto
closepath
691 662 moveto
654 643 630 628 619 616  curveto
607 605 601 593 598 582  curveto
597 575 597 569 598 564  curveto
599 562 602 556 607 548  curveto
613 539 616 534 617 530  curveto
619 525 619 519 617 513  curveto
615 499 607 487 595 476  curveto
584 466 571 461 557 461  curveto
543 461 533 466 525 476  curveto
518 487 516 500 519 518  curveto
525 546 540 573 566 600  curveto
591 627 631 651 684 673  curveto
closepath
fill
		} def

	/guillemotleft
		{
385 449 moveto
173 215 lineto
180 -15 lineto
158 -15 lineto
84 215 lineto
359 449 lineto
closepath
572 449 moveto
359 215 lineto
367 -15 lineto
346 -15 lineto
271 215 lineto
545 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
401 449 moveto
188 216 lineto
196 -15 lineto
175 -15 lineto
99 216 lineto
374 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
19 -15 moveto
232 218 lineto
224 449 lineto
245 449 lineto
320 218 lineto
45 -15 lineto
closepath
fill
		} def

	/fi
		{
279 398 moveto
182 183 lineto
150 112 118 49 85 -5  curveto
52 -59 19 -102 -12 -133  curveto
-45 -164 -76 -187 -106 -202  curveto
-125 -211 -144 -215 -163 -215  curveto
-184 -215 -200 -209 -212 -198  curveto
-221 -189 -224 -179 -222 -167  curveto
-220 -157 -214 -148 -204 -140  curveto
-193 -132 -182 -128 -170 -128  curveto
-162 -128 -155 -131 -150 -136  curveto
-146 -141 -144 -147 -145 -154  curveto
-147 -161 -151 -167 -157 -173  curveto
-164 -178 -169 -182 -170 -185  curveto
-170 -188 lineto
-169 -190 -167 -192 -164 -193  curveto
-161 -194 -158 -195 -154 -195  curveto
-133 -195 -114 -187 -95 -173  curveto
-63 -149 -35 -114 -10 -68  curveto
-5 -60 34 26 110 192  curveto
204 398 lineto
117 398 lineto
131 430 lineto
150 430 lineto
172 430 191 434 207 442  curveto
217 448 227 459 239 475  curveto
287 544 322 589 344 612  curveto
365 634 393 653 427 669  curveto
462 686 497 694 534 694  curveto
570 694 595 687 609 674  curveto
623 660 628 644 625 625  curveto
622 612 616 602 607 594  curveto
598 586 588 582 576 582  curveto
566 582 557 586 550 593  curveto
545 598 544 606 545 615  curveto
547 622 551 629 558 636  curveto
565 644 569 649 570 651  curveto
571 656 569 659 564 663  curveto
558 669 547 671 534 671  curveto
508 671 480 663 451 647  curveto
423 630 398 608 377 581  curveto
356 554 328 504 294 430  curveto
422 430 lineto
457 430 482 430 495 432  curveto
509 433 524 437 542 441  curveto
556 441 lineto
389 97 lineto
379 77 374 63 372 55  curveto
371 52 372 49 374 46  curveto
377 43 379 42 382 42  curveto
388 42 395 45 404 50  curveto
420 60 443 80 472 110  curveto
487 97 lineto
449 56 414 26 382 7  curveto
359 -5 340 -11 324 -11  curveto
310 -11 299 -7 292 0  curveto
286 7 283 17 286 28  curveto
288 39 296 59 309 86  curveto
428 329 lineto
439 353 446 369 448 377  curveto
448 381 448 384 446 386  curveto
444 391 439 395 433 396  curveto
429 398 417 398 397 398  curveto
closepath
fill
		} def

	/fl
		{
468 398 moveto
283 398 lineto
185 182 lineto
117 33 54 -70 -3 -128  curveto
-62 -186 -116 -215 -165 -215  curveto
-186 -215 -202 -211 -211 -201  curveto
-221 -192 -225 -181 -222 -168  curveto
-220 -157 -214 -147 -204 -139  curveto
-194 -131 -182 -126 -170 -126  curveto
-161 -126 -153 -129 -148 -135  curveto
-143 -141 -141 -147 -143 -153  curveto
-144 -159 -149 -166 -157 -172  curveto
-161 -176 -164 -179 -166 -180  curveto
-167 -183 lineto
-168 -185 -167 -188 -165 -190  curveto
-161 -193 -157 -194 -152 -194  curveto
-132 -194 -113 -187 -96 -174  curveto
-64 -150 -36 -115 -9 -68  curveto
9 -34 51 52 114 193  curveto
207 398 lineto
119 398 lineto
135 430 lineto
155 430 lineto
180 430 198 432 209 438  curveto
220 444 232 455 244 473  curveto
301 558 352 617 397 647  curveto
441 678 488 694 538 694  curveto
551 694 563 693 572 690  curveto
582 687 594 682 609 674  curveto
623 675 633 677 641 679  curveto
648 682 657 687 669 694  curveto
688 694 lineto
394 98 lineto
385 79 380 66 378 58  curveto
377 54 378 50 380 48  curveto
382 45 385 43 388 43  curveto
394 43 402 46 411 52  curveto
431 64 453 84 478 110  curveto
493 98 lineto
455 55 419 25 388 7  curveto
365 -5 346 -11 330 -11  curveto
316 -11 305 -7 299 0  curveto
292 8 290 18 292 31  curveto
295 43 302 62 314 86  curveto
closepath
483 430 moveto
561 587 lineto
554 596 552 604 554 612  curveto
555 619 560 627 568 635  curveto
576 642 580 648 581 651  curveto
582 655 580 658 575 662  curveto
569 667 557 669 540 669  curveto
513 669 486 662 457 647  curveto
429 632 405 611 384 583  curveto
364 556 335 505 298 430  curveto
closepath
fill
		} def

	/endash
		{
349 249 moveto
316 184 lineto
63 184 lineto
96 249 lineto
closepath
fill
		} def

	/dagger
		{
400 328 moveto
361 276 323 219 287 158  curveto
250 97 186 -22 92 -202  curveto
74 -202 lineto
198 36 271 207 291 311  curveto
294 328 lineto
316 344 334 361 349 379  curveto
364 396 378 417 391 441  curveto
366 439 338 431 305 418  curveto
272 405 250 399 238 399  curveto
223 399 211 404 202 413  curveto
196 420 193 430 196 441  curveto
198 453 205 463 216 471  curveto
227 479 241 483 257 483  curveto
272 483 292 479 318 469  curveto
335 463 347 459 355 457  curveto
363 455 377 454 398 453  curveto
409 475 417 502 424 533  curveto
435 599 lineto
439 622 450 642 468 659  curveto
480 671 494 677 510 677  curveto
522 677 532 672 538 664  curveto
545 655 547 644 544 630  curveto
542 618 537 606 531 596  curveto
522 581 506 562 483 537  curveto
460 513 445 496 438 488  curveto
431 479 424 467 417 453  curveto
437 454 451 456 458 457  curveto
465 458 477 462 494 467  curveto
528 478 552 483 568 483  curveto
583 483 594 479 602 470  curveto
609 462 612 452 609 441  curveto
607 430 600 420 589 411  curveto
578 402 566 398 551 398  curveto
542 398 534 399 526 401  curveto
518 404 504 410 482 421  curveto
460 431 436 438 410 441  curveto
402 421 397 404 394 392  curveto
390 371 392 349 400 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
412 370 moveto
378 347 349 315 322 275  curveto
296 235 280 197 272 159  curveto
269 145 269 128 271 107  curveto
234 80 204 44 180 0  curveto
209 1 236 6 261 14  curveto
285 22 304 26 316 26  curveto
326 26 334 23 340 16  curveto
346 8 348 0 346 -9  curveto
344 -19 339 -28 330 -35  curveto
322 -42 313 -45 303 -45  curveto
291 -45 273 -40 246 -29  curveto
227 -21 202 -16 170 -15  curveto
157 -45 147 -77 140 -109  curveto
130 -152 119 -181 106 -195  curveto
93 -208 80 -215 66 -215  curveto
58 -215 52 -211 46 -204  curveto
40 -196 39 -188 40 -178  curveto
44 -158 60 -132 87 -101  curveto
113 -69 134 -41 150 -15  curveto
121 -18 93 -24 64 -34  curveto
43 -41 26 -44 13 -44  curveto
3 -44 -4 -41 -10 -34  curveto
-15 -27 -17 -18 -16 -9  curveto
-14 0 -8 8 0 15  curveto
9 23 18 27 27 27  curveto
40 27 58 22 81 14  curveto
104 5 130 0 160 0  curveto
169 19 174 34 177 46  curveto
181 66 178 87 169 107  curveto
204 129 234 161 260 201  curveto
286 241 303 280 311 319  curveto
314 334 314 351 311 370  curveto
330 383 345 396 358 410  curveto
370 424 386 447 404 478  curveto
377 476 351 472 325 463  curveto
299 455 279 451 266 451  curveto
256 451 248 455 242 462  curveto
236 470 234 479 236 488  curveto
238 498 244 506 253 513  curveto
262 521 272 524 282 524  curveto
295 524 312 520 336 510  curveto
359 501 385 496 413 495  curveto
427 524 438 557 446 595  curveto
453 633 464 659 477 673  curveto
490 687 504 694 517 694  curveto
525 694 532 690 538 683  curveto
543 676 545 668 544 659  curveto
539 637 523 610 497 580  curveto
470 549 448 521 432 495  curveto
459 497 486 502 511 510  curveto
537 519 556 523 570 523  curveto
579 523 587 519 594 511  curveto
600 504 603 495 601 486  curveto
599 477 593 469 584 462  curveto
575 454 565 451 555 451  curveto
542 451 524 455 500 464  curveto
476 472 450 477 423 478  curveto
414 456 408 439 405 425  curveto
402 408 404 390 412 370  curveto
closepath
fill
		} def

	/periodcentered
		{
202 385 moveto
217 385 229 379 237 369  curveto
245 358 248 346 245 331  curveto
242 316 234 303 221 292  curveto
209 282 195 276 180 276  curveto
165 276 153 282 145 292  curveto
136 303 134 316 137 331  curveto
140 346 147 358 160 369  curveto
173 379 187 385 202 385  curveto
closepath
fill
		} def

	/paragraph
		{
516 635 moveto
346 -215 lineto
311 -215 lineto
481 635 lineto
390 635 lineto
220 -215 lineto
184 -215 lineto
286 293 lineto
224 296 179 304 151 318  curveto
123 331 104 353 93 382  curveto
83 410 81 443 88 479  curveto
96 514 108 544 127 566  curveto
152 598 182 621 217 637  curveto
251 654 294 662 345 662  curveto
587 662 lineto
581 635 lineto
closepath
fill
		} def

	/bullet
		{
268 453 moveto
302 453 328 441 347 417  curveto
366 393 373 364 366 330  curveto
359 296 341 267 313 243  curveto
284 219 253 208 219 208  curveto
185 208 158 219 139 243  curveto
120 267 114 296 121 330  curveto
128 364 145 393 174 417  curveto
202 441 234 453 268 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
9 -109 moveto
36 -98 59 -84 77 -67  curveto
92 -54 100 -42 102 -30  curveto
104 -24 104 -19 103 -14  curveto
102 -11 98 -6 92 1  curveto
86 9 83 14 82 17  curveto
81 23 81 29 83 36  curveto
85 50 93 62 104 72  curveto
116 82 128 87 141 87  curveto
154 87 165 82 173 71  curveto
181 61 184 47 181 31  curveto
175 2 158 -27 129 -56  curveto
100 -86 62 -109 16 -125  curveto
closepath
fill
		} def

	/quotedblbase
		{
216 -109 moveto
243 -99 267 -84 288 -64  curveto
299 -54 306 -43 308 -29  curveto
310 -23 310 -17 309 -13  curveto
309 -11 306 -6 300 2  curveto
294 10 291 17 290 20  curveto
288 26 288 32 289 38  curveto
292 51 299 63 311 73  curveto
323 83 336 88 350 88  curveto
363 88 373 83 381 72  curveto
388 61 390 48 387 30  curveto
383 11 374 -8 360 -28  curveto
346 -48 327 -66 305 -83  curveto
288 -94 261 -109 223 -127  curveto
closepath
-7 -109 moveto
29 -91 53 -77 64 -65  curveto
76 -53 82 -42 85 -31  curveto
86 -24 86 -18 85 -13  curveto
84 -11 81 -6 75 2  curveto
70 10 66 16 66 20  curveto
64 25 64 30 65 36  curveto
68 50 76 62 87 72  curveto
99 83 112 88 125 88  curveto
139 88 150 83 157 72  curveto
165 62 167 48 163 30  curveto
150 -33 95 -86 -1 -127  curveto
closepath
fill
		} def

	/quotedblright
		{
502 479 moveto
528 489 552 504 574 524  curveto
584 534 591 546 594 559  curveto
595 566 595 571 594 575  curveto
594 577 591 583 585 591  curveto
580 600 576 606 575 610  curveto
574 615 574 621 575 627  curveto
577 640 585 652 597 662  curveto
609 672 621 677 635 677  curveto
648 677 659 672 666 661  curveto
674 651 676 637 672 620  curveto
668 600 659 580 645 560  curveto
631 540 613 522 589 505  curveto
573 494 547 479 509 461  curveto
closepath
278 479 moveto
314 497 338 512 349 523  curveto
361 535 368 547 370 558  curveto
371 564 371 570 370 575  curveto
369 577 366 583 361 591  curveto
355 600 352 606 351 609  curveto
350 614 350 620 351 625  curveto
354 639 361 652 373 662  curveto
384 672 397 677 410 677  curveto
424 677 435 672 443 661  curveto
450 651 452 637 449 619  curveto
436 555 381 502 284 461  curveto
closepath
fill
		} def

	/guillemotright
		{
201 -15 moveto
414 217 lineto
406 449 lineto
428 449 lineto
503 217 lineto
227 -15 lineto
closepath
15 -15 moveto
227 217 lineto
219 449 lineto
241 449 lineto
316 217 lineto
40 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
203 94 moveto
218 94 230 89 238 78  curveto
246 68 249 55 246 40  curveto
243 25 235 12 222 2  curveto
210 -8 196 -13 181 -13  curveto
166 -13 154 -8 146 2  curveto
137 12 134 25 137 40  curveto
141 55 148 68 161 79  curveto
174 89 188 94 203 94  curveto
closepath
461 94 moveto
476 94 488 89 496 78  curveto
505 68 507 55 504 40  curveto
501 25 493 12 481 2  curveto
468 -8 454 -13 439 -13  curveto
424 -13 412 -8 404 2  curveto
396 12 393 25 396 40  curveto
399 55 407 68 419 79  curveto
432 89 446 94 461 94  curveto
closepath
719 94 moveto
734 94 746 89 755 78  curveto
763 68 765 55 762 40  curveto
759 25 752 12 739 2  curveto
726 -8 712 -13 697 -13  curveto
682 -13 671 -8 662 2  curveto
654 12 651 25 654 40  curveto
657 55 665 68 678 79  curveto
690 89 704 94 719 94  curveto
closepath
fill
		} def

	/perthousand
		{
782 677 moveto
99 -26 lineto
56 -26 lineto
741 677 lineto
closepath
390 677 moveto
420 677 444 664 462 639  curveto
480 614 485 582 477 543  curveto
465 483 435 431 386 388  curveto
338 344 291 322 245 322  curveto
211 322 186 334 169 358  curveto
152 382 147 414 155 453  curveto
163 491 180 528 206 564  curveto
233 600 264 628 299 647  curveto
334 667 364 677 390 677  curveto
closepath
389 656 moveto
374 656 359 650 345 639  curveto
316 616 288 581 260 533  curveto
232 486 214 441 206 399  curveto
202 381 204 367 212 356  curveto
219 346 229 340 242 340  curveto
258 340 272 345 284 355  curveto
311 375 339 410 368 460  curveto
397 509 416 555 425 598  curveto
428 615 426 629 418 640  curveto
411 651 401 656 389 656  curveto
closepath
593 327 moveto
626 327 651 314 669 290  curveto
687 266 692 234 685 195  curveto
672 134 642 82 593 39  curveto
545 -4 498 -26 454 -26  curveto
421 -26 395 -14 377 9  curveto
359 33 354 64 361 103  curveto
373 163 404 215 453 260  curveto
503 304 549 327 593 327  curveto
closepath
596 307 moveto
580 307 564 300 549 288  curveto
522 267 495 232 467 183  curveto
440 134 422 90 414 52  curveto
411 33 412 19 419 8  curveto
426 -1 436 -6 449 -6  curveto
466 -6 480 -1 494 8  curveto
520 29 548 63 577 111  curveto
605 159 624 203 632 243  curveto
636 263 634 279 627 290  curveto
619 301 609 307 596 307  curveto
closepath
937 326 moveto
969 326 993 314 1011 290  curveto
1028 266 1033 233 1024 192  curveto
1017 154 1000 117 974 82  curveto
947 47 918 20 885 1  curveto
853 -16 823 -26 795 -26  curveto
762 -26 737 -14 719 10  curveto
701 34 696 66 704 104  curveto
716 163 746 215 796 260  curveto
845 304 892 326 937 326  curveto
closepath
938 306 moveto
922 306 907 301 893 290  curveto
868 271 841 237 812 187  curveto
783 138 764 92 756 50  curveto
752 33 754 19 762 9  curveto
770 -1 780 -6 794 -6  curveto
809 -6 822 -2 833 5  curveto
857 25 885 59 916 108  curveto
946 157 966 203 974 244  curveto
978 263 976 278 967 291  curveto
961 301 951 306 938 306  curveto
closepath
fill
		} def

	/questiondown
		{
443 477 moveto
457 477 467 472 475 462  curveto
483 453 485 441 482 427  curveto
480 413 472 401 461 392  curveto
449 382 436 377 423 377  curveto
409 377 398 382 390 392  curveto
383 401 380 413 383 427  curveto
386 441 393 453 405 462  curveto
416 472 429 477 443 477  curveto
closepath
378 299 moveto
396 299 lineto
383 257 366 222 345 192  curveto
324 162 284 121 225 69  curveto
176 26 141 -9 121 -38  curveto
107 -58 97 -79 93 -101  curveto
88 -127 93 -149 107 -166  curveto
122 -184 144 -193 172 -193  curveto
200 -193 224 -187 243 -175  curveto
254 -169 261 -161 262 -152  curveto
264 -145 263 -136 260 -125  curveto
257 -113 256 -104 258 -96  curveto
260 -85 265 -76 275 -69  curveto
284 -61 294 -58 306 -58  curveto
317 -58 326 -62 332 -70  curveto
339 -78 341 -89 338 -102  curveto
334 -119 325 -137 310 -154  curveto
294 -172 273 -186 247 -198  curveto
220 -210 191 -215 159 -215  curveto
109 -215 72 -201 47 -173  curveto
22 -145 13 -112 20 -76  curveto
26 -47 38 -22 56 0  curveto
81 27 123 59 183 95  curveto
243 131 286 163 311 191  curveto
337 218 359 254 378 299  curveto
closepath
fill
		} def

	/grave
		{
420 684 moveto
440 516 lineto
424 516 lineto
312 684 lineto
closepath
fill
		} def

	/acute
		{
496 684 moveto
319 517 lineto
303 517 lineto
386 684 lineto
closepath
fill
		} def

	/circumflex
		{
484 677 moveto
490 522 lineto
480 522 lineto
417 621 lineto
241 522 lineto
228 522 lineto
411 677 lineto
closepath
fill
		} def

	/tilde
		{
526 666 moveto
540 666 lineto
533 625 518 593 496 571  curveto
473 549 449 538 425 538  curveto
401 538 376 548 349 567  curveto
322 587 305 599 298 602  curveto
293 605 287 606 280 606  curveto
268 606 257 602 248 593  curveto
239 585 230 567 220 540  curveto
204 540 lineto
216 585 232 618 253 637  curveto
274 657 297 666 321 666  curveto
345 666 372 655 402 632  curveto
431 610 453 598 465 598  curveto
477 598 487 602 496 611  curveto
507 622 517 640 526 666  curveto
closepath
fill
		} def

	/macron
		{
651 713 moveto
134 713 lineto
142 754 lineto
659 754 lineto
closepath
fill
		} def

	/breve
		{
544 686 moveto
558 686 lineto
527 638 493 602 457 578  curveto
421 554 388 542 360 542  curveto
329 542 306 554 290 577  curveto
275 601 272 637 280 686  curveto
296 686 lineto
296 662 303 644 317 632  curveto
330 619 351 613 378 613  curveto
433 613 488 637 544 686  curveto
closepath
fill
		} def

	/dotaccent
		{
402 654 moveto
416 654 427 649 436 638  curveto
444 628 447 616 444 602  curveto
441 587 433 575 421 565  curveto
409 554 395 549 381 549  curveto
367 549 355 554 347 565  curveto
339 575 336 587 339 602  curveto
342 616 350 628 362 638  curveto
374 649 387 654 402 654  curveto
closepath
fill
		} def

	/dieresis
		{
487 654 moveto
502 654 513 649 521 638  curveto
529 628 532 616 529 601  curveto
526 587 519 574 506 564  curveto
494 554 481 549 466 549  curveto
452 549 441 554 433 564  curveto
424 574 422 587 425 601  curveto
427 616 435 628 447 638  curveto
459 649 473 654 487 654  curveto
closepath
313 654 moveto
328 654 340 649 348 638  curveto
356 628 359 616 356 601  curveto
353 587 345 574 333 564  curveto
321 554 307 549 292 549  curveto
278 549 267 554 259 564  curveto
250 574 248 587 251 601  curveto
254 616 261 628 274 638  curveto
286 649 299 654 313 654  curveto
closepath
fill
		} def

	/ring
		{
417 693 moveto
442 693 462 684 477 666  curveto
491 649 496 627 490 601  curveto
485 576 472 554 450 536  curveto
429 518 405 509 380 509  curveto
354 509 334 518 320 536  curveto
305 554 301 576 306 601  curveto
311 627 324 649 346 666  curveto
367 684 391 693 417 693  curveto
closepath
411 662 moveto
394 662 378 656 364 644  curveto
350 632 341 618 338 601  curveto
334 584 337 570 347 558  curveto
356 546 370 541 387 541  curveto
403 541 419 546 433 558  curveto
447 570 456 584 459 601  curveto
463 618 460 632 450 644  curveto
441 656 428 662 411 662  curveto
closepath
fill
		} def

	/cedilla
		{
129 14 moveto
100 -22 lineto
118 -26 131 -35 139 -47  curveto
147 -60 149 -75 146 -93  curveto
141 -115 129 -134 107 -149  curveto
78 -170 47 -180 14 -180  curveto
-3 -180 -25 -177 -52 -169  curveto
-42 -153 lineto
-27 -157 -13 -159 -2 -159  curveto
18 -159 35 -154 49 -144  curveto
62 -134 71 -122 73 -108  curveto
76 -96 74 -87 69 -82  curveto
61 -74 48 -70 30 -70  curveto
101 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
389 653 moveto
397 673 405 688 414 697  curveto
423 706 434 710 447 710  curveto
458 710 466 707 472 701  curveto
477 695 479 686 476 675  curveto
476 671 474 665 470 658  curveto
467 652 464 645 459 639  curveto
325 431 lineto
308 431 lineto
closepath
239 653 moveto
247 674 255 688 264 697  curveto
273 706 284 710 296 710  curveto
308 710 316 707 322 701  curveto
327 695 329 686 327 675  curveto
326 670 324 664 321 658  curveto
318 651 315 645 310 639  curveto
175 431 lineto
158 431 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
90 -21 82 -38 80 -51  curveto
75 -76 80 -97 95 -114  curveto
111 -132 134 -141 164 -141  curveto
180 -141 200 -137 225 -129  curveto
233 -144 lineto
206 -159 184 -170 166 -176  curveto
149 -181 131 -184 113 -184  curveto
78 -184 52 -175 36 -156  curveto
20 -138 15 -115 20 -87  curveto
26 -56 45 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
306 522 moveto
300 677 lineto
310 677 lineto
373 578 lineto
549 677 lineto
562 677 lineto
379 522 lineto
closepath
fill
		} def

	/emdash
		{
349 249 moveto
316 184 lineto
63 184 lineto
96 249 lineto
closepath
fill
		} def

	/AE
		{
602 331 moveto
491 106 lineto
481 85 476 70 474 63  curveto
473 56 475 50 481 43  curveto
486 37 497 34 511 34  curveto
570 34 lineto
682 34 773 84 843 184  curveto
862 184 lineto
761 0 lineto
273 0 lineto
281 18 lineto
310 18 332 22 347 32  curveto
368 45 389 70 408 109  curveto
470 235 lineto
266 235 lineto
178 148 lineto
146 116 126 94 116 80  curveto
109 71 105 62 104 53  curveto
101 43 104 35 111 28  curveto
118 22 131 18 152 18  curveto
143 0 lineto
-52 0 lineto
-44 18 lineto
-23 19 -4 25 14 36  curveto
33 46 65 75 112 121  curveto
545 553 lineto
566 574 580 588 585 596  curveto
591 604 594 611 595 618  curveto
596 623 596 627 594 631  curveto
591 635 587 638 582 640  curveto
576 642 565 644 549 644  curveto
559 662 lineto
1041 662 lineto
969 504 lineto
949 504 lineto
955 520 959 533 961 544  curveto
964 560 963 573 957 584  curveto
949 599 935 611 915 619  curveto
900 626 867 629 816 629  curveto
747 629 lineto
619 366 lineto
667 366 lineto
707 366 738 372 759 383  curveto
788 399 812 425 831 460  curveto
853 460 lineto
734 220 lineto
714 220 lineto
725 242 731 260 734 274  curveto
738 295 733 311 719 321  curveto
709 328 686 331 648 331  curveto
closepath
489 272 moveto
662 629 lineto
303 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
511 677 moveto
410 478 lineto
402 461 397 450 395 443  curveto
395 441 395 439 397 437  curveto
398 435 400 434 402 434  curveto
405 434 410 436 415 439  curveto
424 445 437 457 454 474  curveto
464 467 lineto
426 426 392 405 364 405  curveto
355 405 348 407 345 411  curveto
341 416 340 422 341 429  curveto
343 439 348 452 356 467  curveto
367 489 lineto
332 456 302 432 277 419  curveto
258 410 241 405 225 405  curveto
209 405 196 411 188 423  curveto
179 435 177 451 181 472  curveto
187 501 203 533 229 567  curveto
255 602 284 628 316 648  curveto
348 667 375 677 397 677  curveto
410 677 421 674 428 668  curveto
435 662 440 652 442 637  curveto
460 670 lineto
closepath
398 664 moveto
374 664 346 648 315 617  curveto
270 571 243 526 234 482  curveto
231 469 232 458 238 450  curveto
243 442 251 438 261 438  curveto
285 438 316 458 355 496  curveto
395 534 419 574 427 617  curveto
430 632 429 644 424 652  curveto
418 660 410 664 398 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-18 18 lineto
9 19 26 21 33 24  curveto
47 30 58 38 67 48  curveto
79 61 95 88 115 129  curveto
180 261 lineto
45 177 lineto
73 232 lineto
208 317 lineto
313 532 lineto
328 563 338 586 340 601  curveto
343 614 340 624 332 631  curveto
324 638 304 643 273 644  curveto
283 662 lineto
551 662 lineto
542 644 lineto
511 643 490 639 476 634  curveto
463 628 451 618 440 605  curveto
432 596 417 570 396 526  curveto
332 395 lineto
489 494 lineto
463 437 lineto
304 338 lineto
202 129 lineto
186 96 177 75 175 66  curveto
174 59 177 52 184 45  curveto
190 40 202 37 222 37  curveto
284 37 lineto
341 37 387 46 421 65  curveto
455 84 490 118 526 167  curveto
542 189 lineto
561 189 lineto
closepath
fill
		} def

	/Oslash
		{
770 621 moveto
848 688 lineto
869 662 lineto
789 594 lineto
811 547 817 498 807 448  curveto
793 377 758 303 700 226  curveto
643 149 576 89 500 47  curveto
423 5 352 -15 286 -15  curveto
228 -15 181 3 144 40  curveto
54 -35 lineto
32 -11 lineto
124 67 lineto
111 93 103 117 100 140  curveto
97 163 98 188 103 216  curveto
118 290 155 364 213 440  curveto
271 515 338 573 412 615  curveto
487 656 558 677 624 677  curveto
659 677 690 671 717 660  curveto
735 652 753 639 770 621  curveto
closepath
712 571 moveto
705 595 694 612 680 623  curveto
660 637 635 645 604 645  curveto
572 645 542 638 513 625  curveto
474 606 435 578 395 541  curveto
356 503 316 452 277 387  curveto
238 322 213 256 200 191  curveto
196 173 195 152 195 127  curveto
closepath
719 533 moveto
202 89 lineto
218 41 254 18 309 18  curveto
340 18 370 25 401 39  curveto
432 53 468 80 509 119  curveto
551 158 592 211 634 280  curveto
675 349 702 414 715 478  curveto
718 493 719 511 719 533  curveto
closepath
fill
		} def

	/OE
		{
919 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
250 -6 lineto
205 -6 166 3 135 23  curveto
103 44 82 72 71 109  curveto
60 146 58 184 66 222  curveto
78 281 104 339 143 394  curveto
183 450 227 497 275 537  curveto
324 577 376 608 431 632  curveto
486 656 533 667 571 667  curveto
575 667 591 667 620 665  curveto
665 663 712 662 759 662  curveto
1101 662 lineto
1027 501 lineto
1008 501 lineto
1013 516 1017 528 1019 538  curveto
1022 554 1020 570 1013 584  curveto
1006 598 995 609 981 615  curveto
966 621 935 625 888 625  curveto
789 625 lineto
661 363 lineto
700 363 lineto
737 363 766 366 785 371  curveto
805 377 822 386 836 398  curveto
851 410 867 430 884 458  curveto
902 458 lineto
784 217 lineto
766 217 lineto
777 243 784 261 786 271  curveto
789 288 786 302 777 313  curveto
768 324 753 329 733 329  curveto
706 329 lineto
643 329 lineto
541 121 lineto
527 92 519 74 517 65  curveto
516 59 516 53 519 47  curveto
522 42 526 38 531 36  curveto
536 35 551 34 575 34  curveto
627 34 lineto
666 34 697 37 721 45  curveto
757 55 790 72 820 95  curveto
850 119 877 148 901 183  curveto
closepath
634 482 moveto
653 521 664 549 668 567  curveto
671 583 666 598 653 611  curveto
640 624 618 630 586 630  curveto
529 630 477 616 429 586  curveto
367 548 311 490 261 415  curveto
210 339 178 265 163 194  curveto
153 142 159 102 181 73  curveto
203 44 240 29 291 29  curveto
337 29 373 39 399 57  curveto
425 76 454 118 486 183  curveto
closepath
fill
		} def

	/ordmasculine
		{
510 587 moveto
500 539 473 497 429 460  curveto
384 423 338 405 290 405  curveto
260 405 238 413 224 431  curveto
210 448 205 470 210 497  curveto
219 541 247 583 292 620  curveto
338 658 384 677 431 677  curveto
460 677 482 668 496 651  curveto
511 634 515 613 510 587  curveto
closepath
461 605 moveto
465 623 463 637 455 647  curveto
448 657 436 662 420 662  curveto
389 662 356 641 322 599  curveto
288 558 267 517 259 478  curveto
255 459 257 445 265 435  curveto
273 425 285 419 301 419  curveto
331 419 362 440 397 481  curveto
431 522 453 563 461 605  curveto
closepath
fill
		} def

	/ae
		{
534 434 moveto
513 386 lineto
562 423 607 441 648 441  curveto
676 441 697 434 711 420  curveto
725 406 730 389 726 370  curveto
722 351 712 332 696 311  curveto
679 291 659 273 635 258  curveto
611 243 579 228 541 214  curveto
502 200 462 190 421 185  curveto
412 162 407 143 404 128  curveto
398 99 401 77 413 61  curveto
424 45 443 37 469 37  curveto
491 37 514 43 539 55  curveto
564 66 594 88 629 119  curveto
639 104 lineto
603 67 566 38 527 18  curveto
488 -1 454 -11 423 -11  curveto
387 -11 360 0 341 22  curveto
323 46 317 75 325 111  curveto
326 120 329 132 333 146  curveto
276 82 236 42 214 26  curveto
177 1 141 -11 107 -11  curveto
83 -11 64 -1 51 17  curveto
38 37 35 65 42 101  curveto
52 151 79 205 123 263  curveto
167 322 216 368 270 402  curveto
311 428 348 441 379 441  curveto
401 441 417 435 427 422  curveto
438 409 441 387 438 355  curveto
469 423 lineto
closepath
160 45 moveto
178 45 202 55 232 76  curveto
272 104 310 145 347 201  curveto
384 257 407 307 416 351  curveto
420 375 419 392 412 402  curveto
405 413 393 418 376 418  curveto
335 418 285 381 226 306  curveto
167 232 133 167 122 113  curveto
118 94 121 77 130 61  curveto
137 50 147 45 160 45  curveto
closepath
430 208 moveto
503 223 559 247 597 279  curveto
636 312 658 342 664 370  curveto
666 382 664 393 657 402  curveto
649 411 640 416 628 416  curveto
612 416 593 409 569 395  curveto
545 382 522 361 501 334  curveto
480 307 456 265 430 208  curveto
closepath
fill
		} def

	/dotlessi
		{
318 441 moveto
153 99 lineto
142 76 136 62 135 58  curveto
134 52 134 48 137 45  curveto
139 42 143 40 147 40  curveto
152 40 158 43 166 48  curveto
187 62 210 83 235 110  curveto
249 99 lineto
220 65 189 37 154 14  curveto
129 -3 106 -11 86 -11  curveto
72 -11 62 -7 55 0  curveto
48 8 46 18 49 30  curveto
51 42 59 62 73 90  curveto
180 309 lineto
198 344 207 367 209 376  curveto
211 383 209 389 205 394  curveto
201 398 194 400 186 400  curveto
178 400 163 399 140 395  curveto
144 414 lineto
closepath
fill
		} def

	/lslash
		{
439 694 moveto
285 386 lineto
377 437 lineto
357 397 lineto
268 347 lineto
153 112 lineto
137 81 129 63 129 61  curveto
128 55 129 51 131 48  curveto
133 44 137 42 141 42  curveto
146 42 154 46 166 53  curveto
184 65 206 84 230 112  curveto
244 101 lineto
209 59 175 29 143 9  curveto
118 -4 97 -11 78 -11  curveto
66 -11 56 -7 50 0  curveto
43 9 41 19 44 32  curveto
46 43 55 66 73 101  curveto
166 291 lineto
72 238 lineto
92 278 lineto
186 331 lineto
297 560 lineto
320 608 lineto
324 617 326 623 327 628  curveto
329 635 327 641 323 646  curveto
318 651 311 653 300 653  curveto
292 653 279 652 260 649  curveto
264 668 lineto
closepath
fill
		} def

	/oslash
		{
563 471 moveto
579 451 lineto
506 388 lineto
522 356 527 323 520 288  curveto
510 239 486 189 449 140  curveto
411 91 367 54 317 27  curveto
266 1 219 -11 175 -11  curveto
156 -11 140 -8 127 -3  curveto
113 2 99 11 86 24  curveto
14 -35 lineto
0 -15 lineto
71 45 lineto
54 77 49 108 55 140  curveto
65 187 89 235 127 284  curveto
165 333 211 371 263 399  curveto
316 427 364 441 407 441  curveto
424 441 438 439 451 434  curveto
464 430 477 421 491 409  curveto
closepath
448 370 moveto
440 388 431 400 422 406  curveto
414 412 401 416 385 416  curveto
358 416 330 404 301 382  curveto
260 352 223 307 187 247  curveto
159 198 140 154 132 113  curveto
131 109 130 104 129 96  curveto
closepath
450 338 moveto
130 62 lineto
138 42 147 29 156 22  curveto
165 15 178 12 195 12  curveto
212 12 230 16 248 25  curveto
266 34 288 52 313 77  curveto
337 102 364 139 392 187  curveto
420 235 438 280 447 321  curveto
447 323 448 329 450 338  curveto
closepath
fill
		} def

	/oe
		{
624 117 moveto
633 103 lineto
592 64 551 35 512 16  curveto
472 -2 440 -11 415 -11  curveto
391 -11 372 -4 358 9  curveto
344 24 337 45 337 74  curveto
278 16 218 -12 159 -12  curveto
120 -12 90 1 70 29  curveto
50 56 44 93 53 137  curveto
61 178 79 217 105 255  curveto
131 293 161 326 193 354  curveto
225 381 257 403 291 418  curveto
324 434 354 441 379 441  curveto
410 441 434 433 451 417  curveto
469 401 478 380 478 354  curveto
541 412 600 441 657 441  curveto
682 441 700 435 712 422  curveto
723 410 727 393 723 373  curveto
719 354 710 337 697 319  curveto
678 295 654 273 626 255  curveto
597 236 563 220 524 207  curveto
485 193 451 185 424 182  curveto
418 163 414 149 412 138  curveto
406 109 409 85 421 68  curveto
433 50 450 41 472 41  curveto
490 41 506 45 523 53  curveto
547 64 580 85 624 117  curveto
closepath
168 9 moveto
211 9 257 46 307 118  curveto
368 208 405 281 416 338  curveto
421 362 418 381 408 395  curveto
398 409 384 416 365 416  curveto
346 416 326 409 305 394  curveto
277 373 244 335 207 280  curveto
161 211 132 146 120 84  curveto
115 61 117 42 127 29  curveto
136 16 150 9 168 9  curveto
closepath
433 206 moveto
498 219 551 242 590 275  curveto
629 309 652 341 658 373  curveto
661 386 659 396 654 404  curveto
648 412 640 416 630 416  curveto
601 416 570 398 537 364  curveto
504 329 469 276 433 206  curveto
closepath
fill
		} def

	/germandbls
		{
337 404 moveto
390 404 436 423 474 462  curveto
512 500 536 542 545 588  curveto
550 611 546 630 535 645  curveto
524 661 508 668 488 668  curveto
469 668 450 663 433 652  curveto
415 641 396 622 376 593  curveto
363 574 341 533 309 469  curveto
152 147 lineto
54 -38 lineto
37 -70 23 -94 11 -109  curveto
-4 -130 -22 -149 -42 -166  curveto
-63 -184 -82 -196 -100 -204  curveto
-118 -211 -134 -215 -149 -215  curveto
-164 -215 -177 -210 -187 -199  curveto
-194 -191 -196 -181 -194 -167  curveto
-192 -157 -187 -148 -178 -142  curveto
-170 -135 -161 -131 -151 -131  curveto
-144 -131 -138 -134 -134 -139  curveto
-130 -144 -128 -150 -129 -156  curveto
-130 -160 -134 -166 -139 -174  curveto
-144 -179 -146 -183 -147 -186  curveto
-147 -188 -147 -190 -145 -191  curveto
-143 -194 -139 -195 -134 -195  curveto
-121 -195 -107 -189 -93 -176  curveto
-73 -159 -48 -120 -18 -59  curveto
104 201 lineto
222 441 lineto
259 518 289 571 312 599  curveto
334 627 362 650 394 667  curveto
426 685 460 694 495 694  curveto
538 694 570 681 590 656  curveto
611 632 618 600 610 562  curveto
604 530 589 502 567 477  curveto
545 452 517 432 483 416  curveto
460 406 428 397 387 390  curveto
419 381 442 371 457 358  curveto
472 346 482 329 489 307  curveto
495 285 496 261 491 236  curveto
483 195 465 155 436 116  curveto
408 78 375 47 337 23  curveto
299 0 267 -11 240 -11  curveto
217 -11 200 -3 188 11  curveto
176 27 173 48 178 74  curveto
182 92 189 105 198 114  curveto
207 123 218 127 229 127  curveto
239 127 246 124 251 118  curveto
256 112 258 104 256 94  curveto
254 84 247 71 237 56  curveto
229 45 225 37 224 32  curveto
223 26 224 20 228 16  curveto
231 11 237 9 244 9  curveto
256 9 267 13 278 22  curveto
306 43 332 73 354 112  curveto
383 163 403 211 412 256  curveto
419 293 413 324 394 349  curveto
381 367 358 379 327 384  curveto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 28.0 scalefont setfont
(x) show
Q
Q
newpath
0.0 0.0 m
0.0 412.0 l
426.0 412.0 l
426.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
34 4 59 38 rc
38.0 30.0 moveto
q 1 -1 scale
/TimesNewRoman-Italic findfont 28.0 scalefont setfont
(f\(x\)) show
Q
Q
newpath
0.0 0.0 m
0.0 412.0 l
426.0 412.0 l
426.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
