%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, October 22, 2010 12:57:02 AM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
8.00000 -1.00000 379.493 390.000 rc
newpath
9.00000 194.498 m
103.073 194.498 l
103.199 355.699 l
197.236 355.699 l
197.362 33.2981 l
291.269 33.2981 l
291.386 194.498 l
385.493 194.498 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 1.00000 0 RG
8.00000 -1.00000 379.493 390.000 rc
newpath
9.00000 194.498 m
10.9894 167.340 l
12.9789 140.778 l
14.7099 118.598 l
16.4409 97.6585 l
18.3876 75.9851 l
20.3343 56.6714 l
22.2939 39.9258 l
24.2535 26.1077 l
28.1541 7.70455 l
29.0582 5.15844 l
29.9623 3.23577 l
30.8663 1.91741 l
31.7704 1.18011 l
32.7066 1.00000 l
33.6427 1.37960 l
34.5788 2.28100 l
35.5149 3.66278 l
37.4512 7.85110 l
39.3875 13.4760 l
43.2477 27.1528 l
47.2183 41.4284 l
50.7157 51.3557 l
52.6843 55.0950 l
54.6529 57.2146 l
55.6412 57.6269 l
56.6295 57.5936 l
57.6179 57.1152 l
58.6062 56.1983 l
60.5111 53.2479 l
62.4160 48.8784 l
65.8757 38.1206 l
69.9895 23.0234 l
73.4745 11.1890 l
75.5014 5.85543 l
77.5284 2.30081 l
78.4255 1.41861 l
79.3225 1.01345 l
80.2196 1.11898 l
81.1167 1.76565 l
83.0852 5.20828 l
85.0537 11.6021 l
88.8027 32.3107 l
90.7585 47.5119 l
92.7143 65.5360 l
94.5104 84.3474 l
96.3064 105.043 l
98.2437 129.104 l
100.181 154.508 l
102.193 181.766 l
104.205 209.310 l
105.957 233.039 l
107.709 256.113 l
109.600 279.857 l
111.492 301.947 l
113.447 322.617 l
115.401 340.747 l
117.313 355.767 l
119.226 367.933 l
121.076 376.919 l
122.926 383.183 l
123.953 385.518 l
124.980 387.069 l
126.007 387.870 l
127.034 387.960 l
127.957 387.474 l
128.880 386.489 l
129.803 385.044 l
130.726 383.184 l
132.696 378.032 l
134.667 371.663 l
138.239 358.610 l
142.143 344.986 l
143.980 339.727 l
145.817 335.591 l
146.778 333.947 l
147.738 332.689 l
148.698 331.834 l
149.658 331.393 l
150.596 331.368 l
151.535 331.746 l
152.474 332.520 l
153.413 333.682 l
155.378 337.298 l
157.343 342.335 l
161.129 354.920 l
165.001 369.196 l
168.840 381.262 l
170.604 385.112 l
172.368 387.438 l
173.379 387.970 l
174.390 387.857 l
175.401 387.055 l
176.412 385.526 l
178.220 380.880 l
180.029 373.677 l
183.885 349.597 l
185.730 333.997 l
187.576 315.975 l
189.625 293.440 l
191.674 268.679 l
193.448 245.846 l
195.222 222.122 l
199.250 167.144 l
201.086 142.609 l
202.921 119.037 l
204.929 94.8527 l
206.936 72.8191 l
208.669 55.8574 l
210.401 41.0199 l
214.347 15.8754 l
216.253 8.18115 l
218.158 3.32656 l
219.111 1.91980 l
220.063 1.15762 l
221.015 1.00827 l
221.967 1.43554 l
223.865 3.84310 l
225.762 8.01818 l
229.408 19.5021 l
233.349 34.0251 l
237.105 46.5345 l
239.082 51.6262 l
241.058 55.2836 l
241.953 56.4079 l
242.848 57.1811 l
243.742 57.5943 l
244.637 57.6426 l
245.626 57.2710 l
246.615 56.4585 l
247.603 55.2167 l
248.592 53.5630 l
250.486 49.3361 l
252.380 43.9131 l
256.159 30.7377 l
260.107 16.3693 l
261.924 10.5875 l
263.742 5.86816 l
264.673 3.98306 l
265.604 2.52011 l
266.534 1.52359 l
267.465 1.03476 l
268.493 1.13043 l
269.521 1.93740 l
270.549 3.49569 l
271.576 5.83895 l
273.437 12.1618 l
275.298 21.2401 l
279.105 48.3676 l
281.040 66.3282 l
282.976 86.7802 l
284.755 107.481 l
286.534 129.672 l
288.431 154.556 l
290.327 180.234 l
292.210 205.999 l
294.092 231.538 l
296.105 258.041 l
298.118 283.133 l
299.895 303.680 l
301.671 322.397 l
303.721 341.373 l
305.771 357.251 l
309.471 377.522 l
311.301 383.520 l
313.131 386.957 l
314.116 387.804 l
315.100 387.994 l
316.084 387.566 l
317.068 386.565 l
319.044 383.024 l
321.020 377.803 l
324.616 365.559 l
328.435 351.516 l
332.162 339.897 l
334.182 335.370 l
336.201 332.460 l
337.075 331.749 l
337.949 331.383 l
338.823 331.365 l
339.697 331.695 l
341.704 333.748 l
343.712 337.493 l
347.486 348.273 l
351.224 361.763 l
354.964 375.067 l
356.872 380.703 l
358.779 384.983 l
359.791 386.560 l
360.802 387.583 l
361.813 388.000 l
362.824 387.762 l
363.751 386.934 l
364.678 385.490 l
365.605 383.408 l
366.532 380.667 l
370.192 363.187 l
372.148 349.467 l
374.105 332.824 l
376.057 313.523 l
378.009 291.841 l
379.761 270.672 l
381.513 248.229 l
383.503 221.662 l
385.493 194.498 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 0 1.00000 RG
8.00000 -1.00000 379.493 390.000 rc
newpath
9.00000 194.498 m
9.99472 167.345 l
10.9894 140.817 l
11.9841 115.512 l
12.9789 91.9819 l
14.7099 56.6360 l
16.4409 29.9012 l
18.3876 11.1158 l
20.3343 3.82809 l
20.8242 3.60507 l
21.3141 3.94989 l
21.8040 4.81497 l
22.2939 6.14938 l
23.2737 10.0099 l
24.2535 15.0827 l
28.1541 38.4604 l
29.9623 46.3903 l
31.7704 50.3702 l
32.7066 50.7294 l
33.6427 49.9745 l
34.5788 48.2150 l
35.5149 45.6107 l
37.4512 38.4294 l
39.3875 30.5397 l
41.3176 23.9689 l
43.2477 20.2227 l
44.2403 19.6781 l
45.2330 20.1051 l
46.2257 21.4495 l
47.2183 23.5981 l
48.9670 28.8186 l
50.7157 34.8604 l
52.6843 41.0515 l
54.6529 45.0416 l
55.6412 45.8582 l
56.6295 45.7918 l
57.6179 44.8465 l
58.6062 43.0850 l
60.5111 37.8585 l
62.4160 31.3499 l
64.1458 25.6839 l
65.8757 21.4888 l
66.9041 20.0927 l
67.9326 19.6821 l
68.4468 19.8674 l
68.9611 20.3152 l
69.4753 21.0212 l
69.9895 21.9764 l
71.7320 26.8491 l
73.4745 33.4996 l
75.5014 41.7155 l
77.5284 48.1769 l
77.9769 49.1435 l
78.4255 49.8974 l
78.8740 50.4217 l
79.3225 50.7025 l
80.2196 50.4919 l
81.1167 49.2142 l
83.0852 42.7713 l
85.0537 32.3058 l
86.9282 20.6718 l
88.8027 10.2288 l
89.7806 6.30593 l
90.7585 4.01611 l
91.2474 3.61544 l
91.7364 3.77557 l
92.2254 4.54040 l
92.7143 5.94931 l
94.5104 17.1539 l
96.3064 38.4713 l
97.2751 54.1651 l
98.2437 72.6068 l
99.2123 93.5223 l
100.181 116.545 l
101.187 142.212 l
102.193 169.099 l
103.199 196.584 l
104.205 224.020 l
105.081 247.359 l
105.957 269.764 l
106.833 290.853 l
107.709 310.290 l
109.600 345.354 l
111.492 369.555 l
112.470 377.609 l
113.447 382.734 l
113.936 384.258 l
114.424 385.132 l
114.913 385.395 l
115.401 385.090 l
117.313 379.368 l
119.226 368.893 l
122.926 347.298 l
123.953 343.063 l
124.980 340.100 l
126.007 338.521 l
127.034 338.340 l
128.880 341.218 l
130.726 347.208 l
134.667 362.663 l
135.560 365.354 l
136.453 367.414 l
137.346 368.748 l
138.239 369.304 l
139.215 369.010 l
140.191 367.818 l
141.167 365.827 l
142.143 363.185 l
145.817 350.875 l
147.738 345.704 l
149.658 343.184 l
150.596 343.135 l
151.535 343.883 l
152.474 345.384 l
153.413 347.548 l
155.378 353.613 l
157.343 360.392 l
159.236 365.909 l
161.129 368.990 l
162.097 369.309 l
163.065 368.703 l
164.033 367.184 l
165.001 364.826 l
166.920 358.215 l
168.840 350.383 l
170.604 343.794 l
172.368 339.375 l
173.379 338.320 l
174.390 338.546 l
175.401 340.126 l
176.412 343.048 l
178.220 351.220 l
180.029 361.935 l
181.957 373.710 l
183.885 382.630 l
184.346 383.955 l
184.807 384.874 l
185.269 385.343 l
185.730 385.321 l
186.653 383.657 l
187.576 379.624 l
189.625 361.347 l
191.674 329.852 l
192.561 312.384 l
193.448 292.895 l
194.335 271.677 l
195.222 249.079 l
196.229 222.252 l
198.243 167.284 l
199.250 140.438 l
200.168 117.056 l
201.086 95.1563 l
202.003 75.1217 l
202.921 57.2712 l
204.929 26.9146 l
206.936 9.26095 l
207.803 5.45462 l
208.669 3.74398 l
209.102 3.61062 l
209.535 3.91876 l
209.968 4.63549 l
210.401 5.72589 l
212.374 14.3797 l
214.347 26.3292 l
216.253 37.6707 l
218.158 46.2195 l
219.111 48.9129 l
220.063 50.4150 l
221.015 50.7130 l
221.967 49.8639 l
223.865 45.2793 l
225.762 38.1657 l
227.585 30.7303 l
229.408 24.4112 l
230.393 21.9489 l
231.378 20.3494 l
232.364 19.6925 l
233.349 19.9950 l
235.227 23.0188 l
237.105 28.4592 l
239.082 35.2721 l
241.058 41.3925 l
241.953 43.4818 l
242.848 44.9756 l
243.742 45.7930 l
244.637 45.8895 l
245.626 45.1525 l
246.615 43.5783 l
247.603 41.2712 l
248.592 38.3846 l
252.380 25.7188 l
253.325 23.1703 l
254.270 21.2315 l
255.215 20.0373 l
256.159 19.6803 l
257.146 20.2482 l
258.133 21.7659 l
259.120 24.1588 l
260.107 27.2918 l
263.742 41.6937 l
265.604 47.7562 l
267.465 50.6600 l
268.493 50.4691 l
269.521 48.8786 l
270.549 45.9025 l
271.576 41.6543 l
275.298 19.9115 l
277.202 9.52688 l
279.105 3.89074 l
279.589 3.60125 l
280.073 3.86965 l
280.557 4.73776 l
281.040 6.24298 l
282.008 11.2900 l
282.976 19.2067 l
284.755 41.5148 l
286.534 73.5134 l
287.483 94.0692 l
288.431 116.635 l
289.379 140.792 l
290.327 166.062 l
291.269 191.728 l
292.210 217.452 l
293.151 242.703 l
294.092 266.967 l
295.098 291.291 l
296.105 313.424 l
297.112 332.938 l
298.118 349.513 l
299.895 371.040 l
301.671 382.649 l
302.184 384.262 l
302.696 385.161 l
303.209 385.389 l
303.721 384.998 l
304.746 382.580 l
305.771 378.384 l
307.621 367.978 l
309.471 356.501 l
311.301 346.704 l
313.131 340.317 l
313.624 339.323 l
314.116 338.652 l
314.608 338.303 l
315.100 338.273 l
315.592 338.551 l
316.084 339.123 l
316.576 339.970 l
317.068 341.071 l
319.044 347.482 l
321.020 355.504 l
322.818 362.342 l
324.616 367.250 l
325.571 368.725 l
326.525 369.310 l
327.480 368.996 l
328.435 367.823 l
330.298 363.457 l
332.162 357.352 l
334.182 350.504 l
336.201 345.268 l
337.075 343.890 l
337.949 343.164 l
338.823 343.128 l
339.697 343.784 l
341.704 347.667 l
343.712 353.911 l
345.599 360.421 l
347.486 365.916 l
348.420 367.811 l
349.355 368.973 l
350.289 369.316 l
351.224 368.796 l
353.094 365.251 l
354.964 359.004 l
356.872 351.262 l
358.779 344.029 l
359.791 341.081 l
360.802 339.090 l
361.813 338.262 l
362.824 338.735 l
364.678 343.115 l
366.532 351.570 l
370.192 373.645 l
371.170 378.757 l
372.148 382.684 l
372.637 384.063 l
373.126 384.978 l
373.616 385.381 l
374.105 385.223 l
376.057 378.197 l
378.009 359.642 l
379.761 332.757 l
381.513 297.033 l
382.508 273.499 l
383.503 248.190 l
384.498 221.657 l
385.493 194.498 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.00000 -1.00000 379.493 390.000 rc
newpath
9.00000 194.498 m
9.49736 160.633 l
9.99472 127.997 l
10.4920 97.7377 l
10.9894 70.8498 l
11.4868 48.1122 l
11.9841 30.0426 l
12.4815 16.8716 l
12.9789 8.53903 l
13.1952 6.34860 l
13.4116 4.97134 l
13.6280 4.35711 l
13.8444 4.44894 l
14.2771 6.49334 l
14.7099 10.5470 l
15.5754 22.2652 l
16.4409 34.8841 l
17.4142 45.4212 l
18.3876 49.2320 l
19.3609 46.2077 l
20.3343 38.6617 l
21.3141 30.0883 l
22.2939 23.9480 l
22.7838 22.5009 l
23.2737 22.2761 l
23.7636 23.2199 l
24.2535 25.1651 l
26.2038 37.0575 l
28.1541 41.7218 l
29.9623 34.8839 l
31.7704 27.0244 l
32.2385 26.2322 l
32.7066 26.1433 l
33.1746 26.7444 l
33.6427 27.9575 l
34.5788 31.6456 l
35.5149 35.7516 l
35.9990 37.5214 l
36.4831 38.8128 l
36.9672 39.5059 l
37.4512 39.5444 l
38.4194 37.7677 l
39.3875 34.2921 l
40.3526 30.5685 l
41.3176 28.0590 l
41.8001 27.5869 l
42.2826 27.7074 l
42.7652 28.3985 l
43.2477 29.5813 l
44.2403 32.9776 l
45.2330 36.4162 l
45.7293 37.6846 l
46.2257 38.4623 l
46.7220 38.6709 l
47.2183 38.2942 l
48.9670 33.4852 l
50.7157 28.5842 l
51.2078 28.1416 l
51.7000 28.2530 l
52.1921 28.9037 l
52.6843 30.0219 l
53.6686 33.1407 l
54.6529 36.3089 l
55.1470 37.4894 l
55.6412 38.2158 l
56.1354 38.4104 l
56.6295 38.0522 l
57.6179 35.8862 l
58.6062 32.6217 l
59.5587 29.7127 l
60.5111 28.1924 l
60.9873 28.1722 l
61.4636 28.6682 l
61.9398 29.6337 l
62.4160 30.9746 l
63.2809 33.9237 l
64.1458 36.7098 l
64.5783 37.7471 l
65.0108 38.4222 l
65.4432 38.6761 l
65.8757 38.4839 l
67.9326 32.7934 l
69.9895 27.6071 l
71.7320 30.4358 l
73.4745 37.0506 l
73.9812 38.5020 l
74.4880 39.3875 l
74.9947 39.5923 l
75.5014 39.0763 l
76.5149 36.1229 l
77.5284 31.7172 l
78.4255 28.1349 l
79.3225 26.2104 l
79.7711 26.1454 l
80.2196 26.7293 l
80.6682 27.9298 l
81.1167 29.6585 l
82.1010 34.5674 l
83.0852 39.3140 l
83.5774 40.9586 l
84.0695 41.8288 l
84.5616 41.7947 l
85.0537 40.8184 l
86.9282 30.7175 l
88.8027 22.3177 l
90.7585 29.6861 l
92.7143 45.9150 l
93.1633 48.1763 l
93.6123 49.1986 l
93.8368 49.1752 l
94.0613 48.7710 l
94.2859 47.9768 l
94.5104 46.7912 l
95.4084 38.4081 l
96.3064 25.8838 l
97.2751 12.1691 l
98.2437 4.52642 l
99.2123 9.40148 l
100.181 31.3756 l
100.684 50.0908 l
101.187 73.5430 l
101.690 101.167 l
102.193 132.131 l
102.696 165.380 l
103.199 199.712 l
103.702 233.849 l
104.205 266.528 l
104.643 292.877 l
105.081 316.569 l
105.519 337.072 l
105.957 354.009 l
106.833 376.536 l
107.709 384.577 l
109.600 368.185 l
111.492 343.925 l
111.981 340.931 l
112.470 339.778 l
112.714 339.879 l
112.958 340.402 l
113.203 341.313 l
113.447 342.571 l
114.424 350.041 l
115.401 358.621 l
116.357 364.792 l
117.313 366.768 l
118.270 364.330 l
119.226 358.882 l
120.151 352.953 l
121.076 348.544 l
121.538 347.395 l
122.001 347.072 l
122.463 347.571 l
122.926 348.811 l
124.980 358.667 l
127.034 362.672 l
128.880 356.553 l
130.726 349.954 l
131.218 349.416 l
131.711 349.560 l
132.204 350.355 l
132.696 351.701 l
133.682 355.392 l
134.667 359.064 l
135.114 360.298 l
135.560 361.109 l
136.006 361.432 l
136.453 361.246 l
137.346 359.486 l
138.239 356.480 l
139.215 353.013 l
140.191 350.722 l
140.679 350.330 l
141.167 350.505 l
141.655 351.225 l
142.143 352.407 l
143.062 355.413 l
143.980 358.478 l
144.440 359.676 l
144.899 360.496 l
145.358 360.864 l
145.817 360.748 l
147.738 356.041 l
149.658 350.894 l
150.127 350.584 l
150.596 350.773 l
151.066 351.443 l
151.535 352.529 l
152.474 355.499 l
153.413 358.560 l
153.904 359.797 l
154.395 360.599 l
154.887 360.880 l
155.378 360.608 l
156.361 358.561 l
157.343 355.286 l
158.290 352.229 l
159.236 350.475 l
159.709 350.335 l
160.183 350.729 l
160.656 351.623 l
161.129 352.934 l
162.097 356.357 l
163.065 359.603 l
163.549 360.728 l
164.033 361.343 l
164.517 361.377 l
165.001 360.818 l
166.920 354.458 l
168.840 349.428 l
170.604 352.744 l
172.368 360.239 l
172.874 361.808 l
173.379 362.723 l
173.885 362.857 l
174.390 362.168 l
175.401 358.612 l
176.412 353.442 l
177.316 349.265 l
178.220 347.145 l
178.672 347.190 l
179.124 348.031 l
179.577 349.626 l
180.029 351.863 l
180.993 357.896 l
181.957 363.656 l
182.439 365.640 l
182.921 366.674 l
183.403 366.589 l
183.885 365.320 l
185.730 351.964 l
187.576 340.005 l
189.625 351.748 l
191.674 379.918 l
192.117 383.459 l
192.561 384.682 l
193.004 383.011 l
193.448 377.975 l
194.335 356.602 l
195.222 319.861 l
195.726 292.888 l
196.229 262.408 l
196.733 229.443 l
197.740 160.892 l
198.243 127.853 l
198.747 97.2543 l
199.250 70.1254 l
199.709 49.1055 l
200.168 32.0463 l
200.627 19.1488 l
201.086 10.4026 l
201.545 5.59457 l
202.003 4.33087 l
202.462 6.06890 l
202.921 10.1579 l
204.929 38.0109 l
206.936 48.9547 l
208.669 37.8738 l
210.401 24.5746 l
210.894 22.7803 l
211.388 22.2172 l
211.881 22.8653 l
212.374 24.5830 l
213.360 30.1898 l
214.347 36.4713 l
214.823 38.9594 l
215.300 40.7710 l
215.776 41.7600 l
216.253 41.8662 l
217.205 39.6221 l
218.158 35.1479 l
219.111 30.2961 l
220.063 26.9162 l
220.539 26.1857 l
221.015 26.1845 l
221.491 26.8900 l
221.967 28.2114 l
223.865 36.1622 l
225.762 39.4998 l
227.585 34.4867 l
229.408 28.3337 l
229.901 27.6677 l
230.393 27.6137 l
230.886 28.1671 l
231.378 29.2596 l
232.364 32.5228 l
233.349 36.0176 l
233.819 37.3310 l
234.288 38.2377 l
234.758 38.6544 l
235.227 38.5460 l
236.166 36.8657 l
237.105 33.8654 l
238.094 30.5486 l
239.082 28.4268 l
239.576 28.1172 l
240.070 28.3679 l
240.564 29.1492 l
241.058 30.3750 l
241.953 33.2721 l
242.848 36.1647 l
243.295 37.2874 l
243.742 38.0553 l
244.190 38.4006 l
244.637 38.2932 l
246.615 33.4376 l
248.592 28.3209 l
249.066 28.1195 l
249.539 28.4329 l
250.013 29.2328 l
250.486 30.4427 l
251.433 33.5934 l
252.380 36.6772 l
252.853 37.8028 l
253.325 38.4911 l
253.797 38.6701 l
254.270 38.3168 l
255.215 36.1802 l
256.159 32.8659 l
257.146 29.5119 l
258.133 27.6705 l
258.626 27.6120 l
259.120 28.1713 l
259.613 29.2989 l
260.107 30.8831 l
261.015 34.4253 l
261.924 37.6914 l
262.379 38.8319 l
262.833 39.4833 l
263.288 39.5749 l
263.742 39.0860 l
265.604 32.4844 l
267.465 26.3161 l
269.521 30.3675 l
271.576 40.2173 l
272.041 41.4490 l
272.507 41.9271 l
272.972 41.5729 l
273.437 40.3840 l
274.368 35.8897 l
275.298 29.9118 l
276.250 24.5474 l
277.202 22.2220 l
278.153 24.2861 l
279.105 30.4869 l
280.073 38.9934 l
281.040 46.3955 l
281.282 47.6499 l
281.524 48.5654 l
281.766 49.1013 l
282.008 49.2247 l
282.492 48.1471 l
282.976 45.2615 l
284.755 22.8476 l
286.534 4.43151 l
287.483 9.72668 l
288.431 31.4931 l
288.905 49.0330 l
289.379 70.8015 l
289.853 96.3447 l
290.327 124.992 l
290.798 155.654 l
291.269 187.575 l
291.739 219.722 l
292.210 251.047 l
292.680 280.553 l
293.151 307.345 l
293.621 330.685 l
294.092 350.034 l
295.098 376.856 l
296.105 384.679 l
297.112 378.086 l
298.118 364.137 l
299.007 351.555 l
299.895 342.774 l
300.117 341.449 l
300.339 340.506 l
300.561 339.945 l
300.783 339.762 l
301.005 339.944 l
301.227 340.469 l
301.449 341.313 l
301.671 342.444 l
303.721 359.207 l
305.771 366.582 l
307.621 357.910 l
309.471 348.088 l
309.928 347.205 l
310.386 347.138 l
310.844 347.858 l
311.301 349.270 l
312.216 353.507 l
313.131 358.220 l
313.624 360.349 l
314.116 361.912 l
314.608 362.764 l
315.100 362.839 l
316.084 360.808 l
317.068 356.817 l
318.056 352.574 l
319.044 349.834 l
319.538 349.394 l
320.032 349.640 l
320.526 350.529 l
321.020 351.952 l
321.919 355.354 l
322.818 358.753 l
323.268 360.074 l
323.717 360.984 l
324.167 361.409 l
324.616 361.319 l
326.525 356.332 l
328.435 350.726 l
328.901 350.336 l
329.367 350.464 l
329.832 351.091 l
330.298 352.154 l
331.230 355.136 l
332.162 358.283 l
332.667 359.631 l
333.172 360.529 l
333.677 360.878 l
334.182 360.641 l
335.191 358.594 l
336.201 355.296 l
337.075 352.544 l
337.949 350.844 l
338.823 350.755 l
339.697 352.306 l
340.701 355.431 l
341.704 358.689 l
342.206 359.911 l
342.708 360.669 l
343.210 360.874 l
343.712 360.502 l
345.599 355.255 l
347.486 350.472 l
347.953 350.334 l
348.420 350.716 l
348.888 351.587 l
349.355 352.869 l
350.289 356.155 l
351.224 359.353 l
351.691 360.524 l
352.159 361.242 l
352.626 361.429 l
353.094 361.058 l
354.029 358.804 l
354.964 355.271 l
355.918 351.705 l
356.872 349.594 l
357.349 349.400 l
357.826 349.845 l
358.303 350.900 l
358.779 352.472 l
359.791 356.798 l
360.802 360.883 l
361.307 362.230 l
361.813 362.867 l
362.318 362.698 l
362.824 361.713 l
364.678 353.344 l
366.532 347.103 l
368.362 352.349 l
370.192 363.599 l
370.681 365.626 l
371.170 366.677 l
371.659 366.575 l
372.148 365.254 l
373.126 359.324 l
374.105 350.816 l
375.081 343.102 l
376.057 339.765 l
377.033 343.233 l
378.009 353.535 l
378.885 366.246 l
379.761 378.201 l
380.199 382.381 l
380.637 384.525 l
380.856 384.649 l
381.075 384.053 l
381.294 382.676 l
381.513 380.468 l
382.011 372.140 l
382.508 358.973 l
383.006 340.905 l
383.503 318.167 l
384.001 291.277 l
384.498 261.012 l
384.995 228.370 l
385.493 194.498 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
56.0000 194.000 m
56.0000 197.000 l
S
newpath
150.000 194.000 m
150.000 197.000 l
S
newpath
244.000 194.000 m
244.000 197.000 l
S
newpath
338.000 194.000 m
338.000 197.000 l
S
newpath
9.00000 194.000 m
385.493 194.000 l
S
Q
q
q
newpath
9.00000 194.000 m
9.00000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 207 7 13 rc
newpath
16.7900 214.438 m
8.21000 214.438 l
8.21000 213.762 l
16.7900 213.762 l
h
f
Q
newpath
20.9604 216.343 m
20.3574 218.000 l
15.2793 218.000 l
15.2793 217.765 l
16.7731 216.402 17.8247 215.289 18.4340 214.426  c
19.0434 213.563 19.3481 212.773 19.3481 212.058  c
19.3481 211.512 19.1809 211.064 18.8466 210.712  c
18.5123 210.361 18.1124 210.186 17.6469 210.186  c
17.2238 210.186 16.8439 210.309 16.5075 210.557  c
16.1711 210.804 15.9225 211.167 15.7617 211.646  c
15.5268 211.646 l
15.6326 210.863 15.9045 210.262 16.3425 209.843  c
16.7805 209.424 17.3274 209.214 17.9834 209.214  c
18.6816 209.214 19.2645 209.439 19.7321 209.887  c
20.1997 210.336 20.4335 210.865 20.4335 211.474  c
20.4335 211.910 20.3320 212.346 20.1289 212.782  c
19.8157 213.467 19.3079 214.193 18.6054 214.959  c
17.5517 216.110 16.8937 216.804 16.6313 217.041  c
18.8784 217.041 l
19.3354 217.041 19.6560 217.024 19.8400 216.990  c
20.0241 216.956 20.1902 216.888 20.3383 216.784  c
20.4864 216.680 20.6155 216.533 20.7255 216.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
103.000 194.000 m
103.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 207 7 13 rc
newpath
110.790 214.438 m
102.210 214.438 l
102.210 213.762 l
110.790 213.762 l
h
f
Q
newpath
110.523 210.236 m
112.618 209.214 l
112.827 209.214 l
112.827 216.482 l
112.827 216.965 112.847 217.265 112.887 217.384  c
112.928 217.502 113.011 217.593 113.138 217.657  c
113.265 217.720 113.523 217.756 113.913 217.765  c
113.913 218.000 l
110.675 218.000 l
110.675 217.765 l
111.082 217.756 111.344 217.721 111.462 217.660  c
111.581 217.599 111.663 217.516 111.710 217.412  c
111.757 217.309 111.780 216.999 111.780 216.482  c
111.780 211.836 l
111.780 211.210 111.759 210.808 111.716 210.630  c
111.687 210.495 111.633 210.395 111.554 210.332  c
111.476 210.268 111.382 210.236 111.272 210.236  c
111.115 210.236 110.897 210.302 110.618 210.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 194.000 m
197.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
193.469 211.747 m
193.469 210.765 193.617 209.920 193.914 209.211  c
194.210 208.502 194.603 207.974 195.094 207.627  c
195.475 207.352 195.869 207.214 196.275 207.214  c
196.935 207.214 197.528 207.551 198.052 208.224  c
198.708 209.057 199.036 210.187 199.036 211.613  c
199.036 212.612 198.892 213.460 198.605 214.159  c
198.317 214.857 197.950 215.364 197.503 215.679  c
197.057 215.994 196.626 216.152 196.211 216.152  c
195.391 216.152 194.707 215.667 194.161 214.698  c
193.700 213.882 193.469 212.898 193.469 211.747  c
h
194.713 211.905 m
194.713 213.090 194.859 214.057 195.151 214.806  c
195.393 215.437 195.752 215.752 196.231 215.752  c
196.459 215.752 196.696 215.649 196.941 215.444  c
197.187 215.239 197.373 214.895 197.500 214.413  c
197.695 213.685 197.792 212.659 197.792 211.334  c
197.792 210.352 197.690 209.533 197.487 208.877  c
197.335 208.391 197.138 208.046 196.897 207.843  c
196.724 207.703 196.514 207.633 196.269 207.633  c
195.981 207.633 195.725 207.762 195.501 208.021  c
195.196 208.372 194.988 208.924 194.878 209.677  c
194.768 210.431 194.713 211.173 194.713 211.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
291.000 194.000 m
291.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
294.523 210.236 m
296.618 209.214 l
296.827 209.214 l
296.827 216.482 l
296.827 216.965 296.847 217.265 296.887 217.384  c
296.928 217.502 297.011 217.593 297.138 217.657  c
297.265 217.720 297.523 217.756 297.913 217.765  c
297.913 218.000 l
294.675 218.000 l
294.675 217.765 l
295.082 217.756 295.344 217.721 295.462 217.660  c
295.581 217.599 295.663 217.516 295.710 217.412  c
295.757 217.309 295.780 216.999 295.780 216.482  c
295.780 211.836 l
295.780 211.210 295.759 210.808 295.716 210.630  c
295.687 210.495 295.633 210.395 295.554 210.332  c
295.476 210.268 295.382 210.236 295.272 210.236  c
295.115 210.236 294.897 210.302 294.618 210.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.000 194.000 m
385.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.960 216.343 m
392.357 218.000 l
387.279 218.000 l
387.279 217.765 l
388.773 216.402 389.824 215.289 390.434 214.426  c
391.043 213.563 391.348 212.773 391.348 212.058  c
391.348 211.512 391.181 211.064 390.846 210.712  c
390.512 210.361 390.112 210.186 389.647 210.186  c
389.223 210.186 388.844 210.309 388.507 210.557  c
388.171 210.804 387.922 211.167 387.761 211.646  c
387.526 211.646 l
387.632 210.863 387.904 210.262 388.342 209.843  c
388.780 209.424 389.327 209.214 389.983 209.214  c
390.681 209.214 391.264 209.439 391.732 209.887  c
392.199 210.336 392.433 210.865 392.433 211.474  c
392.433 211.910 392.332 212.346 392.128 212.782  c
391.815 213.467 391.307 214.193 390.605 214.959  c
389.551 216.110 388.893 216.804 388.631 217.041  c
390.878 217.041 l
391.335 217.041 391.656 217.024 391.840 216.990  c
392.024 216.956 392.190 216.888 392.338 216.784  c
392.486 216.680 392.615 216.533 392.725 216.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.000 1.00000 m
195.000 1.00000 l
S
newpath
197.000 17.0000 m
195.000 17.0000 l
S
newpath
197.000 49.0000 m
195.000 49.0000 l
S
newpath
197.000 66.0000 m
195.000 66.0000 l
S
newpath
197.000 82.0000 m
195.000 82.0000 l
S
newpath
197.000 98.0000 m
195.000 98.0000 l
S
newpath
197.000 130.000 m
195.000 130.000 l
S
newpath
197.000 162.000 m
195.000 162.000 l
S
newpath
197.000 178.000 m
195.000 178.000 l
S
newpath
197.000 146.000 m
195.000 146.000 l
S
newpath
197.000 211.000 m
195.000 211.000 l
S
newpath
197.000 227.000 m
195.000 227.000 l
S
newpath
197.000 259.000 m
195.000 259.000 l
S
newpath
197.000 291.000 m
195.000 291.000 l
S
newpath
197.000 243.000 m
195.000 243.000 l
S
newpath
197.000 307.000 m
195.000 307.000 l
S
newpath
197.000 323.000 m
195.000 323.000 l
S
newpath
197.000 340.000 m
195.000 340.000 l
S
newpath
197.000 372.000 m
195.000 372.000 l
S
newpath
197.000 388.000 m
195.000 388.000 l
S
newpath
197.000 388.000 m
197.000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
148 90 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
197.000 356.000 m
192.000 356.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
177 354 7 13 rc
newpath
187.790 361.438 m
179.210 361.438 l
179.210 360.762 l
187.790 360.762 l
h
f
Q
newpath
187.523 357.236 m
189.618 356.214 l
189.827 356.214 l
189.827 363.482 l
189.827 363.965 189.847 364.265 189.887 364.384  c
189.928 364.502 190.011 364.593 190.138 364.657  c
190.265 364.720 190.523 364.756 190.913 364.765  c
190.913 365.000 l
187.675 365.000 l
187.675 364.765 l
188.082 364.756 188.344 364.721 188.462 364.660  c
188.581 364.599 188.663 364.516 188.710 364.412  c
188.757 364.309 188.780 363.999 188.780 363.482  c
188.780 358.836 l
188.780 358.210 188.759 357.808 188.716 357.630  c
188.687 357.495 188.633 357.395 188.554 357.332  c
188.476 357.268 188.382 357.236 188.272 357.236  c
188.115 357.236 187.897 357.302 187.618 357.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 275.000 m
192.000 275.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
167 274 7 13 rc
newpath
177.790 281.438 m
169.210 281.438 l
169.210 280.762 l
177.790 280.762 l
h
f
Q
newpath
176.469 280.747 m
176.469 279.765 176.617 278.920 176.914 278.211  c
177.210 277.502 177.603 276.974 178.094 276.627  c
178.475 276.352 178.869 276.214 179.275 276.214  c
179.935 276.214 180.528 276.551 181.052 277.224  c
181.708 278.057 182.036 279.187 182.036 280.613  c
182.036 281.612 181.892 282.460 181.605 283.159  c
181.317 283.857 180.950 284.364 180.503 284.679  c
180.057 284.994 179.626 285.152 179.211 285.152  c
178.391 285.152 177.707 284.667 177.161 283.698  c
176.700 282.882 176.469 281.898 176.469 280.747  c
h
177.713 280.905 m
177.713 282.090 177.859 283.057 178.151 283.806  c
178.393 284.437 178.752 284.752 179.231 284.752  c
179.459 284.752 179.696 284.649 179.941 284.444  c
180.187 284.239 180.373 283.895 180.500 283.413  c
180.695 282.685 180.792 281.659 180.792 280.334  c
180.792 279.352 180.690 278.533 180.487 277.877  c
180.335 277.391 180.138 277.046 179.897 276.843  c
179.724 276.703 179.514 276.633 179.269 276.633  c
178.981 276.633 178.725 276.762 178.501 277.021  c
178.196 277.372 177.988 277.924 177.878 278.677  c
177.768 279.431 177.713 280.173 177.713 280.905  c
h
184.125 283.768 m
184.323 283.768 184.491 283.837 184.626 283.974  c
184.761 284.112 184.829 284.278 184.829 284.473  c
184.829 284.667 184.760 284.833 184.623 284.971  c
184.485 285.109 184.319 285.177 184.125 285.177  c
183.930 285.177 183.764 285.109 183.626 284.971  c
183.489 284.833 183.420 284.667 183.420 284.473  c
183.420 284.274 183.489 284.107 183.626 283.971  c
183.764 283.836 183.930 283.768 184.125 283.768  c
h
191.393 276.392 m
190.897 277.471 l
188.308 277.471 l
187.743 278.627 l
188.864 278.792 189.753 279.208 190.409 279.877  c
190.972 280.453 191.253 281.130 191.253 281.908  c
191.253 282.361 191.161 282.780 190.977 283.165  c
190.793 283.550 190.561 283.878 190.282 284.149  c
190.002 284.420 189.691 284.638 189.349 284.803  c
188.862 285.036 188.363 285.152 187.851 285.152  c
187.334 285.152 186.959 285.064 186.724 284.888  c
186.489 284.713 186.372 284.519 186.372 284.308  c
186.372 284.189 186.420 284.084 186.518 283.993  c
186.615 283.902 186.738 283.857 186.886 283.857  c
186.996 283.857 187.092 283.874 187.175 283.908  c
187.257 283.942 187.398 284.028 187.597 284.168  c
187.914 284.388 188.236 284.498 188.562 284.498  c
189.057 284.498 189.491 284.311 189.866 283.936  c
190.241 283.562 190.428 283.106 190.428 282.568  c
190.428 282.048 190.261 281.562 189.926 281.112  c
189.592 280.661 189.131 280.313 188.543 280.067  c
188.081 279.877 187.453 279.767 186.657 279.737  c
188.308 276.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 194.000 m
192.000 194.000 l
S
Q
q
newpath
197.000 114.000 m
192.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
176.469 118.747 m
176.469 117.765 176.617 116.920 176.914 116.211  c
177.210 115.502 177.603 114.974 178.094 114.627  c
178.475 114.352 178.869 114.214 179.275 114.214  c
179.935 114.214 180.528 114.551 181.052 115.224  c
181.708 116.057 182.036 117.187 182.036 118.613  c
182.036 119.612 181.892 120.460 181.605 121.159  c
181.317 121.857 180.950 122.364 180.503 122.679  c
180.057 122.994 179.626 123.152 179.211 123.152  c
178.391 123.152 177.707 122.667 177.161 121.698  c
176.700 120.882 176.469 119.898 176.469 118.747  c
h
177.713 118.905 m
177.713 120.090 177.859 121.057 178.151 121.806  c
178.393 122.437 178.752 122.752 179.231 122.752  c
179.459 122.752 179.696 122.649 179.941 122.444  c
180.187 122.239 180.373 121.895 180.500 121.413  c
180.695 120.685 180.792 119.659 180.792 118.334  c
180.792 117.352 180.690 116.533 180.487 115.877  c
180.335 115.391 180.138 115.046 179.897 114.843  c
179.724 114.703 179.514 114.633 179.269 114.633  c
178.981 114.633 178.725 114.762 178.501 115.021  c
178.196 115.372 177.988 115.924 177.878 116.677  c
177.768 117.431 177.713 118.173 177.713 118.905  c
h
184.125 121.768 m
184.323 121.768 184.491 121.837 184.626 121.974  c
184.761 122.112 184.829 122.278 184.829 122.473  c
184.829 122.667 184.760 122.833 184.623 122.971  c
184.485 123.109 184.319 123.177 184.125 123.177  c
183.930 123.177 183.764 123.109 183.626 122.971  c
183.489 122.833 183.420 122.667 183.420 122.473  c
183.420 122.274 183.489 122.107 183.626 121.971  c
183.764 121.836 183.930 121.768 184.125 121.768  c
h
191.393 114.392 m
190.897 115.471 l
188.308 115.471 l
187.743 116.627 l
188.864 116.792 189.753 117.208 190.409 117.877  c
190.972 118.453 191.253 119.130 191.253 119.908  c
191.253 120.361 191.161 120.780 190.977 121.165  c
190.793 121.550 190.561 121.878 190.282 122.149  c
190.002 122.420 189.691 122.638 189.349 122.803  c
188.862 123.036 188.363 123.152 187.851 123.152  c
187.334 123.152 186.959 123.064 186.724 122.888  c
186.489 122.713 186.372 122.519 186.372 122.308  c
186.372 122.189 186.420 122.084 186.518 121.993  c
186.615 121.902 186.738 121.857 186.886 121.857  c
186.996 121.857 187.092 121.874 187.175 121.908  c
187.257 121.942 187.398 122.028 187.597 122.168  c
187.914 122.388 188.236 122.498 188.562 122.498  c
189.057 122.498 189.491 122.311 189.866 121.936  c
190.241 121.562 190.428 121.106 190.428 120.568  c
190.428 120.048 190.261 119.562 189.926 119.112  c
189.592 118.661 189.131 118.313 188.543 118.067  c
188.081 117.877 187.453 117.767 186.657 117.737  c
188.308 114.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.000 33.0000 m
192.000 33.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
187.523 35.2368 m
189.618 34.2148 l
189.827 34.2148 l
189.827 41.4829 l
189.827 41.9653 189.847 42.2657 189.887 42.3842  c
189.928 42.5027 190.011 42.5937 190.138 42.6572  c
190.265 42.7207 190.523 42.7566 190.913 42.7651  c
190.913 43.0000 l
187.675 43.0000 l
187.675 42.7651 l
188.082 42.7566 188.344 42.7217 188.462 42.6604  c
188.581 42.5990 188.663 42.5165 188.710 42.4128  c
188.757 42.3091 188.780 41.9991 188.780 41.4829  c
188.780 36.8364 l
188.780 36.2101 188.759 35.8081 188.716 35.6303  c
188.687 35.4949 188.633 35.3955 188.554 35.3320  c
188.476 35.2685 188.382 35.2368 188.272 35.2368  c
188.115 35.2368 187.897 35.3024 187.618 35.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
362 170 30 33 rc
newpath
372.855 183.510 m
373.182 183.950 373.407 184.391 373.530 184.831  c
373.622 185.135 373.712 185.935 373.800 187.230  c
375.252 185.554 l
375.629 185.148 376.067 184.761 376.563 184.393  c
377.060 184.024 377.483 183.773 377.832 183.637  c
378.052 183.553 378.284 183.510 378.530 183.510  c
378.894 183.510 379.164 183.608 379.341 183.802  c
379.518 183.997 379.578 184.234 379.523 184.513  c
379.458 184.835 379.351 185.055 379.200 185.173  c
378.921 185.385 378.629 185.491 378.324 185.491  c
378.146 185.491 377.964 185.453 377.776 185.377  c
377.405 185.241 377.152 185.173 377.017 185.173  c
376.813 185.173 376.549 185.292 376.222 185.529  c
375.609 185.969 374.813 186.820 373.833 188.081  c
374.000 192.448 l
374.027 193.116 374.083 193.516 374.166 193.647  c
374.250 193.779 374.347 193.844 374.457 193.844  c
374.635 193.844 374.862 193.747 375.138 193.552  c
375.681 193.163 376.180 192.655 376.636 192.029  c
377.034 192.257 l
376.301 193.256 375.458 194.085 374.505 194.746  c
373.965 195.118 373.535 195.304 373.213 195.304  c
372.739 195.304 372.416 195.038 372.243 194.504  c
372.131 194.174 372.048 192.752 371.992 190.239  c
370.213 192.532 368.859 194.009 367.932 194.669  c
367.331 195.093 366.789 195.304 366.307 195.304  c
365.968 195.304 365.684 195.182 365.454 194.936  c
365.288 194.750 365.236 194.500 365.299 194.187  c
365.355 193.908 365.494 193.675 365.718 193.489  c
365.941 193.303 366.188 193.210 366.459 193.210  c
366.730 193.210 366.991 193.345 367.241 193.616  c
367.422 193.810 367.572 193.908 367.691 193.908  c
367.792 193.908 367.937 193.840 368.125 193.705  c
368.587 193.383 369.267 192.689 370.166 191.623  c
371.065 190.556 371.668 189.786 371.974 189.312  c
371.861 187.255 371.795 186.168 371.776 186.049  c
371.691 185.499 371.515 185.110 371.248 184.881  c
370.980 184.653 370.542 184.539 369.933 184.539  c
369.738 184.539 369.512 184.547 369.255 184.564  c
369.346 184.107 l
h
f
Q
cliprestore
newpath
0 0 m
0 400.000 l
400.000 400.000 l
400.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
356 10 54 33 rc
newpath
369.521 34.5302 m
369.521 35.0000 l
360.520 35.0000 l
360.520 34.5302 l
361.091 34.5302 l
361.591 34.5302 361.993 34.4414 362.297 34.2636  c
362.517 34.1451 362.687 33.9420 362.805 33.6543  c
362.898 33.4511 362.945 32.9179 362.945 32.0546  c
362.945 20.7304 l
362.945 19.8502 362.898 19.3001 362.805 19.0800  c
362.712 18.8600 362.524 18.6674 362.240 18.5024  c
361.957 18.3374 361.574 18.2548 361.091 18.2548  c
360.520 18.2548 l
360.520 17.7851 l
369.521 17.7851 l
369.521 18.2548 l
368.950 18.2548 l
368.450 18.2548 368.048 18.3437 367.744 18.5214  c
367.524 18.6399 367.350 18.8431 367.223 19.1308  c
367.130 19.3339 367.084 19.8671 367.084 20.7304  c
367.084 32.0546 l
367.084 32.9349 367.132 33.4850 367.230 33.7050  c
367.327 33.9251 367.517 34.1176 367.801 34.2827  c
368.084 34.4477 368.467 34.5302 368.950 34.5302  c
h
379.639 34.5302 m
379.639 35.0000 l
370.638 35.0000 l
370.638 34.5302 l
371.210 34.5302 l
371.709 34.5302 372.111 34.4414 372.416 34.2636  c
372.636 34.1451 372.805 33.9420 372.923 33.6543  c
373.016 33.4511 373.063 32.9179 373.063 32.0546  c
373.063 20.7304 l
373.063 19.8502 373.016 19.3001 372.923 19.0800  c
372.830 18.8600 372.642 18.6674 372.358 18.5024  c
372.075 18.3374 371.692 18.2548 371.210 18.2548  c
370.638 18.2548 l
370.638 17.7851 l
379.639 17.7851 l
379.639 18.2548 l
379.068 18.2548 l
378.569 18.2548 378.167 18.3437 377.862 18.5214  c
377.642 18.6399 377.468 18.8431 377.341 19.1308  c
377.248 19.3339 377.202 19.8671 377.202 20.7304  c
377.202 32.0546 l
377.202 32.9349 377.250 33.4850 377.348 33.7050  c
377.445 33.9251 377.635 34.1176 377.919 34.2827  c
378.203 34.4477 378.585 34.5302 379.068 34.5302  c
h
389.757 34.5302 m
389.757 35.0000 l
380.756 35.0000 l
380.756 34.5302 l
381.328 34.5302 l
381.827 34.5302 382.229 34.4414 382.534 34.2636  c
382.754 34.1451 382.923 33.9420 383.042 33.6543  c
383.135 33.4511 383.181 32.9179 383.181 32.0546  c
383.181 20.7304 l
383.181 19.8502 383.135 19.3001 383.042 19.0800  c
382.948 18.8600 382.760 18.6674 382.477 18.5024  c
382.193 18.3374 381.810 18.2548 381.328 18.2548  c
380.756 18.2548 l
380.756 17.7851 l
389.757 17.7851 l
389.757 18.2548 l
389.186 18.2548 l
388.687 18.2548 388.285 18.3437 387.980 18.5214  c
387.760 18.6399 387.586 18.8431 387.460 19.1308  c
387.366 19.3339 387.320 19.8671 387.320 20.7304  c
387.320 32.0546 l
387.320 32.9349 387.369 33.4850 387.466 33.7050  c
387.563 33.9251 387.754 34.1176 388.037 34.2827  c
388.321 34.4477 388.704 34.5302 389.186 34.5302  c
h
f
Q
cliprestore
newpath
0 0 m
0 400.000 l
400.000 400.000 l
400.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
