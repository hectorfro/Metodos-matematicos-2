%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, October 21, 2010 7:02:57 AM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
5.00000 w
0 0 1.00000 RG
4.00000 2.01576 385.998 384.484 rc
newpath
9.00000 381.500 m
196.314 381.500 l
196.572 8.01577 l
383.998 8.01577 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
346.000 195.000 m
346.000 197.000 l
S
newpath
365.000 195.000 m
365.000 197.000 l
S
newpath
328.000 195.000 m
328.000 197.000 l
S
newpath
309.000 195.000 m
309.000 197.000 l
S
newpath
271.000 195.000 m
271.000 197.000 l
S
newpath
253.000 195.000 m
253.000 197.000 l
S
newpath
234.000 195.000 m
234.000 197.000 l
S
newpath
215.000 195.000 m
215.000 197.000 l
S
newpath
178.000 195.000 m
178.000 197.000 l
S
newpath
159.000 195.000 m
159.000 197.000 l
S
newpath
140.000 195.000 m
140.000 197.000 l
S
newpath
121.000 195.000 m
121.000 197.000 l
S
newpath
84.0000 195.000 m
84.0000 197.000 l
S
newpath
65.0000 195.000 m
65.0000 197.000 l
S
newpath
46.0000 195.000 m
46.0000 197.000 l
S
newpath
28.0000 195.000 m
28.0000 197.000 l
S
newpath
9.00000 195.000 m
383.998 195.000 l
S
Q
q
q
newpath
9.00000 195.000 m
9.00000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 207 7 13 rc
newpath
16.7900 214.438 m
8.21000 214.438 l
8.21000 213.762 l
16.7900 213.762 l
h
f
Q
newpath
16.5234 210.236 m
18.6181 209.214 l
18.8276 209.214 l
18.8276 216.482 l
18.8276 216.965 18.8477 217.265 18.8879 217.384  c
18.9281 217.502 19.0117 217.593 19.1386 217.657  c
19.2656 217.720 19.5237 217.756 19.9130 217.765  c
19.9130 218.000 l
16.6757 218.000 l
16.6757 217.765 l
17.0820 217.756 17.3444 217.721 17.4628 217.660  c
17.5813 217.599 17.6639 217.516 17.7104 217.412  c
17.7570 217.309 17.7802 216.999 17.7802 216.482  c
17.7802 211.836 l
17.7802 211.210 17.7591 210.808 17.7168 210.630  c
17.6871 210.495 17.6332 210.395 17.5549 210.332  c
17.4766 210.268 17.3824 210.236 17.2724 210.236  c
17.1158 210.236 16.8979 210.302 16.6186 210.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
103.000 195.000 m
103.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
94 207 7 13 rc
newpath
104.790 214.438 m
96.2100 214.438 l
96.2100 213.762 l
104.790 213.762 l
h
f
Q
newpath
103.469 213.747 m
103.469 212.765 103.617 211.920 103.914 211.211  c
104.210 210.502 104.603 209.974 105.094 209.627  c
105.475 209.352 105.869 209.214 106.275 209.214  c
106.935 209.214 107.528 209.551 108.052 210.224  c
108.708 211.057 109.036 212.187 109.036 213.613  c
109.036 214.612 108.892 215.460 108.605 216.159  c
108.317 216.857 107.950 217.364 107.503 217.679  c
107.057 217.994 106.626 218.152 106.211 218.152  c
105.391 218.152 104.707 217.667 104.161 216.698  c
103.700 215.882 103.469 214.898 103.469 213.747  c
h
104.713 213.905 m
104.713 215.090 104.859 216.057 105.151 216.806  c
105.393 217.437 105.752 217.752 106.231 217.752  c
106.459 217.752 106.696 217.649 106.941 217.444  c
107.187 217.239 107.373 216.895 107.500 216.413  c
107.695 215.685 107.792 214.659 107.792 213.334  c
107.792 212.352 107.690 211.533 107.487 210.877  c
107.335 210.391 107.138 210.046 106.897 209.843  c
106.724 209.703 106.514 209.633 106.269 209.633  c
105.981 209.633 105.725 209.762 105.501 210.021  c
105.196 210.372 104.988 210.924 104.878 211.677  c
104.768 212.431 104.713 213.173 104.713 213.905  c
h
111.125 216.768 m
111.323 216.768 111.491 216.837 111.626 216.974  c
111.761 217.112 111.829 217.278 111.829 217.473  c
111.829 217.667 111.760 217.833 111.623 217.971  c
111.485 218.109 111.319 218.177 111.125 218.177  c
110.930 218.177 110.764 218.109 110.626 217.971  c
110.489 217.833 110.420 217.667 110.420 217.473  c
110.420 217.274 110.489 217.107 110.626 216.971  c
110.764 216.836 110.930 216.768 111.125 216.768  c
h
118.393 209.392 m
117.897 210.471 l
115.308 210.471 l
114.743 211.627 l
115.864 211.792 116.753 212.208 117.409 212.877  c
117.972 213.453 118.253 214.130 118.253 214.908  c
118.253 215.361 118.161 215.780 117.977 216.165  c
117.793 216.550 117.561 216.878 117.282 217.149  c
117.002 217.420 116.691 217.638 116.349 217.803  c
115.862 218.036 115.363 218.152 114.851 218.152  c
114.334 218.152 113.959 218.064 113.724 217.888  c
113.489 217.713 113.372 217.519 113.372 217.308  c
113.372 217.189 113.420 217.084 113.518 216.993  c
113.615 216.902 113.738 216.857 113.886 216.857  c
113.996 216.857 114.092 216.874 114.175 216.908  c
114.257 216.942 114.398 217.028 114.597 217.168  c
114.914 217.388 115.236 217.498 115.562 217.498  c
116.057 217.498 116.491 217.311 116.866 216.936  c
117.241 216.562 117.428 216.106 117.428 215.568  c
117.428 215.048 117.261 214.562 116.926 214.112  c
116.592 213.661 116.131 213.313 115.543 213.067  c
115.081 212.877 114.453 212.767 113.657 212.737  c
115.308 209.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
196.000 195.000 m
196.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
192.469 211.747 m
192.469 210.765 192.617 209.920 192.914 209.211  c
193.210 208.502 193.603 207.974 194.094 207.627  c
194.475 207.352 194.869 207.214 195.275 207.214  c
195.935 207.214 196.528 207.551 197.052 208.224  c
197.708 209.057 198.036 210.187 198.036 211.613  c
198.036 212.612 197.892 213.460 197.605 214.159  c
197.317 214.857 196.950 215.364 196.503 215.679  c
196.057 215.994 195.626 216.152 195.211 216.152  c
194.391 216.152 193.707 215.667 193.161 214.698  c
192.700 213.882 192.469 212.898 192.469 211.747  c
h
193.713 211.905 m
193.713 213.090 193.859 214.057 194.151 214.806  c
194.393 215.437 194.752 215.752 195.231 215.752  c
195.459 215.752 195.696 215.649 195.941 215.444  c
196.187 215.239 196.373 214.895 196.500 214.413  c
196.695 213.685 196.792 212.659 196.792 211.334  c
196.792 210.352 196.690 209.533 196.487 208.877  c
196.335 208.391 196.138 208.046 195.897 207.843  c
195.724 207.703 195.514 207.633 195.269 207.633  c
194.981 207.633 194.725 207.762 194.501 208.021  c
194.196 208.372 193.988 208.924 193.878 209.677  c
193.768 210.431 193.713 211.173 193.713 211.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
290.000 195.000 m
290.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
287.469 213.747 m
287.469 212.765 287.617 211.920 287.914 211.211  c
288.210 210.502 288.603 209.974 289.094 209.627  c
289.475 209.352 289.869 209.214 290.275 209.214  c
290.935 209.214 291.528 209.551 292.052 210.224  c
292.708 211.057 293.036 212.187 293.036 213.613  c
293.036 214.612 292.892 215.460 292.605 216.159  c
292.317 216.857 291.950 217.364 291.503 217.679  c
291.057 217.994 290.626 218.152 290.211 218.152  c
289.391 218.152 288.707 217.667 288.161 216.698  c
287.700 215.882 287.469 214.898 287.469 213.747  c
h
288.713 213.905 m
288.713 215.090 288.859 216.057 289.151 216.806  c
289.393 217.437 289.752 217.752 290.231 217.752  c
290.459 217.752 290.696 217.649 290.941 217.444  c
291.187 217.239 291.373 216.895 291.500 216.413  c
291.695 215.685 291.792 214.659 291.792 213.334  c
291.792 212.352 291.690 211.533 291.487 210.877  c
291.335 210.391 291.138 210.046 290.897 209.843  c
290.724 209.703 290.514 209.633 290.269 209.633  c
289.981 209.633 289.725 209.762 289.501 210.021  c
289.196 210.372 288.988 210.924 288.878 211.677  c
288.768 212.431 288.713 213.173 288.713 213.905  c
h
295.125 216.768 m
295.323 216.768 295.491 216.837 295.626 216.974  c
295.761 217.112 295.829 217.278 295.829 217.473  c
295.829 217.667 295.760 217.833 295.623 217.971  c
295.485 218.109 295.319 218.177 295.125 218.177  c
294.930 218.177 294.764 218.109 294.626 217.971  c
294.489 217.833 294.420 217.667 294.420 217.473  c
294.420 217.274 294.489 217.107 294.626 216.971  c
294.764 216.836 294.930 216.768 295.125 216.768  c
h
302.393 209.392 m
301.897 210.471 l
299.308 210.471 l
298.743 211.627 l
299.864 211.792 300.753 212.208 301.409 212.877  c
301.972 213.453 302.253 214.130 302.253 214.908  c
302.253 215.361 302.161 215.780 301.977 216.165  c
301.793 216.550 301.561 216.878 301.282 217.149  c
301.002 217.420 300.691 217.638 300.349 217.803  c
299.862 218.036 299.363 218.152 298.851 218.152  c
298.334 218.152 297.959 218.064 297.724 217.888  c
297.489 217.713 297.372 217.519 297.372 217.308  c
297.372 217.189 297.420 217.084 297.518 216.993  c
297.615 216.902 297.738 216.857 297.886 216.857  c
297.996 216.857 298.092 216.874 298.175 216.908  c
298.257 216.942 298.398 217.028 298.597 217.168  c
298.914 217.388 299.236 217.498 299.562 217.498  c
300.057 217.498 300.491 217.311 300.866 216.936  c
301.241 216.562 301.428 216.106 301.428 215.568  c
301.428 215.048 301.261 214.562 300.926 214.112  c
300.592 213.661 300.131 213.313 299.543 213.067  c
299.081 212.877 298.453 212.767 297.657 212.737  c
299.308 209.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
384.000 195.000 m
384.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
386.523 210.236 m
388.618 209.214 l
388.827 209.214 l
388.827 216.482 l
388.827 216.965 388.847 217.265 388.887 217.384  c
388.928 217.502 389.011 217.593 389.138 217.657  c
389.265 217.720 389.523 217.756 389.913 217.765  c
389.913 218.000 l
386.675 218.000 l
386.675 217.765 l
387.082 217.756 387.344 217.721 387.462 217.660  c
387.581 217.599 387.663 217.516 387.710 217.412  c
387.757 217.309 387.780 216.999 387.780 216.482  c
387.780 211.836 l
387.780 211.210 387.759 210.808 387.716 210.630  c
387.687 210.495 387.633 210.395 387.554 210.332  c
387.476 210.268 387.382 210.236 387.272 210.236  c
387.115 210.236 386.897 210.302 386.618 210.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
196.000 363.000 m
194.000 363.000 l
S
newpath
196.000 344.000 m
194.000 344.000 l
S
newpath
196.000 325.000 m
194.000 325.000 l
S
newpath
196.000 307.000 m
194.000 307.000 l
S
newpath
196.000 269.000 m
194.000 269.000 l
S
newpath
196.000 251.000 m
194.000 251.000 l
S
newpath
196.000 232.000 m
194.000 232.000 l
S
newpath
196.000 213.000 m
194.000 213.000 l
S
newpath
196.000 176.000 m
194.000 176.000 l
S
newpath
196.000 157.000 m
194.000 157.000 l
S
newpath
196.000 139.000 m
194.000 139.000 l
S
newpath
196.000 120.000 m
194.000 120.000 l
S
newpath
196.000 83.0000 m
194.000 83.0000 l
S
newpath
196.000 64.0000 m
194.000 64.0000 l
S
newpath
196.000 45.0000 m
194.000 45.0000 l
S
newpath
196.000 27.0000 m
194.000 27.0000 l
S
newpath
196.000 381.500 m
196.000 8.01577 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
148 94 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
196.000 382.000 m
191.000 382.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
176 380 7 13 rc
newpath
186.790 387.438 m
178.210 387.438 l
178.210 386.762 l
186.790 386.762 l
h
f
Q
newpath
186.523 383.236 m
188.618 382.214 l
188.827 382.214 l
188.827 389.482 l
188.827 389.965 188.847 390.265 188.887 390.384  c
188.928 390.502 189.011 390.593 189.138 390.657  c
189.265 390.720 189.523 390.756 189.913 390.765  c
189.913 391.000 l
186.675 391.000 l
186.675 390.765 l
187.082 390.756 187.344 390.721 187.462 390.660  c
187.581 390.599 187.663 390.516 187.710 390.412  c
187.757 390.309 187.780 389.999 187.780 389.482  c
187.780 384.836 l
187.780 384.210 187.759 383.808 187.716 383.630  c
187.687 383.495 187.633 383.395 187.554 383.332  c
187.476 383.268 187.382 383.236 187.272 383.236  c
187.115 383.236 186.897 383.302 186.618 383.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
196.000 288.000 m
191.000 288.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
166 287 7 13 rc
newpath
176.790 294.438 m
168.210 294.438 l
168.210 293.762 l
176.790 293.762 l
h
f
Q
newpath
175.469 293.747 m
175.469 292.765 175.617 291.920 175.914 291.211  c
176.210 290.502 176.603 289.974 177.094 289.627  c
177.475 289.352 177.869 289.214 178.275 289.214  c
178.935 289.214 179.528 289.551 180.052 290.224  c
180.708 291.057 181.036 292.187 181.036 293.613  c
181.036 294.612 180.892 295.460 180.605 296.159  c
180.317 296.857 179.950 297.364 179.503 297.679  c
179.057 297.994 178.626 298.152 178.211 298.152  c
177.391 298.152 176.707 297.667 176.161 296.698  c
175.700 295.882 175.469 294.898 175.469 293.747  c
h
176.713 293.905 m
176.713 295.090 176.859 296.057 177.151 296.806  c
177.393 297.437 177.752 297.752 178.231 297.752  c
178.459 297.752 178.696 297.649 178.941 297.444  c
179.187 297.239 179.373 296.895 179.500 296.413  c
179.695 295.685 179.792 294.659 179.792 293.334  c
179.792 292.352 179.690 291.533 179.487 290.877  c
179.335 290.391 179.138 290.046 178.897 289.843  c
178.724 289.703 178.514 289.633 178.269 289.633  c
177.981 289.633 177.725 289.762 177.501 290.021  c
177.196 290.372 176.988 290.924 176.878 291.677  c
176.768 292.431 176.713 293.173 176.713 293.905  c
h
183.125 296.768 m
183.323 296.768 183.491 296.837 183.626 296.974  c
183.761 297.112 183.829 297.278 183.829 297.473  c
183.829 297.667 183.760 297.833 183.623 297.971  c
183.485 298.109 183.319 298.177 183.125 298.177  c
182.930 298.177 182.764 298.109 182.626 297.971  c
182.489 297.833 182.420 297.667 182.420 297.473  c
182.420 297.274 182.489 297.107 182.626 296.971  c
182.764 296.836 182.930 296.768 183.125 296.768  c
h
190.393 289.392 m
189.897 290.471 l
187.308 290.471 l
186.743 291.627 l
187.864 291.792 188.753 292.208 189.409 292.877  c
189.972 293.453 190.253 294.130 190.253 294.908  c
190.253 295.361 190.161 295.780 189.977 296.165  c
189.793 296.550 189.561 296.878 189.282 297.149  c
189.002 297.420 188.691 297.638 188.349 297.803  c
187.862 298.036 187.363 298.152 186.851 298.152  c
186.334 298.152 185.959 298.064 185.724 297.888  c
185.489 297.713 185.372 297.519 185.372 297.308  c
185.372 297.189 185.420 297.084 185.518 296.993  c
185.615 296.902 185.738 296.857 185.886 296.857  c
185.996 296.857 186.092 296.874 186.175 296.908  c
186.257 296.942 186.398 297.028 186.597 297.168  c
186.914 297.388 187.236 297.498 187.562 297.498  c
188.057 297.498 188.491 297.311 188.866 296.936  c
189.241 296.562 189.428 296.106 189.428 295.568  c
189.428 295.048 189.261 294.562 188.926 294.112  c
188.592 293.661 188.131 293.313 187.543 293.067  c
187.081 292.877 186.453 292.767 185.657 292.737  c
187.308 289.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
196.000 195.000 m
191.000 195.000 l
S
Q
q
newpath
196.000 101.000 m
191.000 101.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
175.469 106.747 m
175.469 105.765 175.617 104.920 175.914 104.211  c
176.210 103.502 176.603 102.974 177.094 102.627  c
177.475 102.352 177.869 102.214 178.275 102.214  c
178.935 102.214 179.528 102.551 180.052 103.224  c
180.708 104.057 181.036 105.187 181.036 106.613  c
181.036 107.612 180.892 108.460 180.605 109.159  c
180.317 109.857 179.950 110.364 179.503 110.679  c
179.057 110.994 178.626 111.152 178.211 111.152  c
177.391 111.152 176.707 110.667 176.161 109.698  c
175.700 108.882 175.469 107.898 175.469 106.747  c
h
176.713 106.905 m
176.713 108.090 176.859 109.057 177.151 109.806  c
177.393 110.437 177.752 110.752 178.231 110.752  c
178.459 110.752 178.696 110.649 178.941 110.444  c
179.187 110.239 179.373 109.895 179.500 109.413  c
179.695 108.685 179.792 107.659 179.792 106.334  c
179.792 105.352 179.690 104.533 179.487 103.877  c
179.335 103.391 179.138 103.046 178.897 102.843  c
178.724 102.703 178.514 102.633 178.269 102.633  c
177.981 102.633 177.725 102.762 177.501 103.021  c
177.196 103.372 176.988 103.924 176.878 104.677  c
176.768 105.431 176.713 106.173 176.713 106.905  c
h
183.125 109.768 m
183.323 109.768 183.491 109.837 183.626 109.974  c
183.761 110.112 183.829 110.278 183.829 110.473  c
183.829 110.667 183.760 110.833 183.623 110.971  c
183.485 111.109 183.319 111.177 183.125 111.177  c
182.930 111.177 182.764 111.109 182.626 110.971  c
182.489 110.833 182.420 110.667 182.420 110.473  c
182.420 110.274 182.489 110.107 182.626 109.971  c
182.764 109.836 182.930 109.768 183.125 109.768  c
h
190.393 102.392 m
189.897 103.471 l
187.308 103.471 l
186.743 104.627 l
187.864 104.792 188.753 105.208 189.409 105.877  c
189.972 106.453 190.253 107.130 190.253 107.908  c
190.253 108.361 190.161 108.780 189.977 109.165  c
189.793 109.550 189.561 109.878 189.282 110.149  c
189.002 110.420 188.691 110.638 188.349 110.803  c
187.862 111.036 187.363 111.152 186.851 111.152  c
186.334 111.152 185.959 111.064 185.724 110.888  c
185.489 110.713 185.372 110.519 185.372 110.308  c
185.372 110.189 185.420 110.084 185.518 109.993  c
185.615 109.902 185.738 109.857 185.886 109.857  c
185.996 109.857 186.092 109.874 186.175 109.908  c
186.257 109.942 186.398 110.028 186.597 110.168  c
186.914 110.388 187.236 110.498 187.562 110.498  c
188.057 110.498 188.491 110.311 188.866 109.936  c
189.241 109.562 189.428 109.106 189.428 108.568  c
189.428 108.048 189.261 107.562 188.926 107.112  c
188.592 106.661 188.131 106.313 187.543 106.067  c
187.081 105.877 186.453 105.767 185.657 105.737  c
187.308 102.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
196.000 8.00000 m
191.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.523 10.2368 m
188.618 9.21484 l
188.827 9.21484 l
188.827 16.4829 l
188.827 16.9653 188.847 17.2657 188.887 17.3842  c
188.928 17.5027 189.011 17.5937 189.138 17.6572  c
189.265 17.7207 189.523 17.7566 189.913 17.7651  c
189.913 18.0000 l
186.675 18.0000 l
186.675 17.7651 l
187.082 17.7566 187.344 17.7217 187.462 17.6604  c
187.581 17.5990 187.663 17.5165 187.710 17.4128  c
187.757 17.3091 187.780 16.9991 187.780 16.4829  c
187.780 11.8364 l
187.780 11.2101 187.759 10.8081 187.716 10.6303  c
187.687 10.4949 187.633 10.3955 187.554 10.3320  c
187.476 10.2685 187.382 10.2368 187.272 10.2368  c
187.115 10.2368 186.897 10.3024 186.618 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
368 170 25 36 rc
newpath
378.855 183.510 m
379.182 183.950 379.407 184.391 379.530 184.831  c
379.622 185.135 379.712 185.935 379.800 187.230  c
381.252 185.554 l
381.629 185.148 382.067 184.761 382.563 184.393  c
383.060 184.024 383.483 183.773 383.832 183.637  c
384.052 183.553 384.284 183.510 384.530 183.510  c
384.894 183.510 385.164 183.608 385.341 183.802  c
385.518 183.997 385.578 184.234 385.523 184.513  c
385.458 184.835 385.351 185.055 385.200 185.173  c
384.921 185.385 384.629 185.491 384.324 185.491  c
384.146 185.491 383.964 185.453 383.776 185.377  c
383.405 185.241 383.152 185.173 383.017 185.173  c
382.813 185.173 382.549 185.292 382.222 185.529  c
381.609 185.969 380.813 186.820 379.833 188.081  c
380.000 192.448 l
380.027 193.116 380.083 193.516 380.166 193.647  c
380.250 193.779 380.347 193.844 380.457 193.844  c
380.635 193.844 380.862 193.747 381.138 193.552  c
381.681 193.163 382.180 192.655 382.636 192.029  c
383.034 192.257 l
382.301 193.256 381.458 194.085 380.505 194.746  c
379.965 195.118 379.535 195.304 379.213 195.304  c
378.739 195.304 378.416 195.038 378.243 194.504  c
378.131 194.174 378.048 192.752 377.992 190.239  c
376.213 192.532 374.859 194.009 373.932 194.669  c
373.331 195.093 372.789 195.304 372.307 195.304  c
371.968 195.304 371.684 195.182 371.454 194.936  c
371.288 194.750 371.236 194.500 371.299 194.187  c
371.355 193.908 371.494 193.675 371.718 193.489  c
371.941 193.303 372.188 193.210 372.459 193.210  c
372.730 193.210 372.991 193.345 373.241 193.616  c
373.422 193.810 373.572 193.908 373.691 193.908  c
373.792 193.908 373.937 193.840 374.125 193.705  c
374.587 193.383 375.267 192.689 376.166 191.623  c
377.065 190.556 377.668 189.786 377.974 189.312  c
377.861 187.255 377.795 186.168 377.776 186.049  c
377.691 185.499 377.515 185.110 377.248 184.881  c
376.980 184.653 376.542 184.539 375.933 184.539  c
375.738 184.539 375.512 184.547 375.255 184.564  c
375.346 184.107 l
h
f
Q
cliprestore
newpath
0 0 m
0 400.000 l
400.000 400.000 l
400.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
5 9 21 32 rc
newpath
19.2539 34.4941 m
19.2539 35.0000 l
9.56054 35.0000 l
9.56054 34.4941 l
10.1757 34.4941 l
10.7135 34.4941 11.1464 34.3984 11.4746 34.2070  c
11.7115 34.0794 11.8938 33.8606 12.0214 33.5507  c
12.1217 33.3320 12.1718 32.7578 12.1718 31.8281  c
12.1718 19.6328 l
12.1718 18.6849 12.1217 18.0924 12.0214 17.8554  c
11.9212 17.6184 11.7184 17.4111 11.4130 17.2334  c
11.1077 17.0556 10.6953 16.9668 10.1757 16.9668  c
9.56054 16.9668 l
9.56054 16.4609 l
19.2539 16.4609 l
19.2539 16.9668 l
18.6386 16.9668 l
18.1009 16.9668 17.6679 17.0625 17.3398 17.2539  c
17.1028 17.3815 16.9160 17.6002 16.7793 17.9101  c
16.6790 18.1289 16.6289 18.7031 16.6289 19.6328  c
16.6289 31.8281 l
16.6289 32.7760 16.6813 33.3684 16.7861 33.6054  c
16.8909 33.8424 17.0960 34.0498 17.4013 34.2275  c
17.7067 34.4052 18.1191 34.4941 18.6386 34.4941  c
h
f
Q
cliprestore
newpath
0 0 m
0 400.000 l
400.000 400.000 l
400.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
