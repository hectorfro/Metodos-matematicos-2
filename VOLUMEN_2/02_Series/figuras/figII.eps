%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, October 21, 2010 7:06:49 AM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
5.00000 w
0 0 1.00000 RG
44.0000 2.01576 345.998 384.484 rc
newpath
49.0000 8.01577 m
216.333 8.01577 l
216.564 381.500 l
383.998 381.500 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
367.000 195.000 m
367.000 197.000 l
S
newpath
350.000 195.000 m
350.000 197.000 l
S
newpath
334.000 195.000 m
334.000 197.000 l
S
newpath
317.000 195.000 m
317.000 197.000 l
S
newpath
283.000 195.000 m
283.000 197.000 l
S
newpath
267.000 195.000 m
267.000 197.000 l
S
newpath
250.000 195.000 m
250.000 197.000 l
S
newpath
233.000 195.000 m
233.000 197.000 l
S
newpath
200.000 195.000 m
200.000 197.000 l
S
newpath
183.000 195.000 m
183.000 197.000 l
S
newpath
166.000 195.000 m
166.000 197.000 l
S
newpath
149.000 195.000 m
149.000 197.000 l
S
newpath
116.000 195.000 m
116.000 197.000 l
S
newpath
99.0000 195.000 m
99.0000 197.000 l
S
newpath
82.0000 195.000 m
82.0000 197.000 l
S
newpath
66.0000 195.000 m
66.0000 197.000 l
S
newpath
49.0000 195.000 m
383.998 195.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
209 218 15 15 rc
newpath
216.427 224.255 m
216.591 224.475 216.703 224.695 216.765 224.915  c
216.811 225.067 216.856 225.467 216.900 226.115  c
217.626 225.277 l
217.814 225.074 218.033 224.880 218.281 224.696  c
218.530 224.512 218.741 224.386 218.916 224.318  c
219.026 224.276 219.142 224.255 219.265 224.255  c
219.447 224.255 219.582 224.304 219.670 224.401  c
219.759 224.498 219.789 224.617 219.761 224.756  c
219.729 224.917 219.675 225.027 219.600 225.086  c
219.460 225.192 219.314 225.245 219.162 225.245  c
219.073 225.245 218.982 225.226 218.888 225.188  c
218.702 225.120 218.576 225.086 218.508 225.086  c
218.406 225.086 218.274 225.146 218.111 225.264  c
217.804 225.484 217.406 225.910 216.916 226.540  c
217.000 228.724 l
217.013 229.058 217.041 229.258 217.083 229.324  c
217.125 229.389 217.173 229.422 217.228 229.422  c
217.317 229.422 217.431 229.373 217.569 229.276  c
217.840 229.081 218.090 228.827 218.318 228.514  c
218.517 228.628 l
218.150 229.128 217.729 229.543 217.252 229.873  c
216.982 230.059 216.767 230.152 216.606 230.152  c
216.369 230.152 216.208 230.019 216.121 229.752  c
216.065 229.587 216.024 228.876 215.996 227.619  c
215.106 228.766 214.429 229.504 213.966 229.835  c
213.665 230.046 213.394 230.152 213.153 230.152  c
212.984 230.152 212.842 230.091 212.727 229.968  c
212.644 229.875 212.618 229.750 212.649 229.593  c
212.677 229.454 212.747 229.337 212.859 229.244  c
212.970 229.151 213.094 229.105 213.229 229.105  c
213.365 229.105 213.495 229.172 213.620 229.308  c
213.711 229.405 213.786 229.454 213.845 229.454  c
213.896 229.454 213.968 229.420 214.062 229.352  c
214.293 229.191 214.633 228.844 215.083 228.311  c
215.532 227.778 215.834 227.393 215.987 227.156  c
215.930 226.127 215.897 225.584 215.888 225.524  c
215.845 225.249 215.757 225.055 215.624 224.940  c
215.490 224.826 215.271 224.769 214.966 224.769  c
214.869 224.769 214.756 224.773 214.627 224.782  c
214.673 224.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
49.0000 195.000 m
49.0000 200.000 l
S
Q
q
newpath
133.000 195.000 m
133.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
129.469 213.747 m
129.469 212.765 129.617 211.920 129.914 211.211  c
130.210 210.502 130.603 209.974 131.094 209.627  c
131.475 209.352 131.869 209.214 132.275 209.214  c
132.935 209.214 133.528 209.551 134.052 210.224  c
134.708 211.057 135.036 212.187 135.036 213.613  c
135.036 214.612 134.892 215.460 134.605 216.159  c
134.317 216.857 133.950 217.364 133.503 217.679  c
133.057 217.994 132.626 218.152 132.211 218.152  c
131.391 218.152 130.707 217.667 130.161 216.698  c
129.700 215.882 129.469 214.898 129.469 213.747  c
h
130.713 213.905 m
130.713 215.090 130.859 216.057 131.151 216.806  c
131.393 217.437 131.752 217.752 132.231 217.752  c
132.459 217.752 132.696 217.649 132.941 217.444  c
133.187 217.239 133.373 216.895 133.500 216.413  c
133.695 215.685 133.792 214.659 133.792 213.334  c
133.792 212.352 133.690 211.533 133.487 210.877  c
133.335 210.391 133.138 210.046 132.897 209.843  c
132.724 209.703 132.514 209.633 132.269 209.633  c
131.981 209.633 131.725 209.762 131.501 210.021  c
131.196 210.372 130.988 210.924 130.878 211.677  c
130.768 212.431 130.713 213.173 130.713 213.905  c
h
137.125 216.768 m
137.323 216.768 137.491 216.837 137.626 216.974  c
137.761 217.112 137.829 217.278 137.829 217.473  c
137.829 217.667 137.760 217.833 137.623 217.971  c
137.485 218.109 137.319 218.177 137.125 218.177  c
136.930 218.177 136.764 218.109 136.626 217.971  c
136.489 217.833 136.420 217.667 136.420 217.473  c
136.420 217.274 136.489 217.107 136.626 216.971  c
136.764 216.836 136.930 216.768 137.125 216.768  c
h
144.393 209.392 m
143.897 210.471 l
141.308 210.471 l
140.743 211.627 l
141.864 211.792 142.753 212.208 143.409 212.877  c
143.972 213.453 144.253 214.130 144.253 214.908  c
144.253 215.361 144.161 215.780 143.977 216.165  c
143.793 216.550 143.561 216.878 143.282 217.149  c
143.002 217.420 142.691 217.638 142.349 217.803  c
141.862 218.036 141.363 218.152 140.851 218.152  c
140.334 218.152 139.959 218.064 139.724 217.888  c
139.489 217.713 139.372 217.519 139.372 217.308  c
139.372 217.189 139.420 217.084 139.518 216.993  c
139.615 216.902 139.738 216.857 139.886 216.857  c
139.996 216.857 140.092 216.874 140.175 216.908  c
140.257 216.942 140.398 217.028 140.597 217.168  c
140.914 217.388 141.236 217.498 141.562 217.498  c
142.057 217.498 142.491 217.311 142.866 216.936  c
143.241 216.562 143.428 216.106 143.428 215.568  c
143.428 215.048 143.261 214.562 142.926 214.112  c
142.592 213.661 142.131 213.313 141.543 213.067  c
141.081 212.877 140.453 212.767 139.657 212.737  c
141.308 209.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
216.000 195.000 m
216.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
219.523 210.236 m
221.618 209.214 l
221.827 209.214 l
221.827 216.482 l
221.827 216.965 221.847 217.265 221.887 217.384  c
221.928 217.502 222.011 217.593 222.138 217.657  c
222.265 217.720 222.523 217.756 222.913 217.765  c
222.913 218.000 l
219.675 218.000 l
219.675 217.765 l
220.082 217.756 220.344 217.721 220.462 217.660  c
220.581 217.599 220.663 217.516 220.710 217.412  c
220.757 217.309 220.780 216.999 220.780 216.482  c
220.780 211.836 l
220.780 211.210 220.759 210.808 220.716 210.630  c
220.687 210.495 220.633 210.395 220.554 210.332  c
220.476 210.268 220.382 210.236 220.272 210.236  c
220.115 210.236 219.897 210.302 219.618 210.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
300.000 195.000 m
300.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
298.523 210.236 m
300.618 209.214 l
300.827 209.214 l
300.827 216.482 l
300.827 216.965 300.847 217.265 300.887 217.384  c
300.928 217.502 301.011 217.593 301.138 217.657  c
301.265 217.720 301.523 217.756 301.913 217.765  c
301.913 218.000 l
298.675 218.000 l
298.675 217.765 l
299.082 217.756 299.344 217.721 299.462 217.660  c
299.581 217.599 299.663 217.516 299.710 217.412  c
299.757 217.309 299.780 216.999 299.780 216.482  c
299.780 211.836 l
299.780 211.210 299.759 210.808 299.716 210.630  c
299.687 210.495 299.633 210.395 299.554 210.332  c
299.476 210.268 299.382 210.236 299.272 210.236  c
299.115 210.236 298.897 210.302 298.618 210.433  c
h
305.125 216.768 m
305.323 216.768 305.491 216.837 305.626 216.974  c
305.761 217.112 305.829 217.278 305.829 217.473  c
305.829 217.667 305.760 217.833 305.623 217.971  c
305.485 218.109 305.319 218.177 305.125 218.177  c
304.930 218.177 304.764 218.109 304.626 217.971  c
304.489 217.833 304.420 217.667 304.420 217.473  c
304.420 217.274 304.489 217.107 304.626 216.971  c
304.764 216.836 304.930 216.768 305.125 216.768  c
h
312.393 209.392 m
311.897 210.471 l
309.308 210.471 l
308.743 211.627 l
309.864 211.792 310.753 212.208 311.409 212.877  c
311.972 213.453 312.253 214.130 312.253 214.908  c
312.253 215.361 312.161 215.780 311.977 216.165  c
311.793 216.550 311.561 216.878 311.282 217.149  c
311.002 217.420 310.691 217.638 310.349 217.803  c
309.862 218.036 309.363 218.152 308.851 218.152  c
308.334 218.152 307.959 218.064 307.724 217.888  c
307.489 217.713 307.372 217.519 307.372 217.308  c
307.372 217.189 307.420 217.084 307.518 216.993  c
307.615 216.902 307.738 216.857 307.886 216.857  c
307.996 216.857 308.092 216.874 308.175 216.908  c
308.257 216.942 308.398 217.028 308.597 217.168  c
308.914 217.388 309.236 217.498 309.562 217.498  c
310.057 217.498 310.491 217.311 310.866 216.936  c
311.241 216.562 311.428 216.106 311.428 215.568  c
311.428 215.048 311.261 214.562 310.926 214.112  c
310.592 213.661 310.131 213.313 309.543 213.067  c
309.081 212.877 308.453 212.767 307.657 212.737  c
309.308 209.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
384.000 195.000 m
384.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
390.960 216.343 m
390.357 218.000 l
385.279 218.000 l
385.279 217.765 l
386.773 216.402 387.824 215.289 388.434 214.426  c
389.043 213.563 389.348 212.773 389.348 212.058  c
389.348 211.512 389.181 211.064 388.846 210.712  c
388.512 210.361 388.112 210.186 387.647 210.186  c
387.223 210.186 386.844 210.309 386.507 210.557  c
386.171 210.804 385.922 211.167 385.761 211.646  c
385.526 211.646 l
385.632 210.863 385.904 210.262 386.342 209.843  c
386.780 209.424 387.327 209.214 387.983 209.214  c
388.681 209.214 389.264 209.439 389.732 209.887  c
390.199 210.336 390.433 210.865 390.433 211.474  c
390.433 211.910 390.332 212.346 390.128 212.782  c
389.815 213.467 389.307 214.193 388.605 214.959  c
387.551 216.110 386.893 216.804 386.631 217.041  c
388.878 217.041 l
389.335 217.041 389.656 217.024 389.840 216.990  c
390.024 216.956 390.190 216.888 390.338 216.784  c
390.486 216.680 390.615 216.533 390.725 216.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
49.0000 83.0000 m
46.0000 83.0000 l
S
newpath
49.0000 64.0000 m
46.0000 64.0000 l
S
newpath
49.0000 45.0000 m
46.0000 45.0000 l
S
newpath
49.0000 27.0000 m
46.0000 27.0000 l
S
newpath
49.0000 176.000 m
46.0000 176.000 l
S
newpath
49.0000 157.000 m
46.0000 157.000 l
S
newpath
49.0000 139.000 m
46.0000 139.000 l
S
newpath
49.0000 120.000 m
46.0000 120.000 l
S
newpath
49.0000 269.000 m
46.0000 269.000 l
S
newpath
49.0000 251.000 m
46.0000 251.000 l
S
newpath
49.0000 232.000 m
46.0000 232.000 l
S
newpath
49.0000 213.000 m
46.0000 213.000 l
S
newpath
49.0000 363.000 m
46.0000 363.000 l
S
newpath
49.0000 344.000 m
46.0000 344.000 l
S
newpath
49.0000 325.000 m
46.0000 325.000 l
S
newpath
49.0000 307.000 m
46.0000 307.000 l
S
newpath
49.0000 381.500 m
49.0000 8.01577 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 94 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
49.0000 382.000 m
44.0000 382.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
29 380 7 13 rc
newpath
39.7900 387.438 m
31.2100 387.438 l
31.2100 386.762 l
39.7900 386.762 l
h
f
Q
newpath
39.5234 383.236 m
41.6181 382.214 l
41.8276 382.214 l
41.8276 389.482 l
41.8276 389.965 41.8477 390.265 41.8879 390.384  c
41.9281 390.502 42.0117 390.593 42.1386 390.657  c
42.2656 390.720 42.5237 390.756 42.9130 390.765  c
42.9130 391.000 l
39.6757 391.000 l
39.6757 390.765 l
40.0820 390.756 40.3444 390.721 40.4628 390.660  c
40.5813 390.599 40.6639 390.516 40.7104 390.412  c
40.7570 390.309 40.7802 389.999 40.7802 389.482  c
40.7802 384.836 l
40.7802 384.210 40.7591 383.808 40.7168 383.630  c
40.6871 383.495 40.6332 383.395 40.5549 383.332  c
40.4766 383.268 40.3824 383.236 40.2724 383.236  c
40.1158 383.236 39.8979 383.302 39.6186 383.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 288.000 m
44.0000 288.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 287 7 13 rc
newpath
29.7900 294.438 m
21.2100 294.438 l
21.2100 293.762 l
29.7900 293.762 l
h
f
Q
newpath
28.4697 293.747 m
28.4697 292.765 28.6178 291.920 28.9140 291.211  c
29.2102 290.502 29.6038 289.974 30.0947 289.627  c
30.4755 289.352 30.8691 289.214 31.2753 289.214  c
31.9355 289.214 32.5279 289.551 33.0527 290.224  c
33.7086 291.057 34.0366 292.187 34.0366 293.613  c
34.0366 294.612 33.8927 295.460 33.6049 296.159  c
33.3172 296.857 32.9501 297.364 32.5036 297.679  c
32.0572 297.994 31.6266 298.152 31.2119 298.152  c
30.3909 298.152 29.7075 297.667 29.1616 296.698  c
28.7003 295.882 28.4697 294.898 28.4697 293.747  c
h
29.7138 293.905 m
29.7138 295.090 29.8598 296.057 30.1518 296.806  c
30.3930 297.437 30.7527 297.752 31.2309 297.752  c
31.4594 297.752 31.6964 297.649 31.9418 297.444  c
32.1873 297.239 32.3735 296.895 32.5004 296.413  c
32.6951 295.685 32.7924 294.659 32.7924 293.334  c
32.7924 292.352 32.6909 291.533 32.4877 290.877  c
32.3354 290.391 32.1386 290.046 31.8974 289.843  c
31.7239 289.703 31.5144 289.633 31.2690 289.633  c
30.9812 289.633 30.7252 289.762 30.5009 290.021  c
30.1962 290.372 29.9889 290.924 29.8789 291.677  c
29.7688 292.431 29.7138 293.173 29.7138 293.905  c
h
36.1250 296.768 m
36.3238 296.768 36.4910 296.837 36.6264 296.974  c
36.7618 297.112 36.8295 297.278 36.8295 297.473  c
36.8295 297.667 36.7608 297.833 36.6232 297.971  c
36.4857 298.109 36.3196 298.177 36.1250 298.177  c
35.9303 298.177 35.7642 298.109 35.6267 297.971  c
35.4891 297.833 35.4204 297.667 35.4204 297.473  c
35.4204 297.274 35.4891 297.107 35.6267 296.971  c
35.7642 296.836 35.9303 296.768 36.1250 296.768  c
h
43.3930 289.392 m
42.8979 290.471 l
40.3081 290.471 l
39.7431 291.627 l
40.8645 291.792 41.7532 292.208 42.4091 292.877  c
42.9720 293.453 43.2534 294.130 43.2534 294.908  c
43.2534 295.361 43.1613 295.780 42.9772 296.165  c
42.7932 296.550 42.5615 296.878 42.2822 297.149  c
42.0029 297.420 41.6918 297.638 41.3491 297.803  c
40.8624 298.036 40.3631 298.152 39.8510 298.152  c
39.3348 298.152 38.9592 298.064 38.7243 297.888  c
38.4895 297.713 38.3720 297.519 38.3720 297.308  c
38.3720 297.189 38.4207 297.084 38.5180 296.993  c
38.6154 296.902 38.7381 296.857 38.8862 296.857  c
38.9962 296.857 39.0925 296.874 39.1750 296.908  c
39.2575 296.942 39.3982 297.028 39.5971 297.168  c
39.9145 297.388 40.2361 297.498 40.5620 297.498  c
41.0571 297.498 41.4919 297.311 41.8664 296.936  c
42.2409 296.562 42.4282 296.106 42.4282 295.568  c
42.4282 295.048 42.2610 294.562 41.9267 294.112  c
41.5924 293.661 41.1311 293.313 40.5429 293.067  c
40.0817 292.877 39.4532 292.767 38.6577 292.737  c
40.3081 289.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 195.000 m
44.0000 195.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.4697 199.747 m
38.4697 198.765 38.6178 197.920 38.9140 197.211  c
39.2102 196.502 39.6038 195.974 40.0947 195.627  c
40.4755 195.352 40.8691 195.214 41.2753 195.214  c
41.9355 195.214 42.5279 195.551 43.0527 196.224  c
43.7086 197.057 44.0366 198.187 44.0366 199.613  c
44.0366 200.612 43.8927 201.460 43.6049 202.159  c
43.3172 202.857 42.9501 203.364 42.5036 203.679  c
42.0572 203.994 41.6266 204.152 41.2119 204.152  c
40.3909 204.152 39.7075 203.667 39.1616 202.698  c
38.7003 201.882 38.4697 200.898 38.4697 199.747  c
h
39.7138 199.905 m
39.7138 201.090 39.8598 202.057 40.1518 202.806  c
40.3930 203.437 40.7527 203.752 41.2309 203.752  c
41.4594 203.752 41.6964 203.649 41.9418 203.444  c
42.1873 203.239 42.3735 202.895 42.5004 202.413  c
42.6951 201.685 42.7924 200.659 42.7924 199.334  c
42.7924 198.352 42.6909 197.533 42.4877 196.877  c
42.3354 196.391 42.1386 196.046 41.8974 195.843  c
41.7239 195.703 41.5144 195.633 41.2690 195.633  c
40.9812 195.633 40.7252 195.762 40.5009 196.021  c
40.1962 196.372 39.9889 196.924 39.8789 197.677  c
39.7688 198.431 39.7138 199.173 39.7138 199.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 101.000 m
44.0000 101.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4697 106.747 m
28.4697 105.765 28.6178 104.920 28.9140 104.211  c
29.2102 103.502 29.6038 102.974 30.0947 102.627  c
30.4755 102.352 30.8691 102.214 31.2753 102.214  c
31.9355 102.214 32.5279 102.551 33.0527 103.224  c
33.7086 104.057 34.0366 105.187 34.0366 106.613  c
34.0366 107.612 33.8927 108.460 33.6049 109.159  c
33.3172 109.857 32.9501 110.364 32.5036 110.679  c
32.0572 110.994 31.6266 111.152 31.2119 111.152  c
30.3909 111.152 29.7075 110.667 29.1616 109.698  c
28.7003 108.882 28.4697 107.898 28.4697 106.747  c
h
29.7138 106.905 m
29.7138 108.090 29.8598 109.057 30.1518 109.806  c
30.3930 110.437 30.7527 110.752 31.2309 110.752  c
31.4594 110.752 31.6964 110.649 31.9418 110.444  c
32.1873 110.239 32.3735 109.895 32.5004 109.413  c
32.6951 108.685 32.7924 107.659 32.7924 106.334  c
32.7924 105.352 32.6909 104.533 32.4877 103.877  c
32.3354 103.391 32.1386 103.046 31.8974 102.843  c
31.7239 102.703 31.5144 102.633 31.2690 102.633  c
30.9812 102.633 30.7252 102.762 30.5009 103.021  c
30.1962 103.372 29.9889 103.924 29.8789 104.677  c
29.7688 105.431 29.7138 106.173 29.7138 106.905  c
h
36.1250 109.768 m
36.3238 109.768 36.4910 109.837 36.6264 109.974  c
36.7618 110.112 36.8295 110.278 36.8295 110.473  c
36.8295 110.667 36.7608 110.833 36.6232 110.971  c
36.4857 111.109 36.3196 111.177 36.1250 111.177  c
35.9303 111.177 35.7642 111.109 35.6267 110.971  c
35.4891 110.833 35.4204 110.667 35.4204 110.473  c
35.4204 110.274 35.4891 110.107 35.6267 109.971  c
35.7642 109.836 35.9303 109.768 36.1250 109.768  c
h
43.3930 102.392 m
42.8979 103.471 l
40.3081 103.471 l
39.7431 104.627 l
40.8645 104.792 41.7532 105.208 42.4091 105.877  c
42.9720 106.453 43.2534 107.130 43.2534 107.908  c
43.2534 108.361 43.1613 108.780 42.9772 109.165  c
42.7932 109.550 42.5615 109.878 42.2822 110.149  c
42.0029 110.420 41.6918 110.638 41.3491 110.803  c
40.8624 111.036 40.3631 111.152 39.8510 111.152  c
39.3348 111.152 38.9592 111.064 38.7243 110.888  c
38.4895 110.713 38.3720 110.519 38.3720 110.308  c
38.3720 110.189 38.4207 110.084 38.5180 109.993  c
38.6154 109.902 38.7381 109.857 38.8862 109.857  c
38.9962 109.857 39.0925 109.874 39.1750 109.908  c
39.2575 109.942 39.3982 110.028 39.5971 110.168  c
39.9145 110.388 40.2361 110.498 40.5620 110.498  c
41.0571 110.498 41.4919 110.311 41.8664 109.936  c
42.2409 109.562 42.4282 109.106 42.4282 108.568  c
42.4282 108.048 42.2610 107.562 41.9267 107.112  c
41.5924 106.661 41.1311 106.313 40.5429 106.067  c
40.0817 105.877 39.4532 105.767 38.6577 105.737  c
40.3081 102.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 8.00000 m
44.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
39.5234 10.2368 m
41.6181 9.21484 l
41.8276 9.21484 l
41.8276 16.4829 l
41.8276 16.9653 41.8477 17.2657 41.8879 17.3842  c
41.9281 17.5027 42.0117 17.5937 42.1386 17.6572  c
42.2656 17.7207 42.5237 17.7566 42.9130 17.7651  c
42.9130 18.0000 l
39.6757 18.0000 l
39.6757 17.7651 l
40.0820 17.7566 40.3444 17.7217 40.4628 17.6604  c
40.5813 17.5990 40.6639 17.5165 40.7104 17.4128  c
40.7570 17.3091 40.7802 16.9991 40.7802 16.4829  c
40.7802 11.8364 l
40.7802 11.2101 40.7591 10.8081 40.7168 10.6303  c
40.6871 10.4949 40.6332 10.3955 40.5549 10.3320  c
40.4766 10.2685 40.3824 10.2368 40.2724 10.2368  c
40.1158 10.2368 39.8979 10.3024 39.6186 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
369 170 25 36 rc
newpath
379.855 183.510 m
380.182 183.950 380.407 184.391 380.530 184.831  c
380.622 185.135 380.712 185.935 380.800 187.230  c
382.252 185.554 l
382.629 185.148 383.067 184.761 383.563 184.393  c
384.060 184.024 384.483 183.773 384.832 183.637  c
385.052 183.553 385.284 183.510 385.530 183.510  c
385.894 183.510 386.164 183.608 386.341 183.802  c
386.518 183.997 386.578 184.234 386.523 184.513  c
386.458 184.835 386.351 185.055 386.200 185.173  c
385.921 185.385 385.629 185.491 385.324 185.491  c
385.146 185.491 384.964 185.453 384.776 185.377  c
384.405 185.241 384.152 185.173 384.017 185.173  c
383.813 185.173 383.549 185.292 383.222 185.529  c
382.609 185.969 381.813 186.820 380.833 188.081  c
381.000 192.448 l
381.027 193.116 381.083 193.516 381.166 193.647  c
381.250 193.779 381.347 193.844 381.457 193.844  c
381.635 193.844 381.862 193.747 382.138 193.552  c
382.681 193.163 383.180 192.655 383.636 192.029  c
384.034 192.257 l
383.301 193.256 382.458 194.085 381.505 194.746  c
380.965 195.118 380.535 195.304 380.213 195.304  c
379.739 195.304 379.416 195.038 379.243 194.504  c
379.131 194.174 379.048 192.752 378.992 190.239  c
377.213 192.532 375.859 194.009 374.932 194.669  c
374.331 195.093 373.789 195.304 373.307 195.304  c
372.968 195.304 372.684 195.182 372.454 194.936  c
372.288 194.750 372.236 194.500 372.299 194.187  c
372.355 193.908 372.494 193.675 372.718 193.489  c
372.941 193.303 373.188 193.210 373.459 193.210  c
373.730 193.210 373.991 193.345 374.241 193.616  c
374.422 193.810 374.572 193.908 374.691 193.908  c
374.792 193.908 374.937 193.840 375.125 193.705  c
375.587 193.383 376.267 192.689 377.166 191.623  c
378.065 190.556 378.668 189.786 378.974 189.312  c
378.861 187.255 378.795 186.168 378.776 186.049  c
378.691 185.499 378.515 185.110 378.248 184.881  c
377.980 184.653 377.542 184.539 376.933 184.539  c
376.738 184.539 376.512 184.547 376.255 184.564  c
376.346 184.107 l
h
f
Q
cliprestore
newpath
0 0 m
0 400.000 l
400.000 400.000 l
400.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
347 7 34 38 rc
newpath
361.253 32.4941 m
361.253 33.0000 l
351.560 33.0000 l
351.560 32.4941 l
352.175 32.4941 l
352.713 32.4941 353.146 32.3984 353.474 32.2070  c
353.711 32.0794 353.893 31.8606 354.021 31.5507  c
354.121 31.3320 354.171 30.7578 354.171 29.8281  c
354.171 17.6328 l
354.171 16.6849 354.121 16.0924 354.021 15.8554  c
353.921 15.6184 353.718 15.4111 353.413 15.2334  c
353.107 15.0556 352.695 14.9668 352.175 14.9668  c
351.560 14.9668 l
351.560 14.4609 l
361.253 14.4609 l
361.253 14.9668 l
360.638 14.9668 l
360.100 14.9668 359.668 15.0625 359.339 15.2539  c
359.102 15.3815 358.916 15.6002 358.779 15.9101  c
358.679 16.1289 358.628 16.7031 358.628 17.6328  c
358.628 29.8281 l
358.628 30.7760 358.681 31.3684 358.786 31.6054  c
358.891 31.8424 359.096 32.0498 359.401 32.2275  c
359.706 32.4052 360.119 32.4941 360.638 32.4941  c
h
372.150 32.4941 m
372.150 33.0000 l
362.457 33.0000 l
362.457 32.4941 l
363.072 32.4941 l
363.610 32.4941 364.043 32.3984 364.371 32.2070  c
364.608 32.0794 364.790 31.8606 364.918 31.5507  c
365.018 31.3320 365.068 30.7578 365.068 29.8281  c
365.068 17.6328 l
365.068 16.6849 365.018 16.0924 364.918 15.8554  c
364.817 15.6184 364.614 15.4111 364.309 15.2334  c
364.004 15.0556 363.591 14.9668 363.072 14.9668  c
362.457 14.9668 l
362.457 14.4609 l
372.150 14.4609 l
372.150 14.9668 l
371.535 14.9668 l
370.997 14.9668 370.564 15.0625 370.236 15.2539  c
369.999 15.3815 369.812 15.6002 369.675 15.9101  c
369.575 16.1289 369.525 16.7031 369.525 17.6328  c
369.525 29.8281 l
369.525 30.7760 369.577 31.3684 369.682 31.6054  c
369.787 31.8424 369.992 32.0498 370.297 32.2275  c
370.603 32.4052 371.015 32.4941 371.535 32.4941  c
h
f
Q
cliprestore
newpath
0 0 m
0 400.000 l
400.000 400.000 l
400.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
