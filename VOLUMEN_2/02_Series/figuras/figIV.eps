%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, October 22, 2010 1:00:32 AM VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
4.00000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
4.00000 w
0 J
1 j
q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
40.0000 366.000 m
40.0000 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
57.0992 366.000 m
57.0992 4.00549 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
74.1984 366.000 m
74.1984 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
91.2976 366.000 m
91.2976 245.335 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
108.396 366.000 m
108.396 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
125.496 366.000 m
125.496 293.601 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
142.595 366.000 m
142.595 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
159.694 366.000 m
159.694 314.286 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
176.793 366.000 m
176.793 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
193.893 366.000 m
193.893 325.778 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
210.992 366.000 m
210.992 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
228.091 366.000 m
228.091 333.091 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
245.190 366.000 m
245.190 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
262.289 366.000 m
262.289 338.154 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
279.389 366.000 m
279.389 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
296.488 366.000 m
296.488 341.867 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
313.587 366.000 m
313.587 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
330.686 366.000 m
330.686 344.706 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
347.785 366.000 m
347.785 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
37.0000 5.47934E-3 348.984 368.994 rc
newpath
364.885 366.000 m
364.885 346.947 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
1.00000 0 0 RG
39.0000 2.00547 344.984 364.994 rc
newpath
381.984 366.000 m
381.984 366.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
348.000 366.000 m
348.000 369.000 l
S
newpath
365.000 366.000 m
365.000 369.000 l
S
newpath
331.000 366.000 m
331.000 369.000 l
S
newpath
314.000 366.000 m
314.000 369.000 l
S
newpath
279.000 366.000 m
279.000 369.000 l
S
newpath
262.000 366.000 m
262.000 369.000 l
S
newpath
245.000 366.000 m
245.000 369.000 l
S
newpath
228.000 366.000 m
228.000 369.000 l
S
newpath
177.000 366.000 m
177.000 369.000 l
S
newpath
160.000 366.000 m
160.000 369.000 l
S
newpath
143.000 366.000 m
143.000 369.000 l
S
newpath
108.000 366.000 m
108.000 369.000 l
S
newpath
91.0000 366.000 m
91.0000 369.000 l
S
newpath
74.0000 366.000 m
74.0000 369.000 l
S
newpath
57.0000 366.000 m
57.0000 369.000 l
S
newpath
194.000 366.000 m
194.000 369.000 l
S
newpath
40.0000 366.000 m
381.984 366.000 l
S
Q
0 J
1 j
q
q
newpath
40.0000 366.000 m
40.0000 371.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
42.4697 385.747 m
42.4697 384.765 42.6178 383.920 42.9140 383.211  c
43.2102 382.502 43.6038 381.974 44.0947 381.627  c
44.4755 381.352 44.8691 381.214 45.2753 381.214  c
45.9355 381.214 46.5279 381.551 47.0527 382.224  c
47.7086 383.057 48.0366 384.187 48.0366 385.613  c
48.0366 386.612 47.8927 387.460 47.6049 388.159  c
47.3172 388.857 46.9501 389.364 46.5036 389.679  c
46.0572 389.994 45.6266 390.152 45.2119 390.152  c
44.3909 390.152 43.7075 389.667 43.1616 388.698  c
42.7003 387.882 42.4697 386.898 42.4697 385.747  c
h
43.7138 385.905 m
43.7138 387.090 43.8598 388.057 44.1518 388.806  c
44.3930 389.437 44.7527 389.752 45.2309 389.752  c
45.4594 389.752 45.6964 389.649 45.9418 389.444  c
46.1873 389.239 46.3735 388.895 46.5004 388.413  c
46.6951 387.685 46.7924 386.659 46.7924 385.334  c
46.7924 384.352 46.6909 383.533 46.4877 382.877  c
46.3354 382.391 46.1386 382.046 45.8974 381.843  c
45.7239 381.703 45.5144 381.633 45.2690 381.633  c
44.9812 381.633 44.7252 381.762 44.5009 382.021  c
44.1962 382.372 43.9889 382.924 43.8789 383.677  c
43.7688 384.431 43.7138 385.173 43.7138 385.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
125.000 366.000 m
125.000 371.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
132.643 381.392 m
132.147 382.471 l
129.558 382.471 l
128.993 383.627 l
130.114 383.792 131.003 384.208 131.659 384.877  c
132.222 385.453 132.503 386.130 132.503 386.908  c
132.503 387.361 132.411 387.780 132.227 388.165  c
132.043 388.550 131.811 388.878 131.532 389.149  c
131.252 389.420 130.941 389.638 130.599 389.803  c
130.112 390.036 129.613 390.152 129.101 390.152  c
128.584 390.152 128.209 390.064 127.974 389.888  c
127.739 389.713 127.622 389.519 127.622 389.308  c
127.622 389.189 127.670 389.084 127.768 388.993  c
127.865 388.902 127.988 388.857 128.136 388.857  c
128.246 388.857 128.342 388.874 128.425 388.908  c
128.507 388.942 128.648 389.028 128.847 389.168  c
129.164 389.388 129.486 389.498 129.812 389.498  c
130.307 389.498 130.741 389.311 131.116 388.936  c
131.491 388.562 131.678 388.106 131.678 387.568  c
131.678 387.048 131.511 386.562 131.176 386.112  c
130.842 385.661 130.381 385.313 129.793 385.067  c
129.331 384.877 128.703 384.767 127.907 384.737  c
129.558 381.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
211.000 366.000 m
211.000 371.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
209.523 382.236 m
211.618 381.214 l
211.827 381.214 l
211.827 388.482 l
211.827 388.965 211.847 389.265 211.887 389.384  c
211.928 389.502 212.011 389.593 212.138 389.657  c
212.265 389.720 212.523 389.756 212.913 389.765  c
212.913 390.000 l
209.675 390.000 l
209.675 389.765 l
210.082 389.756 210.344 389.721 210.462 389.660  c
210.581 389.599 210.663 389.516 210.710 389.412  c
210.757 389.309 210.780 388.999 210.780 388.482  c
210.780 383.836 l
210.780 383.210 210.759 382.808 210.716 382.630  c
210.687 382.495 210.633 382.395 210.554 382.332  c
210.476 382.268 210.382 382.236 210.272 382.236  c
210.115 382.236 209.897 382.302 209.618 382.433  c
h
214.969 385.747 m
214.969 384.765 215.117 383.920 215.414 383.211  c
215.710 382.502 216.103 381.974 216.594 381.627  c
216.975 381.352 217.369 381.214 217.775 381.214  c
218.435 381.214 219.028 381.551 219.552 382.224  c
220.208 383.057 220.536 384.187 220.536 385.613  c
220.536 386.612 220.392 387.460 220.105 388.159  c
219.817 388.857 219.450 389.364 219.003 389.679  c
218.557 389.994 218.126 390.152 217.711 390.152  c
216.891 390.152 216.207 389.667 215.661 388.698  c
215.200 387.882 214.969 386.898 214.969 385.747  c
h
216.213 385.905 m
216.213 387.090 216.359 388.057 216.651 388.806  c
216.893 389.437 217.252 389.752 217.731 389.752  c
217.959 389.752 218.196 389.649 218.441 389.444  c
218.687 389.239 218.873 388.895 219.000 388.413  c
219.195 387.685 219.292 386.659 219.292 385.334  c
219.292 384.352 219.190 383.533 218.987 382.877  c
218.835 382.391 218.638 382.046 218.397 381.843  c
218.224 381.703 218.014 381.633 217.769 381.633  c
217.481 381.633 217.225 381.762 217.001 382.021  c
216.696 382.372 216.488 382.924 216.378 383.677  c
216.268 384.431 216.213 385.173 216.213 385.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
296.000 366.000 m
296.000 371.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
295.523 382.236 m
297.618 381.214 l
297.827 381.214 l
297.827 388.482 l
297.827 388.965 297.847 389.265 297.887 389.384  c
297.928 389.502 298.011 389.593 298.138 389.657  c
298.265 389.720 298.523 389.756 298.913 389.765  c
298.913 390.000 l
295.675 390.000 l
295.675 389.765 l
296.082 389.756 296.344 389.721 296.462 389.660  c
296.581 389.599 296.663 389.516 296.710 389.412  c
296.757 389.309 296.780 388.999 296.780 388.482  c
296.780 383.836 l
296.780 383.210 296.759 382.808 296.716 382.630  c
296.687 382.495 296.633 382.395 296.554 382.332  c
296.476 382.268 296.382 382.236 296.272 382.236  c
296.115 382.236 295.897 382.302 295.618 382.433  c
h
306.143 381.392 m
305.647 382.471 l
303.058 382.471 l
302.493 383.627 l
303.614 383.792 304.503 384.208 305.159 384.877  c
305.722 385.453 306.003 386.130 306.003 386.908  c
306.003 387.361 305.911 387.780 305.727 388.165  c
305.543 388.550 305.311 388.878 305.032 389.149  c
304.752 389.420 304.441 389.638 304.099 389.803  c
303.612 390.036 303.113 390.152 302.601 390.152  c
302.084 390.152 301.709 390.064 301.474 389.888  c
301.239 389.713 301.122 389.519 301.122 389.308  c
301.122 389.189 301.170 389.084 301.268 388.993  c
301.365 388.902 301.488 388.857 301.636 388.857  c
301.746 388.857 301.842 388.874 301.925 388.908  c
302.007 388.942 302.148 389.028 302.347 389.168  c
302.664 389.388 302.986 389.498 303.312 389.498  c
303.807 389.498 304.241 389.311 304.616 388.936  c
304.991 388.562 305.178 388.106 305.178 387.568  c
305.178 387.048 305.011 386.562 304.676 386.112  c
304.342 385.661 303.881 385.313 303.293 385.067  c
302.831 384.877 302.203 384.767 301.407 384.737  c
303.058 381.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
382.000 366.000 m
382.000 371.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
384.960 388.343 m
384.357 390.000 l
379.279 390.000 l
379.279 389.765 l
380.773 388.402 381.824 387.289 382.434 386.426  c
383.043 385.563 383.348 384.773 383.348 384.058  c
383.348 383.512 383.181 383.064 382.846 382.712  c
382.512 382.361 382.112 382.186 381.647 382.186  c
381.223 382.186 380.844 382.309 380.507 382.557  c
380.171 382.804 379.922 383.167 379.761 383.646  c
379.526 383.646 l
379.632 382.863 379.904 382.262 380.342 381.843  c
380.780 381.424 381.327 381.214 381.983 381.214  c
382.681 381.214 383.264 381.439 383.732 381.887  c
384.199 382.336 384.433 382.865 384.433 383.474  c
384.433 383.910 384.332 384.346 384.128 384.782  c
383.815 385.467 383.307 386.193 382.605 386.959  c
381.551 388.110 380.893 388.804 380.631 389.041  c
382.878 389.041 l
383.335 389.041 383.656 389.024 383.840 388.990  c
384.024 388.956 384.190 388.888 384.338 388.784  c
384.486 388.680 384.615 388.533 384.725 388.343  c
h
385.969 385.747 m
385.969 384.765 386.117 383.920 386.414 383.211  c
386.710 382.502 387.103 381.974 387.594 381.627  c
387.975 381.352 388.369 381.214 388.775 381.214  c
389.435 381.214 390.028 381.551 390.552 382.224  c
391.208 383.057 391.536 384.187 391.536 385.613  c
391.536 386.612 391.392 387.460 391.105 388.159  c
390.817 388.857 390.450 389.364 390.003 389.679  c
389.557 389.994 389.126 390.152 388.711 390.152  c
387.891 390.152 387.207 389.667 386.661 388.698  c
386.200 387.882 385.969 386.898 385.969 385.747  c
h
387.213 385.905 m
387.213 387.090 387.359 388.057 387.651 388.806  c
387.893 389.437 388.252 389.752 388.731 389.752  c
388.959 389.752 389.196 389.649 389.441 389.444  c
389.687 389.239 389.873 388.895 390.000 388.413  c
390.195 387.685 390.292 386.659 390.292 385.334  c
390.292 384.352 390.190 383.533 389.987 382.877  c
389.835 382.391 389.638 382.046 389.397 381.843  c
389.224 381.703 389.014 381.633 388.769 381.633  c
388.481 381.633 388.225 381.762 388.001 382.021  c
387.696 382.372 387.488 382.924 387.378 383.677  c
387.268 384.431 387.213 385.173 387.213 385.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
40.0000 53.0000 m
37.0000 53.0000 l
S
newpath
40.0000 110.000 m
37.0000 110.000 l
S
newpath
40.0000 167.000 m
37.0000 167.000 l
S
newpath
40.0000 224.000 m
37.0000 224.000 l
S
newpath
40.0000 281.000 m
37.0000 281.000 l
S
newpath
40.0000 338.000 m
37.0000 338.000 l
S
newpath
40.0000 366.000 m
40.0000 4.00549 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 178 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
40.0000 366.000 m
35.0000 366.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
29.4697 371.747 m
29.4697 370.765 29.6178 369.920 29.9140 369.211  c
30.2102 368.502 30.6038 367.974 31.0947 367.627  c
31.4755 367.352 31.8691 367.214 32.2753 367.214  c
32.9355 367.214 33.5279 367.551 34.0527 368.224  c
34.7086 369.057 35.0366 370.187 35.0366 371.613  c
35.0366 372.612 34.8927 373.460 34.6049 374.159  c
34.3172 374.857 33.9501 375.364 33.5036 375.679  c
33.0572 375.994 32.6266 376.152 32.2119 376.152  c
31.3909 376.152 30.7075 375.667 30.1616 374.698  c
29.7003 373.882 29.4697 372.898 29.4697 371.747  c
h
30.7138 371.905 m
30.7138 373.090 30.8598 374.057 31.1518 374.806  c
31.3930 375.437 31.7527 375.752 32.2309 375.752  c
32.4594 375.752 32.6964 375.649 32.9418 375.444  c
33.1873 375.239 33.3735 374.895 33.5004 374.413  c
33.6951 373.685 33.7924 372.659 33.7924 371.334  c
33.7924 370.352 33.6909 369.533 33.4877 368.877  c
33.3354 368.391 33.1386 368.046 32.8974 367.843  c
32.7239 367.703 32.5144 367.633 32.2690 367.633  c
31.9812 367.633 31.7252 367.762 31.5009 368.021  c
31.1962 368.372 30.9889 368.924 30.8789 369.677  c
30.7688 370.431 30.7138 371.173 30.7138 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
40.0000 309.000 m
35.0000 309.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4697 314.747 m
19.4697 313.765 19.6178 312.920 19.9140 312.211  c
20.2102 311.502 20.6038 310.974 21.0947 310.627  c
21.4755 310.352 21.8691 310.214 22.2753 310.214  c
22.9355 310.214 23.5279 310.551 24.0527 311.224  c
24.7086 312.057 25.0366 313.187 25.0366 314.613  c
25.0366 315.612 24.8927 316.460 24.6049 317.159  c
24.3172 317.857 23.9501 318.364 23.5036 318.679  c
23.0572 318.994 22.6266 319.152 22.2119 319.152  c
21.3909 319.152 20.7075 318.667 20.1616 317.698  c
19.7003 316.882 19.4697 315.898 19.4697 314.747  c
h
20.7138 314.905 m
20.7138 316.090 20.8598 317.057 21.1518 317.806  c
21.3930 318.437 21.7527 318.752 22.2309 318.752  c
22.4594 318.752 22.6964 318.649 22.9418 318.444  c
23.1873 318.239 23.3735 317.895 23.5004 317.413  c
23.6951 316.685 23.7924 315.659 23.7924 314.334  c
23.7924 313.352 23.6909 312.533 23.4877 311.877  c
23.3354 311.391 23.1386 311.046 22.8974 310.843  c
22.7239 310.703 22.5144 310.633 22.2690 310.633  c
21.9812 310.633 21.7252 310.762 21.5009 311.021  c
21.1962 311.372 20.9889 311.924 20.8789 312.677  c
20.7688 313.431 20.7138 314.173 20.7138 314.905  c
h
27.1250 317.768 m
27.3238 317.768 27.4910 317.837 27.6264 317.974  c
27.7618 318.112 27.8295 318.278 27.8295 318.473  c
27.8295 318.667 27.7608 318.833 27.6232 318.971  c
27.4857 319.109 27.3196 319.177 27.1250 319.177  c
26.9303 319.177 26.7642 319.109 26.6267 318.971  c
26.4891 318.833 26.4204 318.667 26.4204 318.473  c
26.4204 318.274 26.4891 318.107 26.6267 317.971  c
26.7642 317.836 26.9303 317.768 27.1250 317.768  c
h
34.7104 317.343 m
34.1074 319.000 l
29.0293 319.000 l
29.0293 318.765 l
30.5231 317.402 31.5747 316.289 32.1840 315.426  c
32.7934 314.563 33.0981 313.773 33.0981 313.058  c
33.0981 312.512 32.9309 312.064 32.5966 311.712  c
32.2623 311.361 31.8624 311.186 31.3969 311.186  c
30.9738 311.186 30.5939 311.309 30.2575 311.557  c
29.9211 311.804 29.6725 312.167 29.5117 312.646  c
29.2768 312.646 l
29.3826 311.863 29.6545 311.262 30.0925 310.843  c
30.5305 310.424 31.0774 310.214 31.7334 310.214  c
32.4316 310.214 33.0145 310.439 33.4821 310.887  c
33.9497 311.336 34.1835 311.865 34.1835 312.474  c
34.1835 312.910 34.0820 313.346 33.8789 313.782  c
33.5657 314.467 33.0579 315.193 32.3554 315.959  c
31.3017 317.110 30.6437 317.804 30.3813 318.041  c
32.6284 318.041 l
33.0854 318.041 33.4060 318.024 33.5900 317.990  c
33.7741 317.956 33.9402 317.888 34.0883 317.784  c
34.2364 317.680 34.3655 317.533 34.4755 317.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
40.0000 252.000 m
35.0000 252.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4697 257.747 m
19.4697 256.765 19.6178 255.920 19.9140 255.211  c
20.2102 254.502 20.6038 253.974 21.0947 253.627  c
21.4755 253.352 21.8691 253.214 22.2753 253.214  c
22.9355 253.214 23.5279 253.551 24.0527 254.224  c
24.7086 255.057 25.0366 256.187 25.0366 257.613  c
25.0366 258.612 24.8927 259.460 24.6049 260.159  c
24.3172 260.857 23.9501 261.364 23.5036 261.679  c
23.0572 261.994 22.6266 262.152 22.2119 262.152  c
21.3909 262.152 20.7075 261.667 20.1616 260.698  c
19.7003 259.882 19.4697 258.898 19.4697 257.747  c
h
20.7138 257.905 m
20.7138 259.090 20.8598 260.057 21.1518 260.806  c
21.3930 261.437 21.7527 261.752 22.2309 261.752  c
22.4594 261.752 22.6964 261.649 22.9418 261.444  c
23.1873 261.239 23.3735 260.895 23.5004 260.413  c
23.6951 259.685 23.7924 258.659 23.7924 257.334  c
23.7924 256.352 23.6909 255.533 23.4877 254.877  c
23.3354 254.391 23.1386 254.046 22.8974 253.843  c
22.7239 253.703 22.5144 253.633 22.2690 253.633  c
21.9812 253.633 21.7252 253.762 21.5009 254.021  c
21.1962 254.372 20.9889 254.924 20.8789 255.677  c
20.7688 256.431 20.7138 257.173 20.7138 257.905  c
h
27.1250 260.768 m
27.3238 260.768 27.4910 260.837 27.6264 260.974  c
27.7618 261.112 27.8295 261.278 27.8295 261.473  c
27.8295 261.667 27.7608 261.833 27.6232 261.971  c
27.4857 262.109 27.3196 262.177 27.1250 262.177  c
26.9303 262.177 26.7642 262.109 26.6267 261.971  c
26.4891 261.833 26.4204 261.667 26.4204 261.473  c
26.4204 261.274 26.4891 261.107 26.6267 260.971  c
26.7642 260.836 26.9303 260.768 27.1250 260.768  c
h
34.7993 258.826 m
34.7993 259.727 l
33.6440 259.727 l
33.6440 262.000 l
32.5966 262.000 l
32.5966 259.727 l
28.9531 259.727 l
28.9531 258.915 l
32.9458 253.214 l
33.6440 253.214 l
33.6440 258.826 l
h
32.5966 258.826 m
32.5966 254.554 l
29.5752 258.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
40.0000 195.000 m
35.0000 195.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4697 200.747 m
19.4697 199.765 19.6178 198.920 19.9140 198.211  c
20.2102 197.502 20.6038 196.974 21.0947 196.627  c
21.4755 196.352 21.8691 196.214 22.2753 196.214  c
22.9355 196.214 23.5279 196.551 24.0527 197.224  c
24.7086 198.057 25.0366 199.187 25.0366 200.613  c
25.0366 201.612 24.8927 202.460 24.6049 203.159  c
24.3172 203.857 23.9501 204.364 23.5036 204.679  c
23.0572 204.994 22.6266 205.152 22.2119 205.152  c
21.3909 205.152 20.7075 204.667 20.1616 203.698  c
19.7003 202.882 19.4697 201.898 19.4697 200.747  c
h
20.7138 200.905 m
20.7138 202.090 20.8598 203.057 21.1518 203.806  c
21.3930 204.437 21.7527 204.752 22.2309 204.752  c
22.4594 204.752 22.6964 204.649 22.9418 204.444  c
23.1873 204.239 23.3735 203.895 23.5004 203.413  c
23.6951 202.685 23.7924 201.659 23.7924 200.334  c
23.7924 199.352 23.6909 198.533 23.4877 197.877  c
23.3354 197.391 23.1386 197.046 22.8974 196.843  c
22.7239 196.703 22.5144 196.633 22.2690 196.633  c
21.9812 196.633 21.7252 196.762 21.5009 197.021  c
21.1962 197.372 20.9889 197.924 20.8789 198.677  c
20.7688 199.431 20.7138 200.173 20.7138 200.905  c
h
27.1250 203.768 m
27.3238 203.768 27.4910 203.837 27.6264 203.974  c
27.7618 204.112 27.8295 204.278 27.8295 204.473  c
27.8295 204.667 27.7608 204.833 27.6232 204.971  c
27.4857 205.109 27.3196 205.177 27.1250 205.177  c
26.9303 205.177 26.7642 205.109 26.6267 204.971  c
26.4891 204.833 26.4204 204.667 26.4204 204.473  c
26.4204 204.274 26.4891 204.107 26.6267 203.971  c
26.7642 203.836 26.9303 203.768 27.1250 203.768  c
h
34.5771 196.214 m
34.5771 196.449 l
34.0185 196.504 33.5625 196.615 33.2092 196.783  c
32.8558 196.950 32.5067 197.205 32.1618 197.547  c
31.8169 197.890 31.5313 198.272 31.3049 198.693  c
31.0785 199.114 30.8891 199.615 30.7368 200.194  c
31.3461 199.775 31.9576 199.566 32.5712 199.566  c
33.1595 199.566 33.6694 199.803 34.1010 200.277  c
34.5327 200.751 34.7485 201.360 34.7485 202.105  c
34.7485 202.824 34.5306 203.480 34.0947 204.073  c
33.5699 204.792 32.8759 205.152 32.0127 205.152  c
31.4244 205.152 30.9251 204.957 30.5146 204.568  c
29.7106 203.810 29.3085 202.829 29.3085 201.623  c
29.3085 200.852 29.4630 200.120 29.7719 199.426  c
30.0808 198.732 30.5220 198.117 31.0954 197.579  c
31.6688 197.042 32.2179 196.680 32.7426 196.494  c
33.2674 196.307 33.7561 196.214 34.2089 196.214  c
h
30.6289 200.658 m
30.5527 201.229 30.5146 201.690 30.5146 202.042  c
30.5146 202.448 30.5897 202.889 30.7399 203.365  c
30.8902 203.841 31.1134 204.219 31.4096 204.498  c
31.6254 204.697 31.8878 204.796 32.1967 204.796  c
32.5649 204.796 32.8939 204.623 33.1838 204.276  c
33.4737 203.929 33.6186 203.434 33.6186 202.791  c
33.6186 202.067 33.4747 201.441 33.1870 200.912  c
32.8992 200.383 32.4908 200.118 31.9619 200.118  c
31.8011 200.118 31.6286 200.152 31.4445 200.220  c
31.2605 200.287 30.9886 200.433 30.6289 200.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
40.0000 139.000 m
35.0000 139.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4697 143.747 m
19.4697 142.765 19.6178 141.920 19.9140 141.211  c
20.2102 140.502 20.6038 139.974 21.0947 139.627  c
21.4755 139.352 21.8691 139.214 22.2753 139.214  c
22.9355 139.214 23.5279 139.551 24.0527 140.224  c
24.7086 141.057 25.0366 142.187 25.0366 143.613  c
25.0366 144.612 24.8927 145.460 24.6049 146.159  c
24.3172 146.857 23.9501 147.364 23.5036 147.679  c
23.0572 147.994 22.6266 148.152 22.2119 148.152  c
21.3909 148.152 20.7075 147.667 20.1616 146.698  c
19.7003 145.882 19.4697 144.898 19.4697 143.747  c
h
20.7138 143.905 m
20.7138 145.090 20.8598 146.057 21.1518 146.806  c
21.3930 147.437 21.7527 147.752 22.2309 147.752  c
22.4594 147.752 22.6964 147.649 22.9418 147.444  c
23.1873 147.239 23.3735 146.895 23.5004 146.413  c
23.6951 145.685 23.7924 144.659 23.7924 143.334  c
23.7924 142.352 23.6909 141.533 23.4877 140.877  c
23.3354 140.391 23.1386 140.046 22.8974 139.843  c
22.7239 139.703 22.5144 139.633 22.2690 139.633  c
21.9812 139.633 21.7252 139.762 21.5009 140.021  c
21.1962 140.372 20.9889 140.924 20.8789 141.677  c
20.7688 142.431 20.7138 143.173 20.7138 143.905  c
h
27.1250 146.768 m
27.3238 146.768 27.4910 146.837 27.6264 146.974  c
27.7618 147.112 27.8295 147.278 27.8295 147.473  c
27.8295 147.667 27.7608 147.833 27.6232 147.971  c
27.4857 148.109 27.3196 148.177 27.1250 148.177  c
26.9303 148.177 26.7642 148.109 26.6267 147.971  c
26.4891 147.833 26.4204 147.667 26.4204 147.473  c
26.4204 147.274 26.4891 147.107 26.6267 146.971  c
26.7642 146.836 26.9303 146.768 27.1250 146.768  c
h
31.2446 143.664 m
30.5633 143.106 30.1242 142.657 29.9274 142.318  c
29.7307 141.980 29.6323 141.629 29.6323 141.265  c
29.6323 140.706 29.8481 140.225 30.2797 139.821  c
30.7114 139.416 31.2848 139.214 32.0000 139.214  c
32.6940 139.214 33.2526 139.403 33.6757 139.779  c
34.0989 140.156 34.3105 140.585 34.3105 141.068  c
34.3105 141.390 34.1962 141.717 33.9677 142.052  c
33.7392 142.386 33.2631 142.780 32.5395 143.232  c
33.2843 143.808 33.7773 144.261 34.0185 144.591  c
34.3401 145.022 34.5009 145.477 34.5009 145.956  c
34.5009 146.561 34.2703 147.078 33.8090 147.508  c
33.3478 147.937 32.7426 148.152 31.9936 148.152  c
31.1769 148.152 30.5400 147.896 30.0830 147.384  c
29.7190 146.973 29.5371 146.525 29.5371 146.038  c
29.5371 145.657 29.6651 145.280 29.9211 144.905  c
30.1771 144.531 30.6183 144.117 31.2446 143.664  c
h
32.2412 142.985 m
32.7490 142.528 33.0706 142.167 33.2060 141.903  c
33.3414 141.638 33.4091 141.339 33.4091 141.004  c
33.4091 140.560 33.2843 140.212 33.0346 139.960  c
32.7849 139.708 32.4443 139.583 32.0127 139.583  c
31.5810 139.583 31.2298 139.707 30.9589 139.957  c
30.6881 140.207 30.5527 140.499 30.5527 140.833  c
30.5527 141.053 30.6088 141.273 30.7209 141.493  c
30.8330 141.713 30.9928 141.923 31.2002 142.122  c
h
31.5429 143.905 m
31.1917 144.202 30.9314 144.524 30.7622 144.873  c
30.5929 145.222 30.5083 145.600 30.5083 146.006  c
30.5083 146.552 30.6574 146.989 30.9558 147.317  c
31.2541 147.645 31.6339 147.809 32.0952 147.809  c
32.5522 147.809 32.9182 147.680 33.1933 147.422  c
33.4684 147.164 33.6059 146.851 33.6059 146.482  c
33.6059 146.178 33.5255 145.905 33.3647 145.664  c
33.0642 145.215 32.4570 144.629 31.5429 143.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
40.0000 82.0000 m
35.0000 82.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.5234 83.2368 m
32.6181 82.2148 l
32.8276 82.2148 l
32.8276 89.4829 l
32.8276 89.9653 32.8477 90.2657 32.8879 90.3842  c
32.9281 90.5027 33.0117 90.5937 33.1386 90.6572  c
33.2656 90.7207 33.5237 90.7566 33.9130 90.7651  c
33.9130 91.0000 l
30.6757 91.0000 l
30.6757 90.7651 l
31.0820 90.7566 31.3444 90.7217 31.4628 90.6604  c
31.5813 90.5990 31.6639 90.5165 31.7104 90.4128  c
31.7570 90.3091 31.7802 89.9991 31.7802 89.4829  c
31.7802 84.8364 l
31.7802 84.2101 31.7591 83.8081 31.7168 83.6303  c
31.6871 83.4949 31.6332 83.3955 31.5549 83.3320  c
31.4766 83.2685 31.3824 83.2368 31.2724 83.2368  c
31.1158 83.2368 30.8979 83.3024 30.6186 83.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
40.0000 25.0000 m
35.0000 25.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
20.5234 26.2368 m
22.6181 25.2148 l
22.8276 25.2148 l
22.8276 32.4829 l
22.8276 32.9653 22.8477 33.2657 22.8879 33.3842  c
22.9281 33.5027 23.0117 33.5937 23.1386 33.6572  c
23.2656 33.7207 23.5237 33.7566 23.9130 33.7651  c
23.9130 34.0000 l
20.6757 34.0000 l
20.6757 33.7651 l
21.0820 33.7566 21.3444 33.7217 21.4628 33.6604  c
21.5813 33.5990 21.6639 33.5165 21.7104 33.4128  c
21.7570 33.3091 21.7802 32.9991 21.7802 32.4829  c
21.7802 27.8364 l
21.7802 27.2101 21.7591 26.8081 21.7168 26.6303  c
21.6871 26.4949 21.6332 26.3955 21.5549 26.3320  c
21.4766 26.2685 21.3824 26.2368 21.2724 26.2368  c
21.1158 26.2368 20.8979 26.3024 20.6186 26.4335  c
h
27.1250 32.7685 m
27.3238 32.7685 27.4910 32.8373 27.6264 32.9748  c
27.7618 33.1123 27.8295 33.2784 27.8295 33.4731  c
27.8295 33.6678 27.7608 33.8339 27.6232 33.9714  c
27.4857 34.1089 27.3196 34.1777 27.1250 34.1777  c
26.9303 34.1777 26.7642 34.1089 26.6267 33.9714  c
26.4891 33.8339 26.4204 33.6678 26.4204 33.4731  c
26.4204 33.2742 26.4891 33.1071 26.6267 32.9716  c
26.7642 32.8362 26.9303 32.7685 27.1250 32.7685  c
h
34.7104 32.3432 m
34.1074 34.0000 l
29.0293 34.0000 l
29.0293 33.7651 l
30.5231 32.4025 31.5747 31.2895 32.1840 30.4262  c
32.7934 29.5629 33.0981 28.7737 33.0981 28.0585  c
33.0981 27.5127 32.9309 27.0641 32.5966 26.7128  c
32.2623 26.3616 31.8624 26.1860 31.3969 26.1860  c
30.9738 26.1860 30.5939 26.3098 30.2575 26.5573  c
29.9211 26.8049 29.6725 27.1678 29.5117 27.6460  c
29.2768 27.6460 l
29.3826 26.8631 29.6545 26.2622 30.0925 25.8432  c
30.5305 25.4243 31.0774 25.2148 31.7334 25.2148  c
32.4316 25.2148 33.0145 25.4391 33.4821 25.8877  c
33.9497 26.3362 34.1835 26.8652 34.1835 27.4746  c
34.1835 27.9104 34.0820 28.3463 33.8789 28.7822  c
33.5657 29.4677 33.0579 30.1935 32.3554 30.9594  c
31.3017 32.1105 30.6437 32.8045 30.3813 33.0415  c
32.6284 33.0415 l
33.0854 33.0415 33.4060 33.0245 33.5900 32.9907  c
33.7741 32.9568 33.9402 32.8881 34.0883 32.7844  c
34.2364 32.6807 34.3655 32.5336 34.4755 32.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
320 10 54 31 rc
newpath
333.521 34.5302 m
333.521 35.0000 l
324.520 35.0000 l
324.520 34.5302 l
325.091 34.5302 l
325.591 34.5302 325.993 34.4414 326.297 34.2636  c
326.517 34.1451 326.687 33.9420 326.805 33.6543  c
326.898 33.4511 326.945 32.9179 326.945 32.0546  c
326.945 20.7304 l
326.945 19.8502 326.898 19.3001 326.805 19.0800  c
326.712 18.8600 326.524 18.6674 326.240 18.5024  c
325.957 18.3374 325.574 18.2548 325.091 18.2548  c
324.520 18.2548 l
324.520 17.7851 l
333.521 17.7851 l
333.521 18.2548 l
332.950 18.2548 l
332.450 18.2548 332.048 18.3437 331.744 18.5214  c
331.524 18.6399 331.350 18.8431 331.223 19.1308  c
331.130 19.3339 331.084 19.8671 331.084 20.7304  c
331.084 32.0546 l
331.084 32.9349 331.132 33.4850 331.230 33.7050  c
331.327 33.9251 331.517 34.1176 331.801 34.2827  c
332.084 34.4477 332.467 34.5302 332.950 34.5302  c
h
352.627 17.7851 m
352.627 18.2548 l
352.001 18.3564 351.443 18.6907 350.952 19.2578  c
350.596 19.6809 350.067 20.6754 349.365 22.2412  c
343.436 35.3935 l
343.017 35.3935 l
337.114 21.7080 l
336.403 20.0576 335.927 19.0885 335.686 18.8007  c
335.444 18.5130 334.989 18.3310 334.321 18.2548  c
334.321 17.7851 l
342.573 17.7851 l
342.573 18.2548 l
342.293 18.2548 l
341.549 18.2548 341.041 18.3479 340.770 18.5341  c
340.575 18.6611 340.478 18.8473 340.478 19.0927  c
340.478 19.2451 340.512 19.4249 340.580 19.6323  c
340.647 19.8396 340.876 20.3961 341.265 21.3017  c
344.934 29.8710 l
348.336 22.2412 l
348.743 21.3186 348.992 20.7008 349.085 20.3877  c
349.179 20.0745 349.225 19.8079 349.225 19.5878  c
349.225 19.3339 349.157 19.1097 349.022 18.9150  c
348.887 18.7203 348.688 18.5722 348.425 18.4707  c
348.061 18.3268 347.579 18.2548 346.978 18.2548  c
346.978 17.7851 l
h
f
Q
cliprestore
newpath
0 0 m
0 400.000 l
400.000 400.000 l
400.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
